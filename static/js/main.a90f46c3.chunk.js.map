{"version":3,"sources":["CNN-js/cnn.js","CNN-js/math.js","CNN-js/datasetProcessor.js","components/Sidebar.jsx","components/Logo.jsx","components/TopBar.jsx","components/TrainingIndicator.jsx","screens/Dashboard.jsx","other/testDataset.js","other/api.js","redux/actions/networks.js","components/NetworkCard.jsx","redux/actions/servers.js","components/ServerLogin.jsx","components/Error.jsx","components/AnimatedFullScreenCard.jsx","screens/Networks.jsx","other/utils.js","components/LayerCanvas.jsx","components/NetworkShapeVisual.jsx","components/KeyValueTable.jsx","components/NetworkPropagation.jsx","redux/actions/datasets.js","screens/Network.jsx","screens/Training.jsx","other/TrainingController.js","components/SpringButton.jsx","components/SelectableBigNetworkList.jsx","components/NetworkSelect.jsx","components/DatasetCard.jsx","components/SelectableBigDatasetList.jsx","components/DatasetSelect.jsx","screens/StartTraining.jsx","redux/actions/training.js","screens/Datasets.jsx","components/ButtonWithConfirmation.jsx","components/ConfusionMatrix.jsx","components/Table.jsx","screens/TrainingProgress.jsx","screens/Dataset.jsx","components/App.jsx","redux/reducers/colors.js","redux/reducers/structure.js","redux/reducers/networks.js","redux/reducers/servers.js","redux/reducers/training.js","redux/reducers/datasets.js","redux/reducers/index.js","redux/actions/colors.js","redux/actions/structure.js","serviceWorker.js","index.js","res/cnnjs-logo.svg","CNN-js/imageProcessor.js"],"names":["require","matrixMultiply","matrixDot","transpose","correlate","convolute","doubleInverse","maxPool","getDimension","flattenDeep","matrixAdd","deepMap","backPropagateCorrelation","update2Dmatrix","maxIndex","sum","sigm","x","Math","exp","ActivationFunctions","RELU","norm","derivative","SIGMOID","TANH","tanh","pow","CNN","shape","confirmShape","this","initialShape","map","s","Object","assign","applyActivationFunctionToShape","errorF","expected","actual","dErrorF","learningRate","layers","dlayers","weights","biases","serializeParams","forEach","p","randomBiasF","Array","length","fill","_","i","type","LayerType","FC","FLATTEN","l","d","h","w","fan_in","fan_out","random","sqrt","CONV","k","f","dataset","epochs","decay","onProgress","onEnd","epoch","error","correct","example","out","forwardPropagate","input","backpropagate","output","updateWeights","getError","classCount","netOut","data","Error","POOL","v","isNaN","af","returnArray","dout","j","reduce","a","b","daf","y","darray","i1","temp","dF","dI","dB","dIn","maxCoords","z","coords","afName","cm","stats","avgSum","precision","recall","f1Score","nanCount","avg","INPUT","ActivationFunction","Layer","NetworkArchitectures","LeNet5","LeNet5Color","r","a1","inputs","filters","stride","padding","F","D","H","parseInt","W","filter","filterZ","j1","max","Infinity","module","exports","coordinateMode","layer2d","outY","outX","outLayer","y1","x1","arr1","acc","val","concat","dOut","m","f_d","f_i","f_j","dOut_i","dOut_j","in_i1","in_j1","in_d","in_i","in_j","f_i1","f_j1","dOutM","dA","c","softmax","sum1","index","deepNormalize","arr","max1","e","vectorize","label","outArr","deepCopyArrayShape","openDatasetFromBuffer","buffer","imageColorDepth","imageSize","datasetArray","Uint8Array","imageChannelPixelCount","imagePixelCount","rowCount","console","log","n","datasetToUint8Array","vectorizeDatasetLabels","outLength","stringToUint8Array","str","buf","ArrayBuffer","bufView","strLen","charCodeAt","uint8ArrayToString","outStr","String","fromCharCode","apply","subarray","normalizeInputData","SidebarWrapper","styled","aside","props","sidebarwidth","darkMode","background","primarycolor","SidebarInside","div","SidebarItemLink","NavLink","attrs","activeClassName","primarytextcolor","CustomRightIcon","img","connect","state","colors","screens","structure","screen","ScreenIcon","icon","fullName","to","path","exact","exactLink","style","paddingRight","height","width","customRightIcon","Logo","LogoImg","LogoText","h2","textcolor","src","logo","alt","TopBarStyled","topbarheight","topbarbackground","AboveSidebar","AboveScreens","keys","training","flat","size","color","DashboardWrapper","CenterImage","CenterChild","TabLink","tab","iconStyle","href","transform","charAt","toUpperCase","slice","id","name","colorDepth","normalizeMax","window","deleteDatabase","indexedDB","openDb","Promise","resolve","reject","promiseDb","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","addRecord","store_name","then","tx","transaction","objectStore","put","getRecord","get","getAllRecordsAsObject","keyProp","openCursor","cursor","value","continue","getDataset","server","url","catch","fetch","headers","Authorization","apiToken","res","json","err","fetchNetworks","dispatch","localExisting","deserialized","stringCNNIndex","o","method","response","getNetworks","networks","reduced","setNetwork","process","newNetwork","neuralNet","net_id","Date","getTime","JSON","parse","stringify","createNetwork","fetchNetwork","networkId","requestNetwork","saved","getNetwork","net","network","networkSuccess","networkError","setNetworkApi","cardWrapperCss","css","backgroundbyelevation","accenttextcolor","CardWrapper","Link","CardWrapperNoLink","BottomWrapper","NetworkTitle","h4","NetworkImage","NetworkImageDiv","onClick","draggable","getRef","Wrapper","ref","AddNetworkWrapper","nohover","StyledForm","form","StyledSubmit","StyledInput","AddNetworkCard","onclick","useState","setName","networkShapeIndex","setNetworkShapeIndex","show","setShow","primaryColor","onSubmit","preventDefault","networkArchitectures","onChange","evt","placeholder","NetworkCardParentWrapper","small","Title","h3","cardMode","NetworkCards","NetworkScreenTitleWrapper","FlexCenter","NetworkCardParent","children","title","customRightButton","loginToServer","user","pass","body","token","login","ServerLoginWrapper","subaccenttextcolor","StyledInputButton","ErrorDiv","errorcolor","loginServer","unload","setUser","setPass","translateError","stack","rotate","keyframes","StyledReplay","MdReplay","spinning","retryFunction","animation","setAnimation","toString","animated","AnimatedCard","startFromElement","contentFunction","fullscreen","onCloseCallback","innerDivRef","setInnerDivRef","wrapperRef","setWrapperRef","setResizeUpdater","closing","setClosing","closed","setClosed","prevStyle","getBoundingClientRect","startComputedStyle","getComputedStyle","opacity","wrapperDivStyle","top","left","innerDivStyle","startAnimatedProps","boxShadow","borderWidth","cardProps","useSpring","from","borderRadius","borderColor","borderStyle","overflow","config","gentle","clamp","onRest","wrapperProps","resizeHandler","React","useEffect","addEventListener","removeEventListener","boxSizing","DownloadButton","InnerNetworkSelect","FileSelect","ConfirmButton","Networks","networkGroupsSmall","downloadRef","importServer","undefined","importNetworkName","servers","uniqueName","isLoading","setState","prevState","key","NetworkCard","createNewNetwork","ServerLogin","AnimatedFullScreenCard","close","onDrop","acceptedFiles","file","reader","FileReader","onabort","onload","networkJSON","readAsText","getRootProps","getInputProps","Component","maxProperties","dataArray","minProperties","min","array","setRef","imageData","prev","positiveSlice","negativeSlice","getContext","putImageData","ImageData","Uint8ClampedArray","WrapperCard","NetworkVisualWrapper","NetworkLayer","FilterLayer","NetworkFilterAndInput","NetworkLayerWrapper","LayerTypeTitle","h5","LayerSpacer","getSliceSize","normalizedLayer","getFilterSliceSize","sliceSize","filterSize","LAYER_STACK_slice","LAYER_STACK_filter_wrapper","LAYER_STACK_FILTER_inner","LAYER_STACK_wrapper","LAYER_STACK_slice_component","layer","withData","layerNormalized","extended","layerData","filterData","sliceheight","layerSliceProps","filterProps","sliceSizeProps","LayerCanvas","position","LAYER_STACK","withFilter","sliceWidth","sliceHeight","wrapperStyle","marginTop","marginLeft","normalizeLayers","nanValue","NaN","normalized","normalizedRecord","normalizeData","setExtended","layersNormalized","layerShape","find","Card","Key","Value","KeyValueWrapper","editFunction","include","PropagationWrapper","FirstLayerDisplay","OutputLayer","Row","tr","OutputTable","table","Prediction","round","rawData","image","setOutput","imageArray","setImageArray","softmaxed","setSoftmaxed","imageToArray","imageArr","textAlign","sort","inner","labels","datasetsSuccess","datasets","fetchDatasets","testDataset","full","getDatasets","datasetId","metadata","responded","arrayBuffer","newDataset","message","fetchDataset","requestDataset","datasetSuccess","datasetError","requestNewDataset","apiNewDataset","newDatasetSuccess","NetworkWrapper","Subtitle","ImageSelect","UploadRoot","getDatasetLen","Network","match","params","serverUniqueName","uploadedImage","selectedDatasetImageIndex","checkForError","bind","refreshRequestSent","needToRefreshNetwork","notLoggedIn","setTimeout","redirect","pathname","fileName","document","createElement","URL","createObjectURL","Blob","download","appendChild","click","removeChild","exportText","replace","NetworkShapeVisual","networkNew","accept","selectedDatasetIndex","readAsArrayBuffer","options","items","dId","fontSize","NetworkPropagation","inputArray","datasetProps","newValue","networkLoading","TrainingWrapper","TrainingHeader","Column","TrainingList","customLinkFunction","row","accuracy","StartButton","TrainingScreenWrapper","TrainingScreenTitleWrapper","Training","trained","_row","TrainingController","trainingParams","datasetToBeTrained","emitEvent","trainingInstance","Worker","postMessage","trainingProps","cmd","terminate","eventsListeners","fn","push","SpringButtonStyled","textColor","SpringButton","text","hovered","setHovered","clicked","setClicked","buttonStyle","onMouseEnter","onMouseLeave","FullCenter","SelectableBigNetworkList","onSelect","refreshFunction","selected","select","serversWithError","setServersWithError","NetworkSelectWrapper","SelectNetworkWrapper","InnerNoOverflow","innerRef","onNetworkSelect","selectedId","selectId","setOpen","closeCard","DatasetImage","display","flexGrow","DatasetImageDiv","DatasetTitle","serverId","AddDatasetWrapper","InnerDatasetSelect","ParameterRow","ParameterName","ParameterInput","LeftRight","LeftRightChild","StyledTextAreaWrapper","StyledTextArea","textarea","AddDatasetCard","newDatasetConnected","rawDataset","setRawDataset","setFileName","setImageSize","setColorDepth","setNormalizeMax","crop","setCrop","setError","setLabels","split","binaryStr","SelectableBigDatasetList","DatasetCard","serverDatasetsError","DatasetSelectWrapper","SelectDatasetWrapper","onDatasetSelect","TwoPart","TwoPartChild","TwoPartVertical","TwoPartVerticalChild","StartTrainingButtonWrapper","StartTraining","datasetServer","networkServer","batch_size","splice","arrayUnique","startTraining","trainedNetwork","trainingProgress","startLearning","Datasets","serverDatasetsLoading","heigh","ButtonWrapper","onConfirm","StyledTable","StyledRow","StyledData","td","tint","StyledDataFlipped","StyledDataStart","StyledCenterData","TableContainer","TableMenuTop","TableMenuRestBottom","TableMenuLeft","TableRest","updateVar","statsCallback","setCm","normalizedCm","setNormalizedCm","setStats","loading","setLoading","instance","confusion","stats1","confusionMatrixStats","confusionMatrix","predictedCount","TableWrapper","TableRow","TableColumn","keyInner","ChardCard","ChartWrapper","chartRef","chartInstance","update","legend","scales","xAxes","ticks","maxX","suggestedMin","suggestedMax","reference","TopBottom","TopBottomChild","TrainingProgressWrapper","TrainingProgress","serverName","trainingData","errArr","accuracyArr","Table","ConfusionMatrix","paddingLeft","current","ButtonWithConfirmation","DatasetWrapper","PreviewWrapper","Preview","PreviewControls","PreviewButton","Dataset","datasetData","datasetPreviewIndex","datasetPreviewSize","selectedNetwork","selectedNetworkServer","confusionStats","needToRefreshDataset","datasetsError","paddingTop","component","FaQuestion","MdPhotoLibrary","MdSchool","TrainingIndicator","AppWrapper","SideAndScreens","ScreenSwitcher","localStorage","getItem","defaultState","savedServers_array","savedServers","datasetsLoading","combineReducers","action","property","servers_store","setItem","learningRateArr","serverCopy","Boolean","location","hostname","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","Jimp","resizeImage","sizeDim","greyscale","resize","read","resizedImage","pixel","intToRGBA","getPixelColor","g","arrayToImage","writeTo","setPixelColor","rgbaToInt","write","getBuffer","AUTO"],"mappings":"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","file":"static/js/main.a90f46c3.chunk.js","sourcesContent":["\"use strict\";\r\n\r\nvar {\r\n  matrixMultiply,\r\n  matrixDot,\r\n  transpose,\r\n  convolute,\r\n  doubleInverse,\r\n  correlate,\r\n  getDimension,\r\n  maxPool,\r\n  flattenDeep,\r\n  matrixAdd,\r\n  deepMap,\r\n  backPropagateCorrelation,\r\n  update2Dmatrix,\r\n  maxIndex,\r\n  sum,\r\n} = require(\"./math\");\r\n\r\nconst sigm = x => 1 / (1 + Math.exp(-x));\r\nexport const ActivationFunctions = {\r\n  RELU: {norm: x => (x > 0 ? x : 0), derivative: x => (x > 0 ? 1 : 0)},\r\n  SIGMOID: {\r\n    norm: sigm,\r\n    derivative: x => sigm(x) * (1 - sigm(x)), //x => x * (1 - x) /*dSigmoidWithoutSigmoid*/,\r\n  },\r\n  TANH: {norm: Math.tanh, derivative: x => 1 - Math.pow(Math.tanh(x), 2)},\r\n};\r\n\r\n/**\r\n * Convolutional neural network, recieves a shape, give it data, train in and save it\r\n */\r\nexport class CNN {\r\n  /**\r\n   * The constructor takes in the shape of the network and\r\n   * initalizes weights and filters corresponding to the shape\r\n   * @param {Array<Layer>} shape Array of Layer instances or a serialized network\r\n   */\r\n  constructor(shape) {\r\n    if (shape.shape) {\r\n      CNN.confirmShape(shape.shape);\r\n      this.initialShape = shape.initialShape.map(s => Object.assign({}, s));\r\n      this.shape = CNN.applyActivationFunctionToShape(shape.initialShape);\r\n\r\n      this.errorF = (expected, actual) => Math.pow(actual - expected, 2) / 2;\r\n      this.dErrorF = (expected, actual) => actual - expected;\r\n\r\n      this.learningRate = shape.learningRate;\r\n\r\n      this.layers = shape.layers;\r\n      this.dlayers = shape.dlayers;\r\n      this.weights = shape.weights;\r\n      this.biases = shape.biases;\r\n      this.serializeParams = shape.serializeParams;\r\n      if (shape.serializeParams) {\r\n        shape.serializeParams.forEach(p => {\r\n          this[p] = shape[p];\r\n        });\r\n      }\r\n    } else {\r\n      CNN.confirmShape(shape);\r\n      this.initialShape = shape.map(s => Object.assign({}, s));\r\n      this.shape = CNN.applyActivationFunctionToShape(shape);\r\n\r\n      const xavier = (fan_in, fan_out) =>\r\n        Math.random() * Math.sqrt(6 / (fan_in + fan_out));\r\n      const kaiming = (fan_in, fan_out) =>\r\n        (Math.random() * 2 - 1) * Math.sqrt(2 / fan_in);\r\n      const randomBiasF = () => 0;\r\n      this.errorF = (expected, actual) => Math.pow(actual - expected, 2) / 2;\r\n      this.dErrorF = (expected, actual) => actual - expected;\r\n\r\n      this.learningRate = -0.01;\r\n\r\n      this.layers = new Array(shape.length).fill(0).map((_, i) => {\r\n        if (\r\n          shape[i].type == LayerType.FC ||\r\n          shape[i].type == LayerType.FLATTEN\r\n        ) {\r\n          return new Array(shape[i].l).fill(0);\r\n        } else {\r\n          return new Array(shape[i].d)\r\n            .fill(0)\r\n            .map(() =>\r\n              new Array(shape[i].h)\r\n                .fill(0)\r\n                .map(() => new Array(shape[i].w).fill(0)),\r\n            );\r\n        }\r\n      });\r\n\r\n      this.dlayers = []; // dlayers are filled on the backpropagation step\r\n\r\n      this.weights = new Array(shape.length).fill(0).map((_, i) => {\r\n        if (i != 0) {\r\n          if (shape[i].type == LayerType.FC) {\r\n            // if layer is FC or FLATTEN, init a weight matrix\r\n            return new Array(shape[i - 1].l)\r\n              .fill(0)\r\n              .map(() =>\r\n                new Array(shape[i].l)\r\n                  .fill(0)\r\n                  .map(l => xavier(shape[i - 1].l, shape[i].l)),\r\n              );\r\n          } else if (shape[i].type == LayerType.CONV) {\r\n            // else initialize a new filter\r\n            return new Array(shape[i].k)\r\n              .fill(0)\r\n              .map(() =>\r\n                new Array(shape[i - 1].d)\r\n                  .fill(0)\r\n                  .map(() =>\r\n                    new Array(shape[i].f)\r\n                      .fill(0)\r\n                      .map(() =>\r\n                        new Array(shape[i].f)\r\n                          .fill(0)\r\n                          .map((_, l) =>\r\n                            kaiming(\r\n                              shape[i - 1].w * shape[i - 1].d * shape[i - 1].h,\r\n                            ),\r\n                          ),\r\n                      ),\r\n                  ),\r\n              );\r\n          }\r\n        }\r\n      });\r\n\r\n      // init biases as the same sizes of their layers\r\n      this.biases = new Array(shape.length).fill(0).map((_, i) => {\r\n        if (i != 0) {\r\n          if (shape[i].type == LayerType.FC) {\r\n            return new Array(this.shape[i].l).fill(0).map(randomBiasF);\r\n          } else {\r\n            return new Array(this.shape[i].d).fill(0).map(randomBiasF);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  static applyActivationFunctionToShape(shape) {\r\n    return shape.map(s =>\r\n      s.afName\r\n        ? Object.assign(s, {\r\n            af: ActivationFunctions[s.afName].norm,\r\n            daf: ActivationFunctions[s.afName].derivative,\r\n          })\r\n        : s,\r\n    );\r\n  }\r\n\r\n  sgd({\r\n    dataset,\r\n    epochs,\r\n    learningRate = this.learningRate,\r\n    decay = 0,\r\n    onProgress,\r\n    onEnd,\r\n  }) {\r\n    this.learningRate = learningRate;\r\n\r\n    for (let epoch = 0; epoch < epochs; epoch++) {\r\n      let error = 0;\r\n      let correct = 0;\r\n      for (let example = 0; example < dataset.length; example++) {\r\n        let out = this.forwardPropagate(dataset[example].input);\r\n        this.backpropagate(dataset[example].output);\r\n        this.updateWeights();\r\n        const err = this.getError(dataset[example].output);\r\n        error += err;\r\n\r\n        if (maxIndex(out) === maxIndex(dataset[example].output)) {\r\n          correct++;\r\n        }\r\n      }\r\n\r\n      if (onProgress)\r\n        onProgress(\r\n          epoch,\r\n          correct / dataset.length,\r\n          error / dataset.length,\r\n          this.learningRate,\r\n        );\r\n      this.learningRate = learningRate / (1 + decay * epoch);\r\n    }\r\n\r\n    if (onEnd) onEnd();\r\n  }\r\n\r\n  confusionMatrix(dataset) {\r\n    const classCount = this.layers[this.layers.length - 1].length;\r\n    const out = new Array(classCount)\r\n      .fill(0)\r\n      .map(() => new Array(classCount).fill(0));\r\n    for (let i = 0; i < dataset.length; i++) {\r\n      const netOut = this.forwardPropagate(dataset[i].input);\r\n      if (dataset[i].output.length)\r\n        out[maxIndex(dataset[i].output)][maxIndex(netOut)]++;\r\n      else out[dataset[i].output][maxIndex(netOut)]++;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  static confusionMatrixStats(cm) {\r\n    const classCount = cm.length;\r\n    const stats = {actual: []};\r\n    const avgSum = {precision: 0, recall: 0, f1Score: 0};\r\n    const nanCount = {precision: 0, recall: 0, f1Score: 0};\r\n\r\n    for (let i = 0; i < classCount; i++) {\r\n      const precision = cm[i][i] / sum(cm.map(k => k[i]));\r\n      const recall = cm[i][i] / sum(cm[i]);\r\n      stats.actual[i] = {\r\n        precision,\r\n        recall,\r\n        f1Score: (2 * (precision * recall)) / (precision + recall),\r\n      };\r\n      if (!isNaN(stats.actual[i].precision))\r\n        avgSum.precision += stats.actual[i].precision;\r\n      else nanCount.precision += 1;\r\n\r\n      if (!isNaN(stats.actual[i].recall))\r\n        avgSum.recall += stats.actual[i].recall;\r\n      else nanCount.recall += 1;\r\n\r\n      if (!isNaN(stats.actual[i].f1Score))\r\n        avgSum.f1Score += stats.actual[i].f1Score;\r\n      else nanCount.f1Score += 1;\r\n    }\r\n\r\n    stats.avg = {\r\n      precision: avgSum.precision / (classCount - nanCount.precision),\r\n      recall: avgSum.recall / (classCount - nanCount.recall),\r\n      f1Score: avgSum.f1Score / (classCount - nanCount.f1Score),\r\n    };\r\n\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * Pass the data trough all layers and return the last one\r\n   * @param {Array<Array<Array<Number>>>} data\r\n   */\r\n  forwardPropagate(data) {\r\n    if (data.length != this.shape[0].d)\r\n      throw new Error(\r\n        `data depth (${data.length}) doesnt match required depth (${this.shape[0].d})`,\r\n      );\r\n\r\n    if (data[0].length != this.shape[0].h)\r\n      throw new Error(\r\n        `data height (${data[0].length}) doesnt match required height (${this.shape[0].h})`,\r\n      );\r\n\r\n    if (data[0][0].length != this.shape[0].w)\r\n      throw new Error(\r\n        `data width (${data[0][0].length}) doesnt match required width (${this.shape[0].w})`,\r\n      );\r\n\r\n    this.layers[0] = data;\r\n\r\n    for (let i = 1; i < this.shape.length; i++) {\r\n      switch (this.shape[i].type) {\r\n        case LayerType.CONV:\r\n          this.layers[i] = correlate(\r\n            this.layers[i - 1],\r\n            this.weights[i],\r\n            this.shape[i].s,\r\n            this.shape[i].p,\r\n            this.biases[i],\r\n          );\r\n          break;\r\n        case LayerType.POOL:\r\n          this.layers[i] = maxPool(\r\n            this.layers[i - 1],\r\n            this.shape[i].f,\r\n            this.shape[i].s,\r\n          );\r\n          break;\r\n        case LayerType.FLATTEN:\r\n          this.layers[i] = flattenDeep(this.layers[i - 1]);\r\n          break;\r\n        case LayerType.FC:\r\n          this.layers[i] = matrixAdd(\r\n            matrixDot([this.layers[i - 1]], this.weights[i])[0],\r\n            this.biases[i],\r\n          );\r\n          break;\r\n      }\r\n\r\n      // Check for NaN before and after activation\r\n      deepMap(this.layers[i], (x, i, v) => {\r\n        if (isNaN(x)) throw new Error(`[${i}] output NaN before activation`);\r\n        return x;\r\n      });\r\n\r\n      if (this.shape[i].af)\r\n        this.layers[i] = deepMap(this.layers[i], x => this.shape[i].af(x));\r\n\r\n      deepMap(this.layers[i], x => {\r\n        if (isNaN(x)) throw new Error(`[${i}] output NaN after activation`);\r\n        return x;\r\n      });\r\n\r\n      // console.log(i)\r\n    }\r\n\r\n    // return last layer\r\n    return this.layers[this.layers.length - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array} exp expected output\r\n   * @param {boolean} returnArray does the function return the array?\r\n   */\r\n  getError(exp, returnArray = false) {\r\n    if (exp.length != this.shape[this.shape.length - 1].l)\r\n      throw new Error(\r\n        `expected array length (${\r\n          exp.length\r\n        }) doesn't equal last layer length (${\r\n          this.shape[this.shape.length - 1].l\r\n        })`,\r\n      );\r\n\r\n    let dout = this.layers[this.shape.length - 1].map((v, j) =>\r\n      this.errorF(exp[j], v),\r\n    );\r\n    this.error =\r\n      dout.reduce((a, b) => a + b, 0) /\r\n      this.layers[this.shape.length - 1].length;\r\n\r\n    if (returnArray) return dout;\r\n    else return this.error;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array} exp expected output\r\n   */\r\n  backpropagate(exp, updateWeights = false) {\r\n    if (exp.length != this.shape[this.shape.length - 1].l)\r\n      throw new Error(\r\n        `expected array length (${\r\n          exp.length\r\n        }) doesn't equal last layer length (${\r\n          this.shape[this.shape.length - 1].l\r\n        })`,\r\n      );\r\n\r\n    for (let i = this.shape.length - 1; i > 0; i--) {\r\n      if (this.shape[i].type == LayerType.FC) {\r\n        if (i == this.shape.length - 1) {\r\n          this.dlayers[i] = this.layers[i].map((v, j) =>\r\n            this.dErrorF(exp[j], v),\r\n          );\r\n        } else {\r\n          this.dlayers[i] = matrixDot(\r\n            [this.dlayers[i + 1]],\r\n            transpose(this.weights[i + 1]),\r\n          )[0];\r\n        }\r\n\r\n        if (this.shape[i].daf)\r\n          this.dlayers[i] = matrixMultiply(\r\n            this.dlayers[i],\r\n            deepMap(this.layers[i], v => this.shape[i].daf(v)),\r\n          );\r\n\r\n        if (updateWeights)\r\n          for (let y = 0; y < this.weights[i].length; y++)\r\n            for (let x = 0; x < this.weights[i][y].length; x++) {\r\n              this.weights[i][y][x] +=\r\n                this.layers[i - 1][y] * this.dlayers[i][x] * this.learningRate;\r\n            }\r\n\r\n        //TODO backpropagate for bias\r\n      } else if (this.shape[i].type == LayerType.FLATTEN) {\r\n        let darray;\r\n        if (i == this.shape.length - 1) {\r\n          darray = this.layers[i].map((v, j) => this.dErrorF(exp[j], v));\r\n          //TODO test if FLATTEN layer works as a last layer\r\n        } else {\r\n          darray = matrixDot(\r\n            [this.dlayers[i + 1]],\r\n            transpose(this.weights[i + 1]),\r\n          )[0];\r\n        }\r\n\r\n        if (this.shape[i + 1].daf)\r\n          darray = matrixMultiply(\r\n            darray,\r\n            deepMap(this.layers[i], v => this.shape[i + 1].daf(v)),\r\n          );\r\n\r\n        this.dlayers[i] = darray;\r\n\r\n        this.dlayers[i - 1] = new Array(this.shape[i].d)\r\n          .fill(0)\r\n          .map((_, i1) =>\r\n            new Array(this.shape[i].h)\r\n              .fill(0)\r\n              .map((_, j) =>\r\n                new Array(this.shape[i].w)\r\n                  .fill(0)\r\n                  .map(\r\n                    (_, k) =>\r\n                      darray[\r\n                        i1 * this.shape[i].h * this.shape[i].w +\r\n                          j * this.shape[i].h +\r\n                          k\r\n                      ],\r\n                  ),\r\n              ),\r\n          );\r\n      } else if (this.shape[i].type == LayerType.CONV) {\r\n        const temp = backPropagateCorrelation(\r\n          this.weights[i],\r\n          this.dlayers[i],\r\n          this.layers[i - 1],\r\n          this.shape[i].s,\r\n          this.shape[i].p,\r\n        );\r\n        const {dF, dI, dB} = temp;\r\n        this.dlayers[i - 1] = dI;\r\n        //console.log(dI.length, dI);\r\n\r\n        // pass the derivatives trough the derivative of the activation function\r\n        if (this.shape[i].daf)\r\n          this.dlayers[i - 1] = matrixMultiply(\r\n            this.dlayers[i - 1],\r\n            deepMap(this.layers[i - 1], v => this.shape[i].daf(v)),\r\n          );\r\n\r\n        //update weights\r\n        if (updateWeights)\r\n          this.weights[i] = update2Dmatrix(\r\n            this.weights[i],\r\n            dF,\r\n            this.learningRate,\r\n          );\r\n\r\n        //update biases\r\n        if (updateWeights)\r\n          this.biases[i] = this.biases[i].map(\r\n            (b, i) => b + dB[i] * this.learningRate,\r\n          );\r\n      } else if (this.shape[i].type == LayerType.POOL) {\r\n        let dIn = new Array(this.shape[i - 1].d)\r\n          .fill(0)\r\n          .map(() =>\r\n            new Array(this.shape[i - 1].h)\r\n              .fill(0)\r\n              .map(() => new Array(this.shape[i - 1].w).fill(0)),\r\n          );\r\n        let maxCoords = maxPool(\r\n          this.layers[i - 1],\r\n          this.shape[i].f,\r\n          this.shape[i].s,\r\n          true,\r\n        );\r\n\r\n        for (let z = 0; z < this.shape[i].d; z++) {\r\n          for (let y = 0; y < this.shape[i].h; y++) {\r\n            for (let x = 0; x < this.shape[i].w; x++) {\r\n              let coords = maxCoords[z][y][x];\r\n              dIn[z][coords.y][coords.x] = this.dlayers[i][z][y][x];\r\n            }\r\n          }\r\n        }\r\n\r\n        this.dlayers[i - 1] = dIn;\r\n\r\n        if (this.shape[i].daf)\r\n          this.dlayers[i - 1] = matrixMultiply(\r\n            this.dlayers[i - 1],\r\n            deepMap(this.layers[i - 1], v => this.shape[i].daf(v)),\r\n          );\r\n      }\r\n\r\n      deepMap(this.dlayers[i], x => {\r\n        if (isNaN(x)) throw new Error(`[${i}] output ${x} after derivation`);\r\n        return x;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateWeights() {\r\n    for (let i = this.shape.length - 1; i > 0; i--) {\r\n      if (this.shape[i].type == LayerType.FC) {\r\n        for (let y = 0; y < this.weights[i].length; y++)\r\n          for (let x = 0; x < this.weights[i][y].length; x++) {\r\n            this.weights[i][y][x] +=\r\n              this.layers[i - 1][y] * this.dlayers[i][x] * this.learningRate;\r\n\r\n            this.dlayers[i][x] = 0;\r\n          }\r\n\r\n        //TODO update bias\r\n      } else if (this.shape[i].type == LayerType.CONV) {\r\n        const temp = backPropagateCorrelation(\r\n          this.weights[i],\r\n          this.dlayers[i],\r\n          this.layers[i - 1],\r\n          this.shape[i].s,\r\n          this.shape[i].p,\r\n        );\r\n        const {dF, dI, dB} = temp;\r\n        this.weights[i] = update2Dmatrix(\r\n          this.weights[i],\r\n          dF,\r\n          this.learningRate,\r\n        );\r\n\r\n        //update biases\r\n        this.biases[i] = this.biases[i].map(\r\n          (b, i) => b + dB[i] * this.learningRate,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  static confirmShape(shape) {\r\n    if (shape[0].type != LayerType.INPUT)\r\n      throw new Error(\r\n        `the first layer isn't an input layer, instead is: ${shape[0].type}`,\r\n      );\r\n    for (let i = 1; i < shape.length; i++) {\r\n      if (shape[i].type == LayerType.CONV) {\r\n        if (\r\n          shape[i].w !=\r\n          (shape[i - 1].w - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\r\n        )\r\n          throw new Error(\r\n            `[${i}] CONV: outW doesn't equal to calculated outW expected: ${\r\n              (shape[i - 1].w - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\r\n            }, actual: ${shape[i].w}`,\r\n          );\r\n\r\n        if (\r\n          shape[i].h !=\r\n          (shape[i - 1].h - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\r\n        )\r\n          throw new Error(\r\n            `[${i}] CONV: outH doesn't equal to calculated outH expected: ${\r\n              (shape[i - 1].h - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\r\n            }, actual: ${shape[i].h}`,\r\n          );\r\n\r\n        if (shape[i].d != shape[i].k)\r\n          throw new Error(\r\n            `[${i}] CONV: number of kernels doesn't equal outD kernels: ${shape[i].k}, outD: ${shape[i].d}`,\r\n          );\r\n      } else if (shape[i].type == LayerType.POOL) {\r\n        if (shape[i].w != (shape[i - 1].w - shape[i].f) / shape[i].s + 1)\r\n          throw new Error(\r\n            `[${i}] POOL: outW doesn't equal to calculated outW expected: ${\r\n              (shape[i - 1].w - shape[i].f) / shape[i].s + 1\r\n            }, actual: ${shape[i].w}`,\r\n          );\r\n\r\n        if (shape[i].h != (shape[i - 1].h - shape[i].f) / shape[i].s + 1)\r\n          throw new Error(\r\n            `[${i}] POOL: outH doesn't equal to calculated outH expected: ${\r\n              (shape[i - 1].h - shape[i].f) / shape[i].s + 1\r\n            }, actual: ${shape[i].h}`,\r\n          );\r\n\r\n        if (shape[i - 1].d != shape[i].d)\r\n          throw new Error(\r\n            `[${i}] POOL: outD doesn't equal inZ inZ: ${\r\n              shape[i - 1].d\r\n            }, outD: ${shape[i].d}`,\r\n          );\r\n      } else if (shape[i].type == LayerType.FC) {\r\n        if (\r\n          shape[i - 1].type != LayerType.FC &&\r\n          shape[i - 1].type != LayerType.FLATTEN\r\n        )\r\n          throw new Error(\r\n            `[${i}] FC: The previous layer should be type FC or FLATTEN`,\r\n          );\r\n      } else if (shape[i].type == LayerType.FLATTEN) {\r\n        if (\r\n          shape[i - 1].type == LayerType.FLATTEN ||\r\n          shape[i - 1].type == LayerType.FC\r\n        )\r\n          throw new Error(`[${i}] FLATTEN: The previous layer can't be flat`);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport const LayerType = {\r\n  CONV: 0,\r\n  POOL: 1,\r\n  FC: 2,\r\n  INPUT: 3,\r\n  FLATTEN: 4,\r\n};\r\n\r\nexport const ActivationFunction = {\r\n  RELU: `RELU`,\r\n  SIGMOID: `SIGMOID`,\r\n  TANH: `TANH`,\r\n};\r\n\r\nexport const Layer = {\r\n  /**\r\n   * The input layer of a network\r\n   * @param {Number} w width of the input\r\n   * @param {Number} h height of the input\r\n   * @param {Number} d depth of the input\r\n   */\r\n  INPUT: function (w, h, d) {\r\n    this.type = LayerType.INPUT;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.d = d;\r\n  },\r\n  /**\r\n   * Convolution layer hyperparameters\r\n   * @param {Number} w width of the output\r\n   * @param {Number} h height of the output\r\n   * @param {Number} d depth of the output\r\n   * @param {Number} f filter size (x,y)\r\n   * @param {Number} k number of filters\r\n   * @param {Number} s stride\r\n   * @param {Number} p zero padding\r\n   * @param {function(Number):Number} afName activation function name\r\n   */\r\n  CONV: function (w, h, d, f, k, s, p, afName) {\r\n    this.type = LayerType.CONV;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.d = d;\r\n    this.f = f;\r\n    this.k = k;\r\n    this.s = s;\r\n    this.p = p;\r\n    this.afName = afName;\r\n  },\r\n  /**\r\n   * Pooling layer hyperparameters\r\n   * @param {Number} w width of the output\r\n   * @param {Number} h height of the output\r\n   * @param {Number} d depth of the output\r\n   * @param {Number} f filter size\r\n   * @param {Number} s stride\r\n   * @param {function(Number):Number} afName activation function\r\n   */\r\n  POOL: function (w, h, d, f, s, afName) {\r\n    this.type = LayerType.POOL;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.d = d;\r\n    this.f = f;\r\n    this.s = s;\r\n    this.afName = afName;\r\n  },\r\n  /**\r\n   * A fully connected layer\r\n   * @param {Number} l length of the layer\r\n   * @param {function(Number):Number} afName activation function name\r\n   */\r\n  FC: function (l, afName) {\r\n    this.type = LayerType.FC;\r\n    this.l = l;\r\n    this.afName = afName;\r\n  },\r\n  /**\r\n   * Convert a convolutional layerr to a fully connected layer\r\n   * @param {Number} w width of the input\r\n   * @param {Number} h height of the input\r\n   * @param {Number} d depth of the input\r\n   */\r\n  FLATTEN: function (w, h, d) {\r\n    this.type = LayerType.FLATTEN;\r\n    this.w = w;\r\n    this.h = h;\r\n    this.d = d;\r\n    this.l = w * h * d;\r\n  },\r\n};\r\n\r\nexport const NetworkArchitectures = {\r\n  LeNet5: [\r\n    new Layer.INPUT(32, 32, 1),\r\n    new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\r\n    new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\r\n    new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\r\n    new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\r\n    new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\r\n    new Layer.FLATTEN(1, 1, 120),\r\n    //new Layer.FC(84, ActivationFunction.TANH),\r\n    new Layer.FC(10, ActivationFunction.TANH),\r\n  ],\r\n  LeNet5Color: [\r\n    new Layer.INPUT(32, 32, 3),\r\n    new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\r\n    new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\r\n    new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\r\n    new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\r\n    new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\r\n    new Layer.FLATTEN(1, 1, 120),\r\n    //new Layer.FC(84, ActivationFunction.TANH),\r\n    new Layer.FC(10, ActivationFunction.TANH),\r\n  ],\r\n  // CustomReducedLeNet5Color: [\r\n  //   new Layer.INPUT(32, 32, 3),\r\n  //   new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\r\n  //   new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\r\n  //   new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\r\n  //   new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\r\n  //   new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\r\n  //   new Layer.FLATTEN(1, 1, 120),\r\n  //   new Layer.FC(10, ActivationFunction.TANH),\r\n  // ],\r\n};\r\n\r\n/*module.exports = {\r\n  CNN,\r\n  ActivationFunction,\r\n  Layer,\r\n  NetworkArchitectures,\r\n  LayerType,\r\n};*/\r\n","const getDimension = a => {\r\n  const r = (a1, i) => {\r\n    if (a1.length) {\r\n      return r(a1[0], i + 1);\r\n    } else {\r\n      return i;\r\n    }\r\n  };\r\n\r\n  return r(a, 0);\r\n};\r\n\r\n/**\r\n * @callback deepMapCallback\r\n * @param {*} value\r\n * @param {Number} i\r\n * @param {Array} array\r\n */\r\n/**\r\n *\r\n * @param {Array} a the multidimensional array\r\n * @param {deepMapCallback} f the function to be mapped\r\n */\r\nconst deepMap = (a, f) =>\r\n  a.map((v, i, a1) => {\r\n    if (v && v.length) {\r\n      return deepMap(v, f);\r\n    } else {\r\n      return f(v, i, a1);\r\n    }\r\n  });\r\n\r\n/**\r\n * Dot product between 2 2D matrices\r\n * @param {Array<Array<Number>>} a\r\n * @param {Array<Array<Number>>} b\r\n */\r\nconst matrixDot = (a, b) => {\r\n  if (a[0].length != b.length)\r\n    throw new Error(\r\n      `invalid dimensions a -> x (${a[0].length}) should equal b -> y (${b.length})`,\r\n    );\r\n\r\n  const out = [];\r\n  for (let i = 0; i < a.length; i++) {\r\n    // y\r\n    out[i] = [];\r\n    for (let j = 0; j < b[0].length; j++) {\r\n      // x\r\n      out[i][j] = 0;\r\n      for (let j1 = 0; j1 < a[i].length; j1++) {\r\n        out[i][j] += a[i][j1] * b[j1][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n};\r\n\r\n/**\r\n * Multiply two matrices of the same shape elementwise\r\n * @param {Array<Array<Number>>} a\r\n * @param {Array<Array<Number>>} b\r\n */\r\nconst matrixMultiply = (a, b) => {\r\n  if (a.length != b.length) {\r\n    throw new Error(`invalid dimensions, both arrays should have equal shape`);\r\n  } else {\r\n    if (a[0] instanceof Array && b[0] instanceof Array) {\r\n      const out = [];\r\n      for (let i = 0; i < a.length; i++) {\r\n        out[i] = matrixMultiply(a[i], b[i]);\r\n      }\r\n      return out;\r\n    } else if (a[0] instanceof Array != b[0] instanceof Array) {\r\n      throw new Error(\r\n        `invalid dimensions, both arrays should have equal shape`,\r\n      );\r\n    } else {\r\n      const out = [];\r\n      for (let i = 0; i < a.length; i++) {\r\n        out[i] = a[i] * b[i];\r\n      }\r\n      return out;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add two matrices of the same shape elementwise\r\n * @param {Array<Array<Number>>} a\r\n * @param {Array<Array<Number>>} b\r\n */\r\nconst matrixAdd = (a, b) => {\r\n  if (a.length != b.length) {\r\n    throw new Error(`invalid dimensions, both arrays should have equal shape`);\r\n  } else {\r\n    if (a[0] instanceof Array && b[0] instanceof Array) {\r\n      const out = [];\r\n      for (let i = 0; i < a.length; i++) {\r\n        out[i] = matrixAdd(a[i], b[i]);\r\n      }\r\n      return out;\r\n    } else if (a[0] instanceof Array != b[0] instanceof Array) {\r\n      throw new Error(\r\n        `invalid dimensions, both arrays should have equal shape`,\r\n      );\r\n    } else {\r\n      const out = [];\r\n      for (let i = 0; i < a.length; i++) {\r\n        out[i] = a[i] + b[i];\r\n      }\r\n      return out;\r\n    }\r\n  }\r\n};\r\n\r\nconst transpose = a => {\r\n  if (getDimension(a) > 2)\r\n    throw new Error(`transpose supports up to 2d arrays`);\r\n\r\n  if (!a[0].length) a = [a];\r\n\r\n  const out = [];\r\n\r\n  for (let i = 0; i < a[0].length; i++) {\r\n    out[i] = [];\r\n    for (let j = 0; j < a.length; j++) {\r\n      out[i][j] = a[j][i];\r\n    }\r\n  }\r\n\r\n  return out;\r\n};\r\n\r\n/**\r\n * Flips kernels (array of 3d kernels, flips only kernels)\r\n * @param {Array<Array<Array<Array<Number>>>>} a\r\n */\r\nconst doubleInverse = a => {\r\n  if (getDimension(a) == 1) {\r\n    return doubleInverse([[[a]]])[0][0][0];\r\n  } else if (getDimension(a) == 2) {\r\n    return doubleInverse([[a]])[0][0];\r\n  } else if (getDimension(a) == 3) {\r\n    return doubleInverse([a])[0];\r\n  } else {\r\n    const out = [];\r\n    for (let f = 0; f < a.length; f++) {\r\n      out[f] = [];\r\n\r\n      for (let z = 0; z < a[f].length; z++) {\r\n        out[f][z] = [];\r\n\r\n        for (let y = 0; y < a[f][z].length; y++) {\r\n          out[f][z][y] = [];\r\n\r\n          for (let x = 0; x < a[f][z][y].length; x++) {\r\n            out[f][z][y][x] =\r\n              a[f][z][a[f][z].length - y - 1][a[f][z][y].length - x - 1];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return out;\r\n  }\r\n};\r\n\r\n/**\r\n * correlates a 3D input with a 4D filter with a 3D output\r\n * @param {Array<Array<Array<Number>>>} a input array\r\n * @param {Array<Array<Array<Array<Number>>>>} f array of filters\r\n * @param {Number} s stride\r\n * @param {Number} p zero padding\r\n * @param {Number} b array of biases (array of biases for each output layer)\r\n */\r\nconst correlate = (inputs, filters, stride = 1, padding = 0, b = null) => {\r\n  if (filters[0].length != inputs.length) {\r\n    throw new Error(\r\n      `filter depth(${filters[0].length}) doesnt match input depth(${inputs.length})`,\r\n    );\r\n  }\r\n\r\n  if (filters[0][0].length != filters[0][0][0].length) {\r\n    throw new Error(\r\n      `filter should be a square matrix(${filters[0][0].length} != ${filters[0][0][0].length})`,\r\n    );\r\n  }\r\n\r\n  if (b && b.length != filters.length)\r\n    throw new Error(\r\n      `bias depth(${b.length}), should match output depth(${filters.length})`,\r\n    );\r\n\r\n  const F = filters[0][0].length; // Filter height/width\r\n\r\n  const D = inputs.length,\r\n    H = parseInt((inputs[0].length - F + 2 * padding) / stride + 1), // output height\r\n    W = parseInt((inputs[0][0].length - F + 2 * padding) / stride + 1); // output width\r\n\r\n  return filters.map((filter, filterZ) => {\r\n    const out = [];\r\n\r\n    // for every output node\r\n    for (let i = 0; i < H; i++) {\r\n      out[i] = [];\r\n      for (let j = 0; j < W; j++) {\r\n        let sum = b ? b[filterZ] : 0;\r\n        for (let z = 0; z < D; z++) {\r\n          //for every node in filter\r\n          for (let k = 0; k < F; k++) {\r\n            for (let h = 0; h < F; h++) {\r\n              // (h and k are filter coordinates)\r\n\r\n              const i1 = i * stride + k - padding;\r\n              const j1 = j * stride + h - padding;\r\n\r\n              if (\r\n                i1 >= 0 &&\r\n                i1 < inputs[0].length &&\r\n                j1 >= 0 &&\r\n                j1 < inputs[0][0].length\r\n              )\r\n                sum += inputs[z][i1][j1] * filter[z][k][h];\r\n            }\r\n          }\r\n        }\r\n        out[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return out;\r\n  });\r\n};\r\n\r\n/**\r\n * This be the same as correlate, but with a flipped filter\r\n * @param {Array<Array<Array<Number>>>} a input array\r\n * @param {Array<Array<Array<Array<Number>>>>} f array of filters\r\n * @param {Number} s stride\r\n * @param {Number} p zero padding\r\n * @param {*} b\r\n */\r\nconst convolute = (a, f, s = 1, p = 0, b = null) => {\r\n  return correlate(a, doubleInverse(f), s, p, b);\r\n};\r\n\r\nconst max = a => {\r\n  let max = -Infinity;\r\n  deepMap(a, x => {\r\n    if (x > max) {\r\n      max = x;\r\n    }\r\n  });\r\n  return max;\r\n};\r\n\r\nconst sum = a => {\r\n  let sum = 0;\r\n  deepMap(a, x => {\r\n    sum += x;\r\n  });\r\n  return sum;\r\n};\r\n\r\nconst softmax = a => {\r\n  const exp = deepMap(a, x => Math.exp(x));\r\n  const sum1 = sum(exp);\r\n  return deepMap(exp, x => x / sum1);\r\n};\r\n\r\nconst maxIndex = a => {\r\n  if (getDimension(a) == 1) {\r\n    let max = a[0];\r\n    let index = 0;\r\n    for (let i = 1; i < a.length; i++) {\r\n      if (a[i] > max) {\r\n        max = a[i];\r\n        index = i;\r\n      }\r\n    }\r\n    return index;\r\n  } else {\r\n    throw new Error(`maxIndex works only on 1d arrays`);\r\n  }\r\n};\r\n\r\n/**\r\n * update matrix a with da multiplied by a coefficient\r\n * @param {Array<Array<Number>>} a matrix to be updated\r\n * @param {Array<Array<Number>>} dA delta a\r\n * @param {Number} c the coefficient for Da to be multiplied with\r\n */\r\nconst update2Dmatrix = (a, dA, c) =>\r\n  a.map((v, i) => {\r\n    if (v && v.length) {\r\n      return update2Dmatrix(a[i], dA[i], c);\r\n    } else {\r\n      return a[i] + dA[i] * c;\r\n    }\r\n  });\r\n\r\n/**\r\n *\r\n * @param {Array<Array<Array<Array<Number>>>>} f the filter used in the correlation\r\n * @param {Array<Array<Array<Number>>>} dOut derivative od the next layer\r\n * @param {Array<Array<Array<Number>>>} input the input used at the correlation\r\n * @param {Number} s stride\r\n * @param {Number} p padding\r\n */\r\nconst backPropagateCorrelation = (f, dOut, input, s, p) => {\r\n  if (getDimension(input) == 3 && getDimension(f) == 4) {\r\n    if (f[0].length != input.length) {\r\n      throw new Error(`filter depth doesnt match input depth`);\r\n    }\r\n\r\n    //depths dont mix, so depth is the same for input and filter\r\n    //create an array with the same dimensions as filter\r\n    const dF = [];\r\n\r\n    // m -> filter number\r\n    for (let m = 0; m < f.length; m++) {\r\n      dF[m] = [];\r\n      for (let f_d = 0; f_d < f[m].length; f_d++) {\r\n        dF[m][f_d] = [];\r\n        //console.log(m, f_d, f[m][f_d].length);\r\n        for (let f_i = 0; f_i < f[m][f_d].length; f_i++) {\r\n          dF[m][f_d][f_i] = new Array(f[m][f_d][f_i].length).fill(0);\r\n          for (let f_j = 0; f_j < f[m][f_d][f_i].length; f_j++) {\r\n            for (let dOut_i = 0; dOut_i < dOut[m].length; dOut_i++) {\r\n              for (let dOut_j = 0; dOut_j < dOut[m][dOut_i].length; dOut_j++) {\r\n                //dOut[m][dOut_i][dOut_j]\r\n                //     ^ this is important\r\n\r\n                const in_i1 = dOut_i * s + p + f_i;\r\n                const in_j1 = dOut_j * s + p + f_j;\r\n\r\n                if (\r\n                  in_i1 >= 0 &&\r\n                  in_i1 < input[f_d].length &&\r\n                  in_j1 >= 0 &&\r\n                  in_j1 < input[f_d][in_i1].length\r\n                )\r\n                  dF[m][f_d][f_i][f_j] +=\r\n                    dOut[m][dOut_i][dOut_j] * input[f_d][in_i1][in_j1];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const dI = [];\r\n    for (let m = 0; m < f.length; m++) {\r\n      for (let in_d = 0; in_d < input.length; in_d++) {\r\n        dI[in_d] = [];\r\n        //note: f_d and in_d are the more or less the same thing\r\n        for (let in_i = 0; in_i < input[in_d].length; in_i++) {\r\n          dI[in_d][in_i] = new Array(input[in_d][in_i].length).fill(0);\r\n          for (let in_j = 0; in_j < input[in_d][in_i].length; in_j++) {\r\n            for (let dOut_i = 0; dOut_i < dOut[m].length; dOut_i++) {\r\n              for (let dOut_j = 0; dOut_j < dOut[m][dOut_i].length; dOut_j++) {\r\n                //coordinates of the filter value that affected input[in_i][in_j] => dOut[m][dOut_i][dOut_j]\r\n                const f_i1 = in_i - dOut_i * s + p;\r\n                const f_j1 = in_j - dOut_j * s + p;\r\n\r\n                if (!dI[in_d][in_i]) dI[in_d][in_i] = [];\r\n\r\n                if (\r\n                  f_i1 >= 0 &&\r\n                  f_i1 < f[m][in_d].length &&\r\n                  f_j1 >= 0 &&\r\n                  f_j1 < f[m][in_d][f_i1].length\r\n                )\r\n                  // prettier-ignore\r\n                  dI[in_d][in_i][in_j] += dOut[m][dOut_i][dOut_j] * f[m][in_d][f_i1][f_j1];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const dB = dOut.map(dOutM => sum(dOutM));\r\n\r\n    return {\r\n      dF,\r\n      dI,\r\n      dB,\r\n    };\r\n  } else {\r\n    throw new Error(\r\n      `invalid array dimension (${getDimension(input)}, ${getDimension(f)})`,\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Reduces x and y dimensions of an array by max pooling\r\n * @param {Array<Array<Array<Number>>>} a the input array\r\n * @param {Number} f filter size\r\n * @param {Number} s stride\r\n * @param {boolean} coordinateMode return only coordinates of the max number\r\n */\r\nconst maxPool = (a, f, s, coordinateMode = false) => {\r\n  if (getDimension(a) == 3) {\r\n    return a.map(layer2d => {\r\n      const outY = (layer2d.length - f) / s + 1;\r\n      const outX = (layer2d[0].length - f) / s + 1;\r\n\r\n      let outLayer = [];\r\n      for (let y = 0; y < outY; y++) {\r\n        outLayer[y] = [];\r\n        for (let x = 0; x < outX; x++) {\r\n          let max = layer2d[y * s][x * s];\r\n          let maxCoords = {x: x * s, y: y * s};\r\n\r\n          for (let i = 0; i < f; i++) {\r\n            for (let j = 0; j < f; j++) {\r\n              let y1 = y * s + i;\r\n              let x1 = x * s + j;\r\n\r\n              if (layer2d[y1][x1] > max) {\r\n                max = layer2d[y1][x1];\r\n                maxCoords = {x: x1, y: y1};\r\n              }\r\n            }\r\n          }\r\n          if (coordinateMode) outLayer[y][x] = maxCoords;\r\n          else outLayer[y][x] = max;\r\n        }\r\n      }\r\n      return outLayer;\r\n    });\r\n  } else {\r\n    throw new Error(\r\n      `invalid array dimension (${getDimension(a)}), should be 3`,\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Converts an n-dimensional to a 1-dimensional array\r\n * @param {Array} arr1 n-dimensional array\r\n */\r\nconst flattenDeep = arr1 =>\r\n  arr1.reduce(\r\n    (acc, val) => (val.length ? acc.concat(flattenDeep(val)) : acc.concat(val)),\r\n    [],\r\n  );\r\n\r\nconst deepNormalize = (arr, max1) => {\r\n  if (!max1) {\r\n    max1 = max(arr);\r\n  }\r\n  return deepMap(arr, e => e / max1);\r\n};\r\n\r\nconst vectorize = (label, length) => {\r\n  const outArr = new Array(length).fill(0);\r\n  outArr[label] = 1;\r\n  return outArr;\r\n};\r\n\r\n/**\r\n * Creates an array with the same shape but all the values are 0\r\n * @param {Array} arr\r\n */\r\nconst deepCopyArrayShape = arr =>\r\n  arr.map(i => (i instanceof Array ? deepCopyArrayShape(i) : 0));\r\n\r\nmodule.exports = {\r\n  matrixMultiply,\r\n  matrixDot,\r\n  transpose,\r\n  convolute,\r\n  doubleInverse,\r\n  correlate,\r\n  getDimension,\r\n  maxPool,\r\n  flattenDeep,\r\n  matrixAdd,\r\n  deepMap,\r\n  backPropagateCorrelation,\r\n  update2Dmatrix,\r\n  max,\r\n  sum,\r\n  softmax,\r\n  maxIndex,\r\n  deepNormalize,\r\n  vectorize,\r\n  deepCopyArrayShape,\r\n};\r\n","const {vectorize, deepNormalize} = require(`./math`);\r\n\r\nconst openDatasetFromBuffer = (buffer, imageColorDepth = 3, imageSize = 32) => {\r\n  const datasetArray = new Uint8Array(buffer);\r\n  const imageChannelPixelCount = imageSize * imageSize;\r\n  const imagePixelCount = imageChannelPixelCount * imageColorDepth;\r\n  const rowCount = imagePixelCount + 1;\r\n  const output = [];\r\n  console.log(datasetArray.length / rowCount, imageColorDepth, imageSize);\r\n  for (let n = 0; n < datasetArray.length / rowCount; n++) {\r\n    output[n] = {};\r\n    output[n].input = [];\r\n    output[n].label = datasetArray[n * rowCount];\r\n    for (let i = 0; i < imageColorDepth; i++) {\r\n      output[n].input[i] = [];\r\n\r\n      for (let j = 0; j < imageSize; j++) {\r\n        output[n].input[i][j] = [];\r\n        for (let k = 0; k < imageSize; k++) {\r\n          output[n].input[i][j][k] =\r\n            datasetArray[\r\n              n * (imagePixelCount + 1) +\r\n                i * imageChannelPixelCount +\r\n                j * imageSize +\r\n                k +\r\n                1\r\n            ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return output;\r\n};\r\n\r\nconst vectorizeDatasetLabels = (dataset, outLength) => {\r\n  dataset.forEach(c => {\r\n    c.output = vectorize(c.label, outLength);\r\n  });\r\n  return dataset;\r\n};\r\n\r\nconst uint8ArrayToString = buf => {\r\n  const arr = new Uint8Array(buf);\r\n  if (arr.length > 60000) {\r\n    let outStr = \"\";\r\n    for (let i = 0; i <= arr.length - 1; i += 60000) {\r\n      outStr += String.fromCharCode.apply(null, arr.subarray(i, i + 60000));\r\n    }\r\n    return outStr;\r\n  } else return String.fromCharCode.apply(null, arr);\r\n};\r\n\r\nconst stringToUint8Array = str => {\r\n  var buf = new ArrayBuffer(str.length);\r\n  var bufView = new Uint8Array(buf);\r\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\r\n    bufView[i] = str.charCodeAt(i);\r\n  }\r\n  return bufView;\r\n};\r\n\r\nconst datasetToUint8Array = dataset => {\r\n  const imageSize = dataset[0].input[0].length;\r\n  const imageColorDepth = dataset[0].input.length;\r\n  const imageChannelPixelCount = imageSize * imageSize;\r\n  const imagePixelCount = imageChannelPixelCount * imageColorDepth;\r\n  const rowCount = imagePixelCount + 1;\r\n\r\n  const out = new Uint8Array(dataset.length * rowCount);\r\n  for (let n = 0; n < dataset.length; n++) {\r\n    out[n * rowCount] = dataset[n].label;\r\n    for (let i = 0; i < imageColorDepth; i++) {\r\n      for (let j = 0; j < imageSize; j++) {\r\n        for (let k = 0; k < imageSize; k++) {\r\n          out[\r\n            n * (imagePixelCount + 1) +\r\n              i * imageChannelPixelCount +\r\n              j * imageSize +\r\n              k +\r\n              1\r\n          ] = dataset[n].input[i][j][k];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return out;\r\n};\r\n\r\nconst normalizeInputData = (dataset, max) => {\r\n  dataset.forEach((data, i) => {\r\n    dataset[i].input = deepNormalize(dataset[i].input, max);\r\n  });\r\n  return dataset;\r\n};\r\n\r\nmodule.exports = {\r\n  openDatasetFromBuffer,\r\n  datasetToUint8Array,\r\n  vectorizeDatasetLabels,\r\n  stringToUint8Array,\r\n  uint8ArrayToString,\r\n  normalizeInputData,\r\n};\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// router\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SidebarWrapper = styled.aside`\r\n  height: 100%;\r\n  width: ${(props) => props.sidebarwidth};\r\n  /*border-top-right-radius: 20px;*/\r\n  background: ${(props) =>\r\n    props.darkMode ? props.background : props.primarycolor};\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst SidebarInside = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst SidebarItemLink = styled(NavLink).attrs({\r\n  activeClassName: `linkActive`,\r\n})`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  color: ${(props) => props.primarytextcolor};\r\n  border-radius: 8px;\r\n\r\n  &.linkActive {\r\n    font-weight: bold;\r\n    background: ${(props) => (props.darkMode ? props.primarycolor : `none`)};\r\n  }\r\n`;\r\n\r\nconst SidebarItemIcon = styled.img`\r\n  height: 1em;\r\n  width: 1em;\r\n`;\r\n\r\nconst CustomRightIcon = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  transform: translateX(-100%);\r\n`;\r\n\r\nconst Sidebar = ({ colors, screens, structure }) => {\r\n  return (\r\n    <SidebarWrapper {...colors} {...structure}>\r\n      <SidebarInside>\r\n        {screens.map((screen) => {\r\n          const ScreenIcon = screen.icon;\r\n          if (screen.fullName)\r\n            return (\r\n              <>\r\n                <SidebarItemLink\r\n                  to={screen.path}\r\n                  {...colors}\r\n                  exact={screen.exactLink}\r\n                >\r\n                  <div style={{ paddingRight: `0.5em` }}>\r\n                    <ScreenIcon\r\n                      style={{\r\n                        height: `1.5em`,\r\n                        width: `1.5em`,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {screen.fullName}\r\n                  {screen.customRightIcon && (\r\n                    <CustomRightIcon>{screen.customRightIcon}</CustomRightIcon>\r\n                  )}\r\n                </SidebarItemLink>\r\n              </>\r\n            );\r\n        })}\r\n      </SidebarInside>\r\n    </SidebarWrapper>\r\n  );\r\n};\r\n\r\nexport default connect((state) => state)(Sidebar);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// resources\r\nimport logo from \"../res/cnnjs-logo.svg\";\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst LogoImg = styled.img`\r\n  height: 2em;\r\n  width: 2em;\r\n`;\r\n\r\nconst LogoText = styled.h2`\r\n  margin: 0;\r\n  color: ${props => props.textcolor};\r\n`;\r\n\r\nexport default ({ textcolor }) => (\r\n  <Logo>\r\n    <LogoImg src={logo} alt=\"logo\" />\r\n    <LogoText textcolor={textcolor}>CNNjs</LogoText>\r\n  </Logo>\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// components\r\nimport Logo from \"./Logo\";\r\n\r\nconst TopBarStyled = styled.div`\r\n  height: ${(props) => props.topbarheight};\r\n  width: 100%;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-shadow: ${(props) =>\r\n    props.darkMode\r\n      ? ``\r\n      : `0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2)`};\r\n  background: ${(props) => props.topbarbackground};\r\n`;\r\n\r\nconst AboveSidebar = styled.div`\r\n  width: ${(props) => props.sidebarwidth};\r\n  height: 100%;\r\n  padding-left: 30px;\r\n  box-sizing: border-box;\r\n  flex-grow: 0;\r\n`;\r\n\r\nconst AboveScreens = styled.div`\r\n  flex-grow: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst TopBar = ({ structure, colors }) => (\r\n  <TopBarStyled {...structure} {...colors}>\r\n    <AboveSidebar {...structure}>\r\n      <Logo />\r\n    </AboveSidebar>\r\n    <AboveScreens>{/*< />*/}</AboveScreens>\r\n  </TopBarStyled>\r\n);\r\n\r\nexport default connect((state) => state)(TopBar);\r\n","import React from \"react\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default connect((state) => state)((props) => {\r\n  const items = Object.keys(props.training)\r\n    .map((i) => {\r\n      return (\r\n        i !== \"trained\" &&\r\n        Object.keys(props.training[i]).map((j) => props.training[i][j])\r\n      );\r\n    })\r\n    .flat(1)\r\n    .filter((i) => !!i);\r\n  return items.length > 0 ? (\r\n    <GridLoader size={5} color={`white`} />\r\n  ) : (\r\n    <div></div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdSchool, MdPhotoLibrary } from \"react-icons/md\";\r\nimport { IoMdGitNetwork } from \"react-icons/io\";\r\n\r\nconst DashboardWrapper = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nconst Tab = styled.div``;\r\n\r\nconst CenterImage = styled.img`\r\n  margin: 0 auto;\r\n  max-width: 80%;\r\n`;\r\n\r\nconst CenterChild = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SidebarItemLink = styled.a`\r\n  position: relative;\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  color: ${(props) => props.primarytextcolor};\r\n  border-radius: 3px;\r\n  background: ${(props) => props.primarycolor};\r\n  &.linkActive {\r\n    font-weight: bold;\r\n    background: ${(props) => (props.darkMode ? props.primarycolor : `none`)};\r\n  }\r\n`;\r\n\r\nconst TabLink = connect((state) => state)(({ colors, tab }) => {\r\n  const iconStyle = {\r\n    height: `1em`,\r\n    width: `1em`,\r\n  };\r\n  return (\r\n    <>\r\n      <SidebarItemLink href={`/#/` + tab} {...colors}>\r\n        <div style={{ paddingRight: `0.5em` }}>\r\n          {tab === `datasets` && <MdPhotoLibrary style={iconStyle} />}\r\n          {tab === `networks` && (\r\n            <IoMdGitNetwork\r\n              style={{ transform: `rotate(-90deg)`, ...iconStyle }}\r\n            />\r\n          )}\r\n          {tab === `training` && <MdSchool style={iconStyle} />}\r\n        </div>\r\n        {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n      </SidebarItemLink>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default () => (\r\n  <DashboardWrapper>\r\n    <h1>CNNjs demo</h1>\r\n    <p>\r\n      This is a demo that can train a Convolutional neural network in your\r\n      browser, using a{\" \"}\r\n      <a href=\"https://github.com/jakic12/CNN-js\">training library</a> I made\r\n      for javascript. You can upload your own dataset or use a reduced version\r\n      of the <a href=\"https://www.cs.toronto.edu/~kriz/cifar.html\">cifar-10</a>{\" \"}\r\n      dataset already provided with the demo. You can also upload images and\r\n      test the network from your browser. The trained network can be exported as\r\n      json for further use.\r\n    </p>\r\n    <h1>How to use it</h1>\r\n    <ol>\r\n      <h3>\r\n        <li>Network</li>\r\n      </h3>\r\n      <p>\r\n        First create a network on the <TabLink tab={`networks`} /> tab that we\r\n        will use for training.\r\n      </p>\r\n\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_1.jpg`}\r\n          alt=\"creating a network\"\r\n        />\r\n      </CenterChild>\r\n\r\n      <h3>\r\n        <li>Dataset</li>\r\n      </h3>\r\n      <p>\r\n        If you want to use your own dataset, you can upload it on the{\" \"}\r\n        <TabLink tab={`datasets`} /> tab. If not, there is a sample of the{\" \"}\r\n        <a href=\"https://www.cs.toronto.edu/~kriz/cifar.html\">cifar-10</a>{\" \"}\r\n        dataset already provided.\r\n      </p>\r\n\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_3.jpg`}\r\n          alt=\"uploading a dataset\"\r\n          width=\"80%\"\r\n        />\r\n      </CenterChild>\r\n\r\n      <h3>\r\n        <li>Training</li>\r\n      </h3>\r\n      <p>\r\n        After you have your dataset and network ready, you can train the\r\n        network. You can do that by clicking the \"train a network\" button on the{\" \"}\r\n        <TabLink tab={`training`} /> tab and selecting your network and dataset.\r\n        You can change the training parameters on the right and then hit \"Start\r\n        Training\".\r\n      </p>\r\n\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_4.jpg`}\r\n          alt=\"training a network\"\r\n        />\r\n      </CenterChild>\r\n\r\n      <h3>\r\n        <li>Using the network</li>\r\n      </h3>\r\n      <p>\r\n        After you have completed training, you can play around with the network.\r\n        If you go to the <TabLink tab={`datasets`} /> tab and click on a\r\n        dataset, you can build a confusion matrix on the dataset.\r\n      </p>\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_8.jpg`}\r\n          alt=\"confusion matrix\"\r\n        />\r\n      </CenterChild>\r\n      <p>\r\n        You can also click on a network on the <TabLink tab={`networks`} /> tab\r\n        and classify a single image from a dataset\r\n      </p>\r\n\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_7.jpg`}\r\n          alt=\"Classifying a dataset image\"\r\n        />\r\n      </CenterChild>\r\n\r\n      <p>or upload your own image to classify.</p>\r\n\r\n      <CenterChild>\r\n        <CenterImage\r\n          src={process.env.PUBLIC_URL + `/tutorial_images/Screenshot_6.jpg`}\r\n          alt=\"Classifying an uploaded image\"\r\n        />\r\n      </CenterChild>\r\n    </ol>\r\n  </DashboardWrapper>\r\n);\r\n","const object =\r\n  \"\\u0006;+2Dbw}|£¨\\u0010\\u0000\\u00123Xx~tjeiqmpwmi}z|y{wz\\u0019\\u00101Snyqppji|zsx~vxm!&Wjsuriky}mqvuz|}y^2;f|yxrk}jl|ylbnuxywgWKCGTnwlz{ikolb^aSXfaXvxkXC# ao{zy|xkPDJeiA:?Nzl_`YBswlH3)HµÑ}D@R{prie~fw{yJ62,VËÙ¢dMKJLkw}{}~Z?>FOgye`VKeyPaZb¯flugxo£©¡±¡ÃÑ½}lyTXmeÕ²¿Ó½ÍÏÕ¿Ç¼¡|ZHQTk¥å·¿ïÛäáÖØÒÈ½®¡~PYi`À¹ËßòôîñãáëÛà×?BXq¶Ü¢ÎÄ÷ÿÿõìæ×çúñ}~|}~|@Tp£ßÎÄÌÜóõïêçÃÐúã£yrdlÒø¯¯ÜâæéàÉ¸µ¾ª³çß¢ur{~z]³îøª¹ñæ»´¦¸ØÔìì¦«íüå­©ÜÂ{¥ÊððÞwxpdcÛôÒÁ¦¿³¬­Ê¾Ædmwyl}{¦¼¶«¥Ã¾ooy³¯­½ÍÉ¨{|qlqÇ ©§³ÔËÏk[Tiv`f¾¢¯¾¦ÊàÅÀ´~sMO]~wq»¬£¦¸¦¸¨y½ÓÊ»z¦¡«×ºuØÁ¨~x~ËÎ|GÜÉº¬~~|~rº­8!ÐÉÆ¿·«xZ2 85´­ºÂÆÉ½­upzh:\\\"¸aS±¨³¼ÊÚÚÏ¿¯¦££¡¢¡pwx\\\\gªØ{>.06I[knuxgcspiajjaqpiilx}|\\u0014\\u0000\\b\\u001b3RYVWOFCFJFHOGEY\\\\UYROY[^`XSW\\u0018\\u0007\\u001b2H\\\\]RMNOKI\\\\W\\\\YUOU_`fZYY\\\\i^TTI\\u0019\\u00146?FJH>DTZKMi[TLLWQ\\\\cc]V[Z]ZWU>  AOMMNJHXYDGSNDAJPP]j_b\\\\TOOC9/*05IRXTTMFRQAHMJA>?8:DE6J`aPD6'\\n\\rEKUTXSJJS^OOG2+)38%$%3]DVjWD;?=/RLZaXQZYVY[F'\\u001a\\u0016\\u001ffL(&5M8Qg_LEB\\\\JdR[WQRUUPa^*\\u0019\\u001d\\u001d'jmZ:*+'#C`a[YSV_xprdYVV[aa<#!'25F@OK:60&?[\\\\]]]V\\\\zuulddffoW(5-8[TWIRU\\\\c=CZW[a_V]rmma\\\\^TJgS<VNtsdtayn§N?`_]_ZW\\\\sjiinY8=P9O{©¤¢¤ySMW[]][Y[wkf\\\\;,4/7j°ØÀ¼¼±®«©¢v_`Z\\\\bYasmli_/9D3Qe¢ÈããÜÛÅ¿ÑÎÐÀvY__aY\\\\tddd`*+2A¿^i¦êýüêÙÐÄÙñå_a\\\\[XXs_acW(;EyÌ¶Z¼âíéàÙµÁñØ{t_RoXcgY@Ihµów°ÅÏÚÔº£«§ÚÎtst{wfrKPZ[S:âóÖÚ© wt|ÃÆÝÔ}UQSViiRZ\\\\Y_ã÷Õy¶©Yb[rc~·äáÄuLKBAJyhPVUVfÄèÇ­hVfjl^q·«¯|HQX\\\\RwhLUQQuv¦sl_inffeenjoqdovtt¢fPYWZo[a laejnlhihf`g~z¸gWY`mjhhy{®¨±p`f^komeL<=cyq®kPXchmpu|¨Å¯¥jRapmJ+2Iutcy¥XUXZ^luxvny{m[UXTS\\\\ilpi\\\\fµkdOLXbjjcWRmycXWljZ_nqkpi]Z·V®zoXR^d_\\\\NWce^SR^lh_[gilmek§­]0¶xgdlibX\\\\feYRQXdheNUekpeW\\u001d\\u0013ª¡yk_W]b_c[YZfjgn^LTfgE\\u0018i\\u001f\\\"{¤vcaa\\\\][[_cb`]TPHQC\\u001f\\u0005^>5¨½¿µ£{rx|thgi_Z[`WCN¸v\\\\?-+*4?KPY]ML[VOGOL@NKEJMYdlfhlfg\\u0014\\u0000\\u0000\\b\\u0015+-,2,%#$#!%,!\\u001b..'/)%05:<729\\u0015\\u0000\\b\\u0017)67/+,.-&0/883+/67>3125D:22*\\u0011\\u0004\\u0019\\u001c!#%!!-5(&:/-()4+3:94,213220#\\u0015\\u000b\\\"'$$('\\\"13\\u001f!*'\\u001d\\u0017%1)2B:B3-)( \\u001b\\u0017\\u0019\\u001d\\u0018%&-*+%!,'\\u0019\\u001f\\u001f\\\"\\u001b\\u0015 &$*.$HO@-\\\"\\u0018\\u000f\\u0000\\u0004($+&,(\\u001e\\u001f.6\\\"'\\\"\\u000e\\u0011\\u0011\\u0015\\u0017\\u0010\\u0013\\u0012\\u001fSPOE1$\\u001d%&\\u001e1!/50(/.0..'\\u0013\\n\\u000e\\u0011EQ/\\u0017\\u0011\\u001e>7<=6'\\\"!;.D)30,+,,(65\\u0014\\u0010\\u0010\\u0012\\u000f8>G1\\u001b\\u0018\\u0018\\u0016$;:10+-8YMRA5204<D\\u001e\\t\\u0010\\u0014\\u001e\\u001a!%=9)!\\u0018\\u0015 55244-7^RRF@BDBQD\\r\\u0011\\u0011\\u001e916%.9Lj5\\u001a\\u0019)-397.9YIE79A7*F7\\u000e\\u0016\\u0017ME4I9RGq{^(\\u00194;893.8VED@JA\\\"!,\\u0017\\u0013;)bzcnsv[aXL2&3=<9408bRJA;$\\u0016\\u0018\\u0013\\u00192\\\\9g°xppnmrdL9B;8<0=OBDA>\\u0015 (\\u001a-qk3yªÄº¥£¤µN9><<28O6736\\u0015\\u001f\\\"%n©G?pÔèÛÅ´ª ÅåÃN1:41.6O1331\\u0015)%K¦8TnÐâ×ÉÀdØ­N<>7.\\u001e(L/=B<&+BÔsI¤³ÄÃ¦iiµ¡G+\\\"!&#)P%0980 ÔåhX±ÃsUOSnÅ°?\\u0010\\r\\r\\u0010\\u001b6H)3513nÍëÂdI7<0?J2OËÒ©@\\f\\u0010\\u000e\\u000f\\u00136B&1.-;¡Òº\\\\7`i/:;N6-Cp V\\u001a\\\"+2$2@ 0+'LUvcEcnB18:367<JADG%\\u001f#'-SA#.,2G4=hkvxqYA549==;;;<0'\\u001e\\u000e\\b\\n,fH,*4H@:9QWiJ78/=A?7&\\\"\\u0017\\u0019\\\"\\u0014\\u0004\\t?cJ%0;?>CN`kT¨k@(4B=\\u001d\\u000e\\u0019!/'\\u001f\\u0018*[KL\\u0012#0-1DSRdXKnVW\\\\G3++%$4B>4'',Wr:R\\u001a\\u0019\\\")158:?;,<M;34FA02?A?C6,.Fj[0W\\u0010\\u0013#\\\"#1553\\\")49603<E?5.9;>?69fi1\\u001a[\\u0016\\u0018\\u001c\\u001a\\u001e3KI9&/><3134<A<$)7=D;.bW\\t\\t`\\\"\\u001a\\u001b\\\" *41.9>79346:<=@.!':>(\\u000b<F\\u0007\\u0014`*\\u001e\\u0019\\\"$  &&184435:<<8+!&\\u001d'\\u001e\\u000b\\u00009^\\\"\\\"t^WCDLHFORV\\\\^\\\\TZ][SME7;:A;.9hTH\\t~if}¬´ojm{µÙÑ¦¤tf_ZH<8M^[WO}|®²n£ÀÚðõñîêâ`c_YPAT\\\\`MGsª²«ÀÛêåïôöèáëó±eeXg^ASZODCzµËÐÐË³©¤}²ðçÓÃÉ·y[^[MEaXL@Gº×Ê¤w^ll ñìëÓÃ}fbXPZ^EGDWx]bg`Vwa.uËäéìí¥~|\\\\XNWbLCQ[|XUWTKNE5(6AUu¯Õèï´sSJGVVZSMQ¢n?I:./\\u001f\\u000f\\u0013'?\\\\yXxÇëÑÀlecaIO^SJF%\\\"/UhI^}sx:Cl±¼éÐ·©qYTA8XQ?GJHQz¡]bhw6%KÀâèÇmÀhEKPXC81bi{rl_e}evB#M¾âèÓÂË®`Hfc]O;gYp{ylku}gtN)P½àéÕ¥¾¸Á¯{og\\\\_ThQYvqridhq}|H*Y¿Þæ×¿¿³¸¹fPVScGXicY^k£ jAY¼ÜãØ¡¼ËÅµ´Â¢VASgVu©¬¡¢ÉæèÜ´Îàá×©¥¾ÐÃÈ¼·½¦V´µÛóöéâãïûþí«ÃãÞßÜÖ¬¤¼ÒÄÈµ¹º»Åðçòðòøûúüú÷ûæÎ×ÚÙÙØÔ©¢¶ÏÆÊ¨ÄºÎüûûùúüúøøùóùåÚÖ××ÖØÔ¦¡¶ÐÍÒ³¯Ë¦ÛûñðéÞØÑÍÈÃ¹¯«¸ÅÕÝÚÚÖ³ ®ÎÎÐÁ§¦ÊµwkmfOL^ovkE7TWe¢ÃÕÀ±±ÉÌÑØÉÄÍÇFVU$CW40ViXrL8HÖÆÍÇÊÊÌÓÐÒÐÌ¢0\\\\^=7|çñæäàØÂ£­¾ ~´ÓÎÕÓÔÒÒ¢|n/WK>?w~g~¥µolHb¥®½ÂÌ:\\u001d\\u001f))%%28h\\\\IC)\\b<ªKG90&%058Ea°®_9=@BAGGa¨µ§U#;!\\u000b\\u0010U;JOYG4 \\u0018\\u0013, ¤¦¤§¢3\\t/!\\f\\n;ZX`jc7@1\\u0019'\\\"Y§f|}}¶yI=@%%\\r'TUT`[>G+\\u0019>8X®,+94,0O­Ù¦aO`KR}%+OIHTW^H+\\\"g_|¤sqtrqt| b(\\u00157lw.-EGEKOvVU\\u001fMD^¯¡ §¥£¤=(<QdA;>3,'+f7 \\u0017*=]¥^fl¶³}SX?+K:-#\\u0015\\u000e\\u000b\\u000e;16Qg{££+\\u0013\\u0014Jwnc=\\u001b\\u0012\\u0011\\u0019\\u001d\\u0010\\u0005\\u0006\\n\\u00193DZt±he¦¾Çxkhy¼âÓ§¥ ue_YF<9N`_ZQ }¡¤¼½oÀÛñöòïëãae`YQCV_cPIs¸½°ÃÚéíõôòçâëó±fgYg_CV]RFEyÁÞãßÛÂ¸º¶ìæÔÃÈ·{^a^PHd[NBIºÜØ¼²¢z4ïëìÓÂkh\\\\R]aIIFY¬ svxtlw;zÎçìððª}fWLVcMES]mingZ\\\\UH=PY^v²Ùìô¸yv\\\\GDUUZUOS¬}MRG97*!(?]}VwËðÑ±naa`HO`ULZ4'6[oZr¨7Fp´¿íËy ¤nWR?7[TBKb]W§ow¤}40RÂåí»Bp·hDIO[F;.zsqp{ zC7XÁåëÃ\\\\s·È¬_Fef`R:yqz |VBaÇæèÆg°­·©zqj]_X{iu}y®Q@jÊååËjt®¯¢¬³fOTYv\\\\r}op{§¾²pNeÆãåÐ|y©¸°£§¹Q=Utd§¯°¢£Ìëðà·¨×çæÓ¨º°·­©²S¸·ÜñðãÞàë÷ýî¬ÂèæçäÖ£¾¸¼¨«¬²¼íäóóô÷ûýýûöøçÐÖÝßàáÕ}¼¼¼t°­Çõ÷ûúûüûø÷ùöùèàÝÛÛÛÝÒ}º¸µ]µÖøñðéÝØÑÍÈÃ¹®¬¾ÍÚàÞßÒ{¸¸²{³§|mleNLauxfA5V[h¦ÈÏ¦µ¹¹º¨§¹¹Gc`&BU20^w\\\\tO<KÊ¥£¦·¸¸½¸º½½ ¶©3Z\\\\:8£ÛèáâáÝÇ¦°®zrZ À½ÅÂÀÁÂ¦2TH;?m{¨ ´iD>&Ox¡¬´¾?'\\\"&'#$49j]JB*\\n;¦1\\\"\\u001b\\u001b\\u001b\\u001c &-8Wªª_?ABECKPj±»¢T&A)\\u0013\\u0015Q7GMYA&\\u0012\\u000f\\r(¥¨ª©©£y0\\u0010<0\\u0019\\u0015Adcejb33%\\u0014(#[h~~vt¦mGCK32\\u0018.[ZSWU<= \\u0016C<Z¤.)3.%%E¬Ê\\\\PcNZ+.PJFNU]@\\\"!lb{wqlilp{d,\\u00178r~1,GJGLRyQN\\u001bMBX§ £­¥¢£C-BYmE<@5+$,l8\\u001a\\u000e\\\"5S¡X\\\\k±¯Y]E3S>/%\\u0016\\f\\u0006\\r@10H]ry \\t\\u000eD}ne]?\\u001f\\u0015\\u0014\\\"%\\u0014\\u0006\\u0006\\t\\u0016-@Zq»_c´ÒÖnbfu½åÓ¢gSLOE=6HTGGF©v­¯ÈÄfx»×îõïëåÜUTWVM<LPN>=¤p¢¾À¯½ÙîëòòñãÞèò²a\\\\RcV6FK@77y§ÆàæáÙÆÄ¾¹îâÏÄÌÀ|W\\\\XB7PF@5;¾ãßÃ¹©<õééÕÈedTBIJ2<9J¥¤µ­¡}{BÔèìíí«uzfR@FM79GQ¬¨x|wlj\\\\NBTai}µÛêî²fh_E8E@EHCGÀjcR<:.&+Ac\\\\w¢ËíÇyp]SO5<RG>fC8C\\\\t¬Â·>IwºÂíÁ^`EA/(LE3Elpn¯²©¼É°=8\\\\Ëëï·.\\\\¤R2;BI4)1¥¥³¦µÀ§QFgÊêïÅK[£L;\\\\TM?C±¦¡¢«¹¡kYxÍàëÉQasmXKOd³¬«¢²Ç©g[ÍÜèÌST¡U@Hgw¡¬½Ð¸¥hwÇÝæÏdZC4aw±º¼¬§Ïìïß¾¨°ÕãæÏn`EÃ¨ºÝóôäÚÛæôýé©ÇçâåâÐr_~z¼òæôôõúüüüúöøàÇÒØÜàßÏs^xtW{Çùöùùúûúø÷ùôöâÙ×ÛÝÝÞÐx]rwNqzÙþóïéÞØÓÑÌÆ¼¯­¼ÌàæàÜÌWf~efqqkTSi|pG;Z_r¨ÃÄeiV}q0L_<9czcxUAMÄ´ÙÁBikJAàéááß×Å«¹±bZDx¶­AcXKF{j{¢£Áp4/\\u00187\\\\fu}S7.340.9@r¤eRP0\\u0007:¬7!\\u001a\\u0017\\u001a\\u001e\\u0019\\u001c#(H ·tQOPRQ\\\\dÆÐµ^/O2\\u0011\\u0012`HY_hI%\\u000e\\r\\u000e,¡¥®³¶¸º¸»¸®¥ ;\\u0017I:\\u001b\\u0014Jw{y=3!\\u001553k¬¦{ ~¥SKYA9\\u001d;lkfmjH>\\u001e\\u001aUOkª8095,.K¨ÂlZk_m6Ad\\\\YbijC!%{o yusv|t8#J=<\\\\`\\\\`eWN\\u001dTI^¦ ª£¥«´º® ª¬Q;QfwNCME9/9z@\\u001d\\u000e$9[_hx³³_cK=^G4,\\u001e\\u0012\\t\\u0014M:4I`xxz} \\f\\u0013Fzkc[>\\u001e\\u0014\\u0015*0\\u001c\\u000b\\u000b\\f\\u0016*Cez\\tÿýýýýýýýýýýýýýýþõâôñúýüúýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿîÐÅ¶ñÿÿýÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýÿÖ¢¢èÿýüþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿýú¼°º¤Õÿýûÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþÿè¢­íýûþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþÍ{^rÀôþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþþÿÿþüÈnBGoÖüüþÿÿþÿÿÿÿÿÿÿþþþþýüýþÿÿüæx44Cx«éúýÿþüþþþÿÿÿÿÿÿþþûöüþÿþü÷´K+1T¼óüüýýúúûÿÿÿÿÿþÿûÖÍõüþþúõî2.6[ÑùïôúèáÞÿýþýüýþÞ{µöýûøñúâr.(3lÕ×ÌÑ¸©¡ÿýþìÝÞÆVHtàöùêÚúüÒU\\u001e!Gvu²¡ÿûûÝ m\\\\XP^£ÃÊ¯ªÑÅÊ~%\\u001f+QmnÔØÓÂcrnlC^mpicbgT#!+Zkn^LQMCè¾]x|49JUaixE\\u0019\\u001e<_cQHN2$xiñ¤>ibyp4]w¡¦¬3\\u001c(F\\\\Ucn3\\u001em_âNfc`G5³±oPcp·\\\"\\u001f,F?Ic92gUqIJO:?:;xqE:@P[M^XW`3\\u001f\\\"+*4LILvbcg24>@?<XygH8MD:=>6&(\\u001d\\u001e!\\u001e5X[Yzt`OPC;<CCWnT9,//3<5 \\u001d'\\u001e !\\u001e*J[YyzemiC>@:36C3S;+7/7-\\u0017\\u0019/&#&#(4FJpitzgC.@B/,(.*>0*A18)\\u001d\\u001c'$\\u001d$)5>AHpipiN*\\u001e.1%$\\u001b\\u001a #\\u001f ,,0.+(''&(.6=BJtkdR<&\\u001d&' \\\"&),+*-02420.+*,./6;>FhZOD=4--.058=@=<<;>>;761.154>EDMTOG>BB9;==<8?IJJGGHII?<:9:;:>ELTOOKELLCFDA>;BKQPMLLJLOJC@A@<:>EIbda\\\\YQMNLFDDGILMMMKFDGC>9;<;=@BCpnngYUTQNKGEEGJJJHFEB>977865?FHLqoi_TVYSKDEFHJHGHFEBA@>>=<97?HHHohcYNHFGJLNKJHIIKNNFBDGF?56>BDFNjc_YRNORTSNOLKNPQPOLH@@EB74:DNOPÿýýýýýýýýýýýýýüýòàòìöüýýýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿèÄ·©ëÿÿÿÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýþËÝýýþþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿþ÷®Äúüýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþÿå|xäüüþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþÉpLYmw°ðþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþýþþþþüÅf55Vl{Èýþýüþÿþþþÿÿÿÿÿÿþýüüýþþþüås*+9Zdãÿúùüþýýýÿÿÿÿþþýûúöüþþþýö±C\\\"'<\\\\g¤ñûûýþýýýÿþÿÿýýýúÖÍöýþþüöì(\\u001f'FXgÀûûûüòìèÿýýüùûüß~¹øÿþüóùßi \\\"+GPxÓêÚØÊ½µÿýþìÛÞÉaOyæûþïßûûÎN\\u001f +CL¼°¦§¢ ÿûüÞ¡ynlZf¬ÌÓ·±ÕÈÌ*\\u001d\\u001b1@M¢ÖÚÔÄnyMhvztmjlZ\\u001e\\u001b\\u001e.<Pega\\\\R æÃh²BCJYju¡­F\\u001a\\u0019\\u001e38?LU8*jï©GsnqDg|w¦«±5\\u0019\\u0017$29Yp5 qbâVh`V<>º®rDSd~y~µ\\\"\\u0015\\u0014(,Eh>6j[tMLH)'%=|nI-/BL=MJQ_6\\u001d\\u0016\\u001b\\\"6SQT|lhb,,0+##VriF4IA3+./%+ \\u001c\\u001c\\u001e<bedvP8:1-,-?R_N=25560*\\u001a\\u001c)\\\"$$#1TgeyKFH1;A*/,*#U@/;15)\\u0015\\u0017/**.*/?QWzscD&!CK(* \\u0019\\u001a=1*B2<- \\u001d(*&/2<ILS{stfE\\\"\\u001b05&&\\u001c\\u0018\\u001e(%%12963/.225:BGLT|rjX?'\\u001e')%'+.24369;=;9757:<=CEHPoaUJ@70026<?DHFEEDFGD@?;;?CBKPNW\\\\VMDHH?BDFEBHRTSQQRRRHEDFHIHKOV^WUQKTULONMJGNW[ZWVVSUXSMNONJGHOSjjgcd\\\\XYWTRRUVWWWWUOLPLHFIJIJJLMxutndaa^[YWTTVVTTSPOKGBBDFDDLPQUxvpg_bd^WSUVWYUTTSQNLKJJKJGFKQPPvojaXSRRUZ^ZYWWWY\\\\\\\\TPRUTMCDLNKLTqjf`\\\\ZZ]_a]^[Y\\\\^_^\\\\ZVNNSPEBHPUUVÿýýýýýýýýýýýýýýþôàñéóúüýýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿå¾¯¤çûþÿÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýüÄvØùüþþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿüò¥½öüþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþûßtzlàûýþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿýøÃkIU`m«ðÿÿÿÿÿÿÿÿÿÿýþþÿÿÿÿþüýÿÿþô¾c77MbuÄúþÿÿÿÿýýýÿüýýÿÿÿþýøúþÿþõÞq.07T\\\\Ûýýþÿþýýýÿþþþÿÿþýúòøýÿþøò±I*-<V` ðüýþþüüýÿÿÿÿþýýùÔÉòûþþûöî2,,CXlÂøôö÷èáÞÿþþýùùúÛy³õüûûôûâp+'+LZ|ÎÞÏÌ°¡ÿûýêØÙÃYIsßó÷íÝùøÌM\\u001f\\\"4OP|®¡|{øõõÖ~na_T_¢¿Æ±«Í½½o !&;CJ~{ÉÎÈ¸cvwsF]fih`XXnsH!$$/<KSQYUKÞ¿c£<68CXVYgz9\\u0017\\u0018\\u001c484=Q8-m\\\\é©Elbvr=Xgufhsizz+\\u0015\\u0016&43Oi1 ^SÚSd[R>6ªX=CDbcd{¦~!\\u0019\\u001a,*<]60UHeHIG**'6mY2.+3@5>>I\\\\7$ $%1GEIdUWW'+00*(Q~dYH5E=2'*-&/*'%#:XZWsodG6<4025?O\\\\I?57881+\\u001d /,-+&1O_[upfDHK3<D5524*XE6B79-\\u001b\\u001e7201*/?OPhbe^H,$EN34+('D:5L:A2&$10*01=KNQmhneK*\\\"6;12'$*0./;;>;854657=CIMUrlgWD.%.0.158<<;>ABB@><9:=?@EFIQf[RJD<557=DGKOMLKKMLIED@?BFEMQNXSPJDIJACFIJFMVXWUUVWWMJHIKLKNQW_MOOJSSJMMNKIPX]\\\\YXXXZ]XRQRQMIIPT`edbaXTVTRQQTUVWWWVSRUQMILMLLKMNnoql`[[XVVTQQSTSSRPRPLGFGIGFNQRVpojaZ]_YROPRSUTSSRQPNMLLLKHGLPOOnhbYSOMNQVYUTSVWY\\\\\\\\TPRUTMCDLNIKRib^XWVVY[\\\\XYVU[^_^\\\\ZVNNSPEBHOSST\\u0004\\u001c%&*,((\\u0018 +\\u001e )4C2,+&&)/>W<1?;0LQU!\\\" '#&&(60\\u001c(8BO/*2@/7QTm\\\\;EOG_`U'(9.,()BZ90HJL]BAPZCX`SikVY]V]k_6>T>F7NUcT_Z`g]_^d^W\\\\Y``SL_haec[JHNU_MgbP]c]eiTTVWPWP[]JQMYRTNHTLDEJNQYZOBQ[WVZUQRNUW[SPW[bJ;GH^MJIFCT^bRHKKQW[RZU_gh[NO__[GAUPPOLUMSQ^z^R]Ve[[f_]dogb]NZ]SGJYM843>JKWyacsySc_W\\\\_geeVJTioJ]^[K-\\u001b%7<SqmaflY_ohpqmuhoMJ`aeSjXPXC)66?\\\\pc[h}Rmkfzttx]Y\\\\P]d`nlGE`OR[]EX{`^ihMm_]pdrr\\\\\\\\jeivywVHKS[fkzfUPLSpnUE__\\\\`[^hnohd`hd]SQQWwt~;9IXoeEK[futrh^be^\\\\YTRv{8:KX¢½ÕÑÃrlsqotcbSOXdn~}zB<ah±¸¤ª³µ¶ÐãÓ¤~qtamNV^~r_5fÆÉ½ÃÍÐµ­¾ÏØ®~|otPO]yt\\\\(\\\\¢ÏÛØÓÐÓÉ³¥¯~zxhoy~yjKl¼ÛéáÞÐÛØ±ase`tgw~zty{ÁßæáåÜâá¶^SaZ`|najyupz}mt²ÚÞãêÛâÛÀF?LR]hgghqMglhzmibk´ºØåÓØÔÇ6\\u00101CVwquhWUV[]0RNko_[^aatrq¿ÆG\\u0019\\u001e/Hi^TVNOMEY,?M]`]PRQ^xDOHHN­T1\\u001e02d[MC?<I?N=MUKTOIMSXb<VkfXvV=2@4DgUGC5ZRK0;UQJUPQXYXBbfb`t{R91V:bV;9AfON:8NROXUW\\\\\\\\UCl_hSd^P<`PUO=IVX;:BDELUY[[jbVGcbcMKvqgfeQbbVdbXNMHHRORXVUT]TWO]XNS`vljpo^iyaeZOVWWSWT\\\\PSYbhf]nfmrqlruzzurx|hgdccZQXZ]^RQ_^`hlpnl|wikut|sotkmj`PLRa^]a`^`ON]ikbcjwhhjzkp\\\\P`MUTC6?H\\u0019\\\"#%'%&\\u0017\\u0019\\u001b\\u0014\\u001e%0?.##\\u001d\\u001e\\\"'2G0*83(CHL\\u001c\\u001e\\u001b!\\u001d!\\\"$/\\\"\\u0012#/9E%\\\"*8'0II_P3=H>RRH !2)&\\\"!<Q-&@<=N47FQ:QWI^`LPUKLYM.7M:A0DKZJUOOULNSZTMSPWWHAU`VPNFB@ERZDYTFTZOSWBCKMGNEQTBGBOII;5@B9:GJGIIC;GKHGJFEGCJKPKINOV?/78NB?>D?HKMCB@9EKPFMGQYZNEJVQL93IDCD@JKODIbOKQD]SS]QNV`WTTIQND7;OD//.9HEGblQU_ikEURGJHOPUI@FV\\\\7LRO?+\\u0019$44@XXRQRlGM^W`]SWO\\\\><OMQ?WJCK=#004IWNJRya@\\\\[Wlb\\\\^EELBMRN]]<:UDFPS6EcKKRjK;\\\\ONbT^^FHYVZgigI@CKJTZjTA:8>VO73MNLRLMWYZVTRZVOGJJPb`pqhi(&3=NF07HSdo~]^WNSVOOPKIafshkp&(3;mipl¦À¿¬m]Zb`]bSUGBDOY``d3*HJyµÎ»ujpqlp[cQ\\\\;DK`^\\\\P$Ld¤¥¢¬¯ ·¿kmuupdh[_><HZb]J\\u0013@«µ¶²¯²¤tfftu|yhimaRW^he`R.J²ÀÂÀ±½¼yP^OJs|rzxnjp^T`dob[_^c¶¾ÂÆ½ÄÂQFMFIu}tqgjdcWOUb_[dfSX³·ÂÈºÁ¸98;?GkouiTTST[>TWUhZVMRmµÁ¯´®(\\r\\\"/A`\\\\bYKJJKJ$C=Z^NJLNIoRdsNN8\\u001a\\u0012\\u001c4TMGMFIG;H#4>NRNACAJ]%.&&.t~C2\\u0013 \\u001fPKC<:8F9B6DI@IC=BHGK!;PK>XmB<)2\\\"1WJ@>3XNE,4KIBLGJPLC*NRON\\\\adL1&F)SJ22<bMO73FKGOLQVPA.]PXCR[kTF0P?EB3BPS9;@A@DKOQTeWE5WSQ:;VRSSUBNPL[ZPHHDCMJJNLKNXIE=RI:>P\\\\LRY^PTfX]PFPQPIMJRFIP[bZK[[]^\\\\\\\\YXbcdecj_^ZZ]TKHJMRHGUWY[X\\\\b\\\\ibYU[h^ke\\\\bad`WJFLNKKUVTVGENTVUSWbXUUcU`Q>NCLK9/8A\\n\\u0013\\u0014\\u0017\\u0019\\u0016\\u0017\\t\\u000f\\u0013\\n\\u0011\\u0017\\\"2 \\u0019\\u0019\\u0014\\u0014\\u0017\\u0019!2\\u001b\\u0018)(\\u0019'+/\\r\\u000e\\f\\u0012\\u000e\\u0011\\u0012\\u0013\\u001e\\u0013\\u0004\\u0013 *7\\u0019\\u0012\\u0019(\\u0017\\u001f54F: *4(78-\\u000f\\u0011!\\u0017\\u0015\\u0011\\u0011(;\\u0018\\u0013+-.?&\\\"1;$8=.AI998/4B6\\u001c$:'.\\u001e36@0;7=D;<:@:362880-:=5;91/-2=F1H>*7=5>C--01*1&05$/-3'(% +-%&03363'\\u001e+1/.1,)+'.+0..67=#\\u0014##:,)(+'278*&% )/4*2-7?<0+2>96% 510.+426/6N718,>44?97>H<9<5;50(-;/\\u001a\\u001f\\u001e)437HO77@LK$2.*237:<//4>F$9;8'\\u001d\\u000b\\u0016#'2:6620L*.;2@E>>;D\\\"+?59'?3+3*\\u0011\\u001d\\u001d%8:026ZC)C>7KIFC/,0/::6DE'%@-/9=$1G289M/)H72@8E>+-=ADLOM0-080;@R=*!#/@2\\u001b#;92//25:<:<8=92-88>FCTWNP\\u0011\\u0014$'/'\\u001e#17@Raf]>B<25704=86DHVLMQ\\u0013\\u0019$\\\"H]QVabG¢LA;A@=C6>0,(3=C>C \\u001c5,cifkpqU|¨hZJNRMP=I7B!)0B:9=\\u00166Atrrv~mnpgHIWXRGJ=B&#/;<:4\\u0006(Yu}zqqUsbMANU][JJMA>@FGA@6\\u001d1ixnd>MA5NSNXWOLQ=@JLN@=DJIo~p=8B<:UVPOGMHD6<@J?:GM>=f}}t$,39<RLRI69:7:,?@7I?=77Edfz~tv\\u0015\\u0005\\u001e-;M=A9.040)\\u0012/&>B5471#H/@P,+dr\\\"\\u0010\\u000e\\u001c0E2)0,22!*\\u0011 (488..%&>\\u0010\\u001a\\u0015\\u0013\\u0016EY'$\\f\\u001d\\u001bC3(#$#/ (%04'1.+-+&1\\u0012*>:*0J#)\\u001d+\\u001d#A4,,\\u001f=5/\\u001b 61+9653-.\\u001a6:649@B6 \\u0019>\\u0019>8\\\"$)C3<%\\u001f141<;;93.\\u001d</8$1;I9/\\u001eC,00\\\"4=3\\u001f+++*-38;<K<-\\u001b458#\\u001d83224%381<?:.//-7414324?.*\\u001f0,%,3?/.48.6M;91.8984849-07AH?/=:BHHA=:@@ADHRC<=CF=4348:/.<==?;=DARL>:>G=KGBMFDDB517855==;=,(158:9>J>:7C6B5';*,0&\\u001c%.\\u0001ª¨±·µ±µ¸½½¼·¶¸¸´±±±°¯¯­ª©¨¦££¢¨¬«¦«®±³´±©¯¬ ¢®­«¬«ª«©§¦¤£ ¡eht{ztrhqqd^¤­«©©©§§¥££ ¢¡`TVMEJMJB?JS[XMLj ©¨¥£¤¤££ ¡ POPQORXPF56=ILQIGK[x¡¤££ GLLKJPYJAB5/6<IL>ADKVo¥ >@AIHOWH6><2.2;A>AHJIG[h897??HNF:9?>4044;AGEACCADYs~441/3<@??CCC@<:57=@=::9:66:AKSZ_-.,++*/29>?=<:0*,1650/1132443334#'''\\u001e$<EGJI:1PC294740-,251110.\\u001b\\u001b #4B99AMc[URU_`[YQG/*/3615310 \\u0014\\b 2D) \\u0019\\u001a;c32<K(4@\\u001f\\u001c,8$-A7'-\\u001f(;$\\u0014\\t\\\"J3$$\\\"\\u001eZR-0>;\\u001b&-.\\u0011\\u00110>.6%\\u0017\\u0014\\u0005\\u000e5 \\f\\u000b4^:6=9O|Q=9TV02!@$\\u0013\\u001e2J/\\u001d\\u001c\\u0016\\b\\u0007 \\u001c\\u000e\\u000bS°}y{la}yJI>C;\\u0019\\u0012\\u0019=I-\\u0017\\f\\b\\u0015$\\u001f\\t\\baéæÙÔÏËÂ¹¯£¨xw\\\\7C%%:UjX1\\u001b&&\\u0017\\n\\rUÍéôøöèØëàÖË¾¾³«ab\\\\YjrmiW6\\u0012\\f\\u000feÀÐäóþöëøúùõÌáëáÚËÂ¸§v^LDM]fQ#\\u000e~Á¾¡pÄßãææêêóúùùôçÞµ¨{R#\\u0016*TW&P}Y1lhµÆÎÒÉÞèââãÞßºD0g³²lA?>cH;UX:oé|j¢±ÆÊÐÒÆÀQ\\u001a!\\u0016°z[WLbgVSP@è8]gnnu&^(J¥f,1H_kROUKzÑ\\u001c7?:9@KNW_]?&®èp\\u001ftqU&0>=G>9=<I§T\\u001711\\u0018\\u0010\\u0016\\u001b\\u001c!&#\\u0017)ÂÛ\\r.&\\u0013\\b\\f\\u000f 6;:1($7\\u0018\\u000b\\r\\f\\t\\u0004\\u0005\\b\\t\\n\\t\\n\\n ¯Éz\\u0006\\u000e\\u000f\\n\\u0007\\u000b\\u0015+,MMD=?/+'#!\\u001d\\u001a\\u0015\\u0013\\u0010\\t\\u0007\\u0007\\t\\u0010tµO\\u0003\\b\\u000b\\b\\u0002\\u0004\\u000b\\u000e\\u0011JHHKOPPNPLJGED@4-(%\\u001e(H\\u0014\\u0004\\u0005\\u0004\\u0001\\u0000\\u0000\\u0000\\u0002\\nKMNNTTSWWVWSPPRSNMJH=04'\\u001d\\u001d\\u0019\\u0016\\u0015\\u0017\\u0019\\u001bJLNORWWXZZ]\\\\WTTSQMMOQXVMHFGFDGD=DEHMMUVVVW\\\\a[^^^]YTRNNKCDDCBHLGGCDEHOPMRPTTXWY[\\\\]^\\\\]ZXSMKGJHGKGI´²¹ÁÄÃÃÀ¾½ÁÂÂ¿¾¹»¼¼»º»¹¹¹¸¶³³³²±µ¹·²½ÂÁÀ¿¶®¶¶­®¹»¹ºº¹¹··¶´³°±±°®ª¥u}w|~xr¶¾¼ººº¸·µ³³°²²±®rgg`]cababhiprge ´¾¼¹·µ´³³°°±°¬feefgiiii_]^hlnbbft¤µ·´³³²°¯¯®ª`eeccfe`di[U\\\\bhead`dpª°¶±¯¯®­¬©Y[\\\\ddggaYb`VU]cecddefdv~ª±±­««¨XXV^^ehc]\\\\`_Y]bacddcced]_t¡£¢WWTRV_abbb``_adb`a]]``_^ZZ[aksy~RSQPOOUVZ[ZXVURRTUTVXWZ[\\\\\\\\ZXVSLMJLJH=CZWW`bQEfaPYTTUTSVVYTRSL<! FELURSNJ`ieY[tusrp[POOMHKKMC\\\"\\u0010\\u0004BLV=C@(;gOMBM>V]7BguVJI=05-=F\\\"\\u0011\\u0006?XGJWX;mm`a[M6LNE9Rw}S8!\\u0016\\u0012\\t\\u001a7\\u0018\\b\\bMdFR\\\\W^hgbsoQ^I[KOf}7\\u0018\\u0019\\u0013\\u0007\\n\\u001a\\u000e\\u000b\\be®|u|wmdl][ZDK_vb2\\u0018\\u0007\\u0005\\u0012\\u001a\\u0012\\u0004\\u0004hàÙÏÎÊÀ¸²« ¥~|dCT?Igh6\\u001e\\u001f\\u0018\\u000f\\u0002\\u0007V¿ÚèòóßÏáØÏÃ·º¯¦]rtx\\\\0\\r\\b\\f_¬½ÕëøîàêíïêÀÕßÓÆ¹µ±§|heob(\\u0010q¦¦c~½ÒÏÓÕÙÚâèåàÝÔÑ¬yZMTbyf-@^qF!bb¥­¶»³ÆÍÆÆÉÉÎ¯:$\\\\±ªuqad[yT0EH-dàtXsy¤¨®¯¬°G\\u0012\\u0017\\u000e¨|tmqasoPPK8á%@IRRV`int|s\\u001eV\\\"Ed?JXjpPNRFuË|\\r!(##(/3;CF1\\u001d§ái\\u001bldM,<FGN@<>:G¤N\\r%#\\n\\u0003\\u0007\\n\\n\\u0010\\u0015\\u0014\\f ºÓ\\n&\\u001a\\u0007\\b\\u0011\\u0010'>A?5)%7\\u0013\\u0007\\n\\b\\u0005\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0002\\u0001\\u0017§Às\\u0003\\u0006\\u0002\\u0000\\b\\u0011\\u0015.3TTH@A0(%#\\\"\\u001d\\u0019\\u0014\\u000f\\f\\u0005\\u0004\\u0003\\u0002\\tm®I\\u0000\\u0001\\u0001\\u0001\\u0005\\n\\u000b\\u000f\\u0016TROOSRNLOIFCA@;0)$ \\u0019\\\"C\\u0010\\u0002\\u0002\\u0001\\u0000\\u0001\\u0002\\u0002\\u0004\\u000eUWURXWSVWSSNLKNOJIFD9,0%\\u001c\\u001c\\u001b\\u001a\\u0018\\u001b\\u001d\\u001fTUUSV[[\\\\][][VSTRPMLNQWUOJHKJHKHALMOQQZ^^^\\\\^d^aaa`\\\\VUQQNJKKHFLPKKKLKLSUW][[Y]\\\\^`abcab_]YWTQPLKOKMÆÄËÓÚÜßßßÞàßßÞãâßßßÞÝÝÜÝÝÜÚ×××ÖÔÆÉÈÆÔÝàáàÚÑØÖÊÑàÝÚÛÛÚÚÙÚÚØ×ÔÕÔÓÑºµ¢¨¯¯ª¦¡¸×ßÝÛÚÛÙÚÙ××ÔÖÖÔÑuzyy¿ÓÝÜÙ×ÙØ××ÔÔÕÓÏxvy~}~±ÄÕØ×ÖÖÖÕÔÓÒÎvz{yyx¬ÎÕÛÖÖØÖÕÕÒnpqyysyv}§ÃÔÝÞÚÚÜÙlljrrz{sxwy}|~ºÇÏÒÔÑjjfeirttt|~}||}zz|zwvvv{yx}¢dedc`_dfkrusppljmnomjjmnnnpqnh\\\\]\\\\^b`IHdfgqp]Ov{lwqnljimiefhj_B \\\"XXgqd^[]s{vgfzjda[NX`dR\\\"\\t\\u0002R_kSZV7MxabYaUy~Teu\\\\P@*69NO\\u001d\\t\\u0004MkUTgjExvkoj]Lie\\\\Y££m=\\u001e\\u000b\\r\\u000e#8\\u000f\\u0002\\u0005ZxTYhflsqkzv_oQmgu¬¥E\\u0014\\f\\f\\b\\r\\u0016\\u0005\\u0004\\u0005lº ynvbjp`k¨6\\u0013\\u0006\\u0003\\u000b\\r\\u0005\\u0001\\u0002dØÕÎÐÏÆ¿º·®²¤qSiYn´¢L%\\u0014\\t\\b\\u0003\\u0006S¬ÍäñõáÐãÞØÍÁÆ»²l¦¡¡¬·ÃÄ­vA\\u001b\\u0010\\u000e^ªÎèøîÜãëñëÃÛäÙÍÃÂÂ¿¶¤·¾¯7\\u0016m_|ºÉ¿ÈÎÒÔàæãßÞÙÚº¡¶¨sw|78Nc;\\u001b^]¥¯¥»Æ¿¿ÁÃË¯>,hÅ½}a.9;\\\"[ÙoK^aol~£¡@\\u0011\\u0017\\u0013»~RE=.vØ\\u001c-4=>COY_hob\\u0016T\\\"L¥wQZj{}ODG=lÃz\\t\\u0017 \\u001d\\u001d!&)1;<%\\u0017¥ßg\\u001akeV6CNMS<463@M\\u000b #\\f\\u0004\\b\\b\\b\\r\\u0011\\u000f\\u0006\\u001d¸Ñ\\u0005!\\u0016\\n\\f\\u0013\\u0014)A::0$ 3\\u0014\\b\\u000b\\n\\u0007\\u0002\\u0001\\u0003\\u0004\\u0005\\u0001\\u0001\\u0000\\u0016¥¾q\\u0001\\u0005\\u0002\\u0002\\f\\u0013\\u001a5>LOD<>.*)(\\\"\\u001b\\u0017\\u0014\\u0013\\u0010\\n\\u0004\\u0002\\u0003\\bj«H\\u0001\\u0004\\u0005\\u0007\\n\\u000e\\u0012\\u0018%JJJNRRONQGA?==9-& \\u001d\\u0016\\u001f@\\u000e\\u0006\\u0007\\u0006\\u0005\\u0005\\u0006\\u0006\\t\\u0013MOPQWWSVWQOKIHKKGEC@6)/*! \\u001f\\u001d\\u001b\\u001e !PQRRUZZ[\\\\Z\\\\[VSSRPLLNPVURNLNMKNKDMNNPPY\\\\[[\\\\afaccdc_YWSTQLMMKIOSNNNOLKRTTYW\\\\]a`bceffefca\\\\XURSONRNP\\u0001¸M=@AFXfËÇ³¸LLSbhb^^e[JL[¸dVVWMIL_ºµ¶USiwkkrzVmcii]¤e<;<D??GO¶ZZµ¥u~£]dQReiU.-*-114@Ntº´rµÙ©wdv¤Ukjzk§\\\\83.&*3:Xr`ÓÁÛX ÷¶cTHiq´Ã±Q6g~\\\\?A@`«`¬©ÁL|ì«MFk«e¢¯¦È¿lYÉ¿«¡¢Ê´¨§©ZDaÖáÊ\\\\ejSºz½Ë·ÖÀÅØßÜßäæãÜÙ×ÔÔ·lvÈñî|dI¢ÈÎÁ´ÖÛåèéãÜßäçèãâÞÛÎÃ½ºÐçç½«¼Á¿µ½ÎÓ×ÙàáØÙÞÝÜàíåßßÙÕÉÆÎÜª¤®}¤ ¦¿»ÓàÝÙÙãÛÒÙÜÙàáãáââßÔÄÌ·¥~e¡l¾ÂÚäÚÍÊÞßÝØ×ÏæÜÜÜÜÕÚìÛÉÇÆn¦Å´¢ÊÃºÄ»¼´ªØÛÒØÔÎÉÎÐÕÚÊÚ¹t­¡Ê$K¹Ã¹² ~xÈÂÎÓÓÕÀÆÅ´¿ÙÒÎ¥Ê£º =®¨§bpz¡Ä×ÌÉ¿µ´®¯¹Ã¼ÄÅ·±¾;Y¤¥{sr°²²´«¡ ª ª¯Ã¡²ÂÆ{dq¤ªs©¢£¤³G¾Ë¯b­»©l]|#>Â¶Ä[¦}vkucVX?A3hÒwBNÃ¿X{}|P08>CD<150øÙRY·§[kwc[hsqqx4\\u001d5HUT@58añëÍM`®¡Z^wlVZ{~QnP4=9=UZ`e°òìæºrR¤·]Vsd]iyaskVWXZqy{qÓñëìä¥g ËeM{uux}pwuqkdb¬ôïèèóÖÆkE}|}ysstuxzyo_ZX]SYÁüõòìðð¿®]9uzvxmcgecdd\\\\ZOGGOV^ÒòõóðèíÝ¨Z)anop^FHKKMR;, ;KRm ÃÜëõìïéìé² M\\u001a'8FQL8014:D;0*9ET| ·ÎÝòëðïîìÈ:\\u0016\\u0012\\u0019#-43238762/09CVz£¾Ïôðñññëá?$\\u001c\\u001e\\u001f\\\"$$'(*)().4BOa³ÈöóóóóïíÑS?70.,)+,..15>HUbu¢²ÀöóôôðíìêÐw`OG@<;=@AFJU\\\\cq¦­¶f[_|g.'*+2GPn©¤¢~>BGLPKFEHG?:KHL^U~aB99:356H xEETv`WKMQioEC:;IJ_E,%&.*,5?s~|JHwjRchpHF<9M[T8$&#&&!&4Dh£zajÁfa]_s<GFF^]]9%1-&&+2Qma}Â«ÍGï¦QKG|wPR_^dUe?*awS584S¤[¶vB}í¢AIfLbN>mg=4quZKEMvporhN>_ÚÓ²X]^GOb\\\\=f~QCLNLMHINPL`\\\\NQCA^ÂëÞ{l`=e\\\\OQYOeRIB@@BHHJLYVONSLMx¢ÈÖ£B>APE<?JE>>?FKKLo_^}yqab^no6+)BS<BB4.BhdPNGZaq~kkFPbrZDu.!\\u0013@pdV<((NtNA\\\\hd}{ªtNXZGzK*\\u0018:qY91(\\\"3UUptp¡uYg_H^utQe0);sE\\n\\u001d%$((=NNt¤XVZ\\\\?<DQx}}«b/->o<\\t\\\"*)+*;8:WYtjqQH<+(0BJJR|a-/Aj4\\u001eC76>:9KGB0FPI5,($!*9'($KyX)+8T'Ho@AFE9KQ.#PV,\\u001f\\u001b\\u0018\\u001b\\u001d\\u001f'1+!0iM\\u001a-6>\\\"{92676/A?+[O\\u001c\\u0019\\u001c\\u001b(17JJ5%A?\\u0007\\u00151;&¤6(-,.(/3.HnW$-9.B<8E-5 3^-\\f\\u0011327!+./*$\\u001c\\u0011\\u001e%%.*%#,4/('9%Dxh4\\r\\u00132xx5\\u001b+-,).(\\u001d-'\\u0014,\\\"\\u001f$7B9)+'$7rpZ)\\u000e\\u001bpv3\\u0013$,*'5-;fd\\u001d$3,02/9=?- GunjJ#\\u0013s9\\u000f\\u0017\\u001f$$\\u001e\\u001b\\u001f6G\\u001e\\u001c/,;@4=>8 #etlh\\\\<\\u001cj¦E\\r\\u0011\\u0011\\u0014\\u0015\\u0017\\u0017\\r\\u0017\\u001e\\u001e\\u001f&)+8/*# \\u0019Culd`Y/SP\\u000e\\u0010\\u000e\\f\\t\\n\\u000f\\r\\u0013\\u001a\\u001c\\u0018\\u0017\\u0014\\u000f\\u0017\\u001e%.$\\u001fa~}mhpJCG\\f\\u0010\\f\\u000b\\b\\n\\u000e\\r\\f\\f\\u000e\\f\\u0010\\f\\n\\u0016 *+\\\"6gtvovcGzE\\b\\r\\u000f\\u000e\\f\\n\\b\\t\\b\\b\\b\\b\\n\\n\\b\\u0018\\u001b\\u0018\\u001c9V^d~utqpnUe-\\u000b\\u000b\\f\\r\\r\\f\\u0006\\u0006\\u0006\\b\\u000b\\u000b\\u000b\\f\\f\\u0013\\u0015\\u0015$4ESZ|svxom`8\\u0013\\f\\f\\b\\u0005\\u0006\\t\\f\\u000e\\u000f\\u0013\\u0012\\u000f\\u000b\\u000b\\r\\u000e\\u0011\\u0015$(3GQ{z}ujm=\\u000b\\t\\n\\t\\t\\u0007\\b\\t\\b\\b\\u000b\\n\\u000b\\u000b\\f\\u0010\\u0011\\u0013\\u0016!$*;Izlnh3\\u0015\\u000e\\f\\f\\f\\f\\n\\n\\u000b\\r\\r\\u000e\\r\\u000f\\u0012\\u0016\\u0018\\u001c\\\"$,8A~lkrb8!\\u0016\\u0012\\u0010\\u000f\\r\\u000e\\u0011\\u0014\\u0014\\u0012\\u0010\\u0013\\u0014\\u0017\\u001b %*/39e_azX(#%&.BDY~p79;@=897>877DBAZUwQ<76701.;mb67EiNA5::G]=K<4PV`5$ !)&(/9kznb77hsS9S\\\\PiGL9-TgX.\\u001f\\u001c\\u0019\\u001c\\u001e\\u001d!.=agR_¶wO]nT\\\\H:52]ZV-#&!\\u001a\\u001e',Gd\\\\vµÀyAéB\\\\lud>PTeIP# UkG,1)DV®rC~ì;h¨ C[J9aV#\\u001f`jN=17uqfchaG<b×Î³cvzWK^W.RkD9DGBB>9>C<GEBN<<Y¸ÞÖ~xpEZUJHJ=SC:2113:8<>?@?@HGMp¸Å¢342>80-1+)148==>accthb^a]izy#\\u001b\\u0017/C+24&!=aUGHATeqs`jFR_xlPi\\u001b\\u000f\\u0004,YPL7\\u001c\\u001aF|rTCO{SUnr¢mJUaOo7\\u001c\\u000f+^K/\\\"\\u0013\\u000e+UTol^oKQPE\\\\r||cPN#\\u001d2_8\\u0004\\u0010\\u001b\\u0013\\u001f+:IHbVELU;:DKgozt =\\u0014\\u00181V7\\b\\u0019%\\u0017\\u001b$0/7HId^]BA7\\\"!(7BAFq;\\u000f\\u0019-P5\\u001d:1$)-)==0&>D?$ \\\"\\u0017\\u0011\\u0019)\\u001b\\u001c\\u0018BhE\\u001e\\u0016\\u001d7$>c<435*<E\\u001d\\u001fPK+\\u0012\\u0011\\u0014\\u0010\\u0012\\u0015\\u001c)\\\"\\u001b+Z@\\u001a\\u0016\\u0017\\u001f\\u0015f6,'*+$61\\\"VK\\u0015\\u0014\\u001b\\u0015(36GJ8$5&\\u0003\\t\\u001d\\u001a\\u00110&#!' $(!>\\\\N!+8-?74>2=\\u001e&1\\u000f\\u0005\\u000e\\u0019\\u0018-\\u001e\\\"#)\\\"\\u0018\\u0014\\f\\u001b \\\"/(\\\"\\\"$()\\\"/B\\u001f65-\\u0012\\u0006\\t#ln+\\u0014!%$ $ \\u0018($\\u0016-\\u001f\\u001e#0;3 %%%1+,&\\u0010\\u0001\\u0012cg-\\r\\u001a%#\\u001f,$/WW\\u0018&4.,'&237(\\u001c5/(.\\u001f\\b\\bd7\\f\\r\\u0017 \\u001f\\u0017\\u0013\\u001a->\\u001a\\u001c10571<<9\\u001b\\u0011=0%'#\\u0014\\r\\\\F\\u000b\\u0007\\b\\u000f\\u0012\\u0012\\u0012\\u000b\\u0012\\u0017\\u0018\\u0016\\\"+&73,\\\"\\\"\\u0010&R2(#$(\\u0016CO\\r\\t\\u0004\\u0005\\u0006\\b\\t\\u0005\\b\\u000e\\u000f\\u000b\\u000e\\u0013\\r\\u0016\\u001c\\u001c!\\u001b\\u000e>X=<0-7 ,pA\\u000b\\u000b\\u0003\\u0001\\u0005\\t\\n\\u0007\\u0006\\u0006\\u0007\\u0006\\b\\n\\t\\u000f\\u0013\\u001a\\u001b\\u0014\\u001b=H@E<76*&e;\\u0005\\t\\u0006\\u0002\\u0006\\t\\u0007\\t\\n\\n\\n\\r\\b\\u0007\\u0007\\u0010\\u0010\\r\\u0015,517B;<825/O%\\u0007\\u0004\\u0004\\u0007\\b\\b\\u0006\\u0006\\u0006\\b\\u000b\\u000e\\u000b\\t\\b\\f\\r\\n\\u0011\\u001e*/2A:=>355#\\u000e\\u000b\\b\\u0002\\u0002\\u0002\\u0004\\n\\f\\r\\u0012\\u0010\\u000b\\b\\u0006\\u0006\\b\\n\\t\\f\\u000e\\u001a'+FAAE;/9 \\u0005\\u0006\\b\\u0004\\u0002\\u0000\\u0002\\u0005\\u0004\\u0005\\u0007\\u0006\\u0004\\u0004\\u0007\\u000b\\r\\r\\n\\f\\u000b\\u000f\\u001a$JHFJ@03:\\u001a\\u0006\\u0004\\u0003\\u0003\\u0004\\u0006\\u0005\\u0003\\u0004\\u0006\\u0006\\u0006\\u0006\\u000b\\u0010\\u0011\\u000f\\r\\u000e\\n\\u000e\\u0016\\u001bRNMQE40:5\\u0018\\n\\u0005\\u0006\\t\\t\\u0005\\u0005\\b\\u000b\\u000b\\n\\n\\u000f\\u0012\\u0010\\f\\r\\u0010\\u000e\\u000e\\u0011\\u0013\\u0002¤iv¦·Ç®­²©±´²¯ÀÇË¼©¡{ml[§tHer~³¿±¨ ¥°¯³ÁËÆ½¯roiiYwn]x£¡«¹Æ¿ÅÅ®epzqhhTNfvkvPL¥³Ë¿¨µ©Mntl[JKIexphu^yws®¿¾ª°§zsOxkgbOFNEU`gxgmv`£«¢¬0.Q{pehZNRSLPqVYX «¦ry¦«±¦n\\u000e\\b/G`ii\\\\XRX?M^^RM_n{vlu¨¯·­l\\u000e1YfwmgOLUX@ORiaGQQUhw~¤­­ªª©^\\u001cqxq[GF[X4CPdcPS`]_^µµ««¨<-£¬§mUNW^\\\\7:7I_[L`oZ]|¡£§\\u001f8«°£|dono89LO[YFL_ez§§¬§x`N\\u001bE¢¬¹¸¹¬¦£8?X]YZP=Ir¤¨rY[L-k¥­³ÊÍ¿¸ÃFNWhd`N@Pr¦£qbkb4«¦´Ä½«¾IKR^TY\\\\U[}£¦¤¥¤oEÉ ¬»¸GGEXZ\\\\[Sq¡¡~K²¬´­°¯£ª¯±qnkxftzqyynkhvcCs ±´®ËÐ¡£³¶¹eSXagf[W]SFRO7^hm}ÀÌÃÂ¿ÃÆÇJ8EAKanb\\\\N:>@+RmCRlq|«ÍÉÆÆÄÌ32Z68LecC8.12+Qk|f]fytvÏÈÁ½»Â/@S+'39<3*\\u001d  <gu{}ÆÀ¸µ±·v1DC\\u0017\\u0011#/+)\\u001f\\u0015\\u0016\\u001aPsw¡Ã¾À»¯¥pV9,*')4\\u001e\\u0016::'`j´¶¦½¾Á»´­syys>*=\\u0014#hG:zªº·»¼Á±qLqh{@?F\\r2c:U{]bx~{u§£¿µ¿·¢z~WW^Kr`DC\\u0011Ia8_Z <`easf^¤»®¨ªye}j\\\\cQV}M<&wMJUIW_bIVP@¯wtsulqqs[/'e^dGBA_fgB0;a}x|}sdxH&\\\\_j^F?_guc-7Sevg[atvhziggui.DQYa~£~msuc\\\\rcivx psl]`^Ub·°uuunvycQf|xoennjn^[zÎª¹ÃÒ¾©ÄßæÛãäáÞìóóåÎÂ»»©Õ m­ÄØÛãáØÕâàãïõêßÌ¦­²£¿Á£¯¯s¬ÈÖçâÈÌÛêóîñæÈ¦r³¢xs»Ê¥jf§ÕØÅÄÊÌáùêÁÌÚÛ­[¿±~mp{¬§°{¢ª¬À¿ËÞëëÓ»ÏÔÌ¿q¯sist²¹µ¢²ÎÎÜÙÜÊÉÕÊyxwtvuuzÀÖÜÒ¬¡»ÁÀÍÞÜÜØ®=0Ma~uwdx¥²ÉÌ­¦³ÈÛàäæà©;]~rlrrb|v§´¹ÀÇÙââßÚßI¢¢ºÁ|d`tpUq}¡¸ÉÄÊäéáÞât`ÕÕÒÇsgowv\\\\ibm}±±½¾ÇÐÛÎÂÆYuáÙÌÀª{[aofzu¡²ÅÕÐÓÖÐ·RÍÎÒÚÛ×Ã¿À¹V_ult}p~ ÅÉÊÊÍÇ¦tQÃÇÉÔÝëåÚÕÙepy|y}nbt¼À¼Á¾­wAËÍÃÃÂÛæÜÇÒ^fonbhidpµ³¸¹¶º½º¨zEáÉÄÅ¾Òçâ¿·HQS\\\\ab^Z~¨¢¢¦¶¶PØáÞÖÓÓÕÚÑÌdns{p}zSÅÖÈÊÓÙÒÜéé¢®¶½½xnr~qpvj]ecNyÀ»¡Á½ÍáèÁÆÊÍÊÓ[S_ZasupbMKIAw¾½q¥°¸¼ÓÐÎÏÔÓß6BkDEVqqRH>;:B|¦µº·±ª¼ÓÍÉÌÒÒz*KV.,9AH?6,.1[­´µµ²¬»´¶·ÍÄ¾½¹¹k1VB\\u0015\\u0014)993*'-6w»¨»½²ÃÅÑ©¾ÅËÃÄ½©¤~wmD8949G*$T]N¼½¼ÉÞà×¹Á«ÅÃÂº±¹wS?T!3sj«ÍÇÃ¹ÈÊÚÍÂ¹£¿·»¾¿¶{KQP]\\u001cGf¨³¶®«¾ÆÎÆ·Ä³½»¤psF?_WzmVW\\\"e\\\\Jt¢¥ÏâÂ¿¬©X]G6G>TkQ;¥po{su~wk·Ü®³bSYS[Vm«zD;mgl¦ nOT«Ëµ¦¡¢}wv{rM·`6ukj¦°JJr¨¼©¨£ªb4S ¬¿Á¦¡®Q]p°¤¤­¾­nb[9Rz ¬ÇÁ¹¤¨¡²¶q\\\\^W]iGi©ÀË±¢ªT=esw|²Á£th]SCIYUHdnaZ^myx_XIE9T1+]fi{¨§xQAGNMO[\\\\c{yZkt\\\\bUOH9ABOzXPq~mE27=QP\\\\xseyIVlaTPT:14Im[OYADicC\\u001f)CMbyt}£Y\\\\nkURG211@PA<abSaN@D7;UvzxxÁÔq_RNF8.56:?>N]iGM_FUT>Mbqqxy »ºcQOA9=>;3R;3(N_lyVAH;/Hhqzyn_Q[WOGF@J/.9:/%-08U[6\\u001e\\u001c*@LTcw_PIOZU86@I00)?>*5/##4=:>WZURPerIUXXK/,BF#%)5+#2?+\\u0016\\u001dH]\\\\hrla]inbcL>6=BD% \\u0018 \\u001f&\\\"+.\\u001d)KS^xniZNmwhl|]VKUOO!\\u001d,(-1$ !(C_ux~lT3\\u001cNtJT~¤{\\u0019\\u001e30-)+\\u001f Eflzk6\\u0015\\u0012SvBRjx»ª£¶#,4<5*!\\u001e(Jz§¢_HMn^tni^QBj´\\\"(/4)(+.<i´ÄÆÃÁ¼¯¦ChhoYNgXaiz!&'5<:48l¦¸À¹³»»ÈË¤MW_ayest6CqT[`tea£©°¦¡ªWBAJAGgh<V±¡¬¶½Âwqw{Q/OJ\\u0018\\u001b0?*F£ÉÑÌÁÉÌddpkwyc_Y4+BA/\\f\\u000e\\u001b\\u0016\\u001d:nØÚÑ½¿Âv:EpQZpi[OLA$)%0K8,  \\u001e+KØÖËµ®©c#DY45LY\\\\OA.2*(7763QlA%.JKÐÍÂ¬V$HK\\u0018\\u0010+DG=(\\u0012\\u0017\\u0016/XAA*?~[3\\\"akÑÍÏ·faP5\\u001f\\u001a!8R.\\u0013$#\\u00108]BM0No=5kbÏÑÓ»sVeSLN1=_\\\"\\u0018C\\u001c\\u0011Pvw`FSThLNh[ÌÇÆ²£J&N60N)Wj (=\\b\\u001dH?=:A>+E`npfÇ½ÀpCO.\\u001e\\u001f\\u0017@3Pf&%1\\u000e$#\\u0007\\u000b\\r &*\\\"3py]ª¡¡q1!L1\\u000e\\u001c\\u0013\\u001a9@T#%9,\\u001a'#\\u0019\\u0010$\\u001b\\u001f\\u0017\\u0013G]/ynK( (+\\u001c(+5ABD&(%A\\\"\\u001c\\u0016\\u0016\\u0011%\\u0019\\u0011\\u001948F,yd\\\\L2#\\u0016(H0!UTN<%+\\u001e84 \\u0011\\u0010\\u000e,6\\u0019!-&(8QJHPL/%6>&\\u0018/3?F<52@XU1\\u0013\\u00152<\\u0019\\u001f \\u001c\\u00181URZ\\\\S</#/9()979MI6*Bq^8+:=9(\\u001e\\u0013\\u001b0ftdMFK9+6GCBQA*/>9C8SjbG0:@0)\\u001d\\u001a,\\u0007\\u001c\\u001e!>?\\u001f\\u001d*7C\\\\L9KE9JbVG;>9*3.)&%+4.\\u001b\\u001b\\u0015&<')/0HxgBKn}mLRUR[cpus\\\"!\\u0018&R4+7Aqll¹³²´¸¶±«¥¦¨¥§©¯±°-1.7S>,-6[ldw±Â¿ÆÎÍÈÈÁÀÂÂËÇÀ¿½»MTP5,.%&/:=9MfÇÚäëåÙÓ¼®¨³µ½¾¾ÀQ8\\\"\\u001f(7BUeeehk|¼èöñæÓ´£¸½»ÁBK4 AeinÌâÞÜØ»~nx±»¸ÐGW: Gx~«±ÂÉÅÇÇ¿¦ln½º²Ù:I>\\u001fC~y~±º¿º²¥¯·¡kfj¨¾¯Ù?YS!<qu¤¬¸·´¨¤»a\\\\T¼³ËPaS\\u001f2`~¥²°¸¯¯¢«pPH@m¶±ÉbS>3DHn±¶£{®¬¤¢{ydA:3e²®Í\\\\E5o^Z¥«ª¡t{xzwd4-)h¯¯ÔQ4N©Ñ­eyghy}ud|[+%\\u001bk¹¶ÊJNÍ×Ø©mkliiUg}rurcYS5\\u001e\\u001c\\u0014yÅ³®d_µ×ØÑËÕFLGET~l\\\\^cV[6\\u001d1\\u0017\\u0010{·«Æ`ÙÖÒËËÛ¨:>06u¤sT=@COD\\u001cB\\n`²¬ÖÄÊÔÖÔÔÓ×Â`D/9ot^F1#%1zÇX\\u0012\\u001c0 ¸ËÏÍÓ×ÐÏÏÍÒ­U::\\\\pR?5,By²Èr\\u0010g´C\\u0010¿ÇÉÉÑÓÏÎÉÈÉÊ^+,yÇ®¢Àº·\\u0014E¿w\\u0012{¼ÈÅÉÏÇÆÆÃÈÃÌj\\u0013\\\"ÖÏÒÍÁ¿Â»¾¢!KÉ¦#yÅ¿ÂËË½´¶¶Á¾Åz\\u000f$¡ÑÉËÌÁ¹º¹Á®2dÆ¹AxÉ·¹½¸¹º·µ¹±¹\\u0012)¨ÊÅÃÇ¿¸µ«²)n²®Lm¿¬¨¬¬ÁÀ¿¶¨®\\u0014\\u0019¹¼»¹¬¤£§~\\u001ap¤¦CH°¥¯¥®Â»±¬¨­\\u0017\\t>·´°¢ e\\u0014t?)¨°¶·¾¹ª¡­§£\\\"H(2q¨¡A\\u0014qH.­²¾½½·±°¹¬¤\\u001ekn# fu41dWJ©©¶ÀÅÀ½¼µª¦\\u0019YZ\\\"E~hYiwsvum|¤°º··º²¥l0jyIOry}nyv¤yiy{¡~wx|z}}ujbvypjhe#\\\",ST1/>MSl`PcR;HgcPCC<.?<7538@:\\u001e\\u001c\\u001f:N56<<QuR\\\\{¡oPbjky$!\\u001e6_<09Cx©}¬ÌÅÇÊÏÉ¾³«°ºÀÊÏÐÑÐ42/=Y@($.^uo¡ÆÜÜâèåÚÒÄ½ºÁ×àáâàß_WJ/+*\\u001a\\u0016\\u001d*0/FbÔíôõèÔÄ¤§¸ÎÞàá¯F(\\u001a\\u0017\\u0017 %-:>AGSoµÝâÓ¿¡yaZL\\\\oÒÜÙß¦52#\\u0016&667HQQYdYi®¦ wQO=8G_¾Þ×î78!\\u0015%CJLFBKVemq~cUD10T¿àÖô&)\\\"\\u0011!>MP?GW]Zbry}vk^ioUL/)6¢ßÔï&86\\u0014\\u001e6CJ:\\\\o\\\\U^lwtk]KZoPA($\\\"|ÛÙÜx0>7\\u0018\\u001f/DKEk{_GUpwleW?@aR4 \\u001b\\u0016aÔØÖk<.%7B&<HWu~mAJnka[I21IV2\\u001c\\u001a\\u0014_ÒÓÖl3! |¦K0Kdoqj:>\\\\ZXL:366Y<\\u001a\\u0018\\u0015iÓÔÕ0!K¼å°WGYPKO34SSO?694,S?\\u001a\\u0018\\u0011vÞÝÇ9O¦ãîì´O6/+1(9\\\\N?995,.8$\\u0017\\u0016\\u0011éÝ´[\\\\Âìðéãç+%\\u001e\\u001d%R]H70051A%\\u00175\\u0019\\u0011ØÔ×gñðíææó¯1&\\u0013\\u0017EshG-#&*B? N\\u000foÑÒðØáóóðïîñÎZ-\\u0010\\u0018IP@+\\u001c\\u001d .Õ]\\u001b  #;¼Üéêêòõìëëéå­B\\u001d\\u001dKfL;69NËå~\\u0019|ÇJ\\u0018àåçæíñìêæèêÛZ\\u0019\\u001dØÁ« ¡ºØÜÜ\\u001bVÑ|\\u0018Ûåâæëçææâêìët\\u000e\\u001d¥øòóêâßáàã²)[Þ²+âßâêëàØÚÚåæè\\u0011\\\"·õòïêäÝÞÞãÀ=vàÐNãÚÝâÝÞßÛÙÞØÜ\\u0017*¼ëíæäáÝÙÐÒ®7ÎÉ[~ÙÔÏÔÇÒåäãÛÎÑ\\u001d\\u001eÕÞÛÖÎÈÇÂÇ*ÂÁSZËÈÍØÍÓæßÕÐÍÑ%\\u0015Q®ÐÐÍÄ¸´ºÀz&¾¸Q<¸Ï×ÝÞâÝÍÄÐËÇ4Z=C¯ÆÃ»¸´«W(¼²]D¯ÏÔàààÚÔÓÜÏÈ¥40'v¹»¶·³KG¦¨pb¤ÉÉ×áæâßÞÖÉÅ/p®l-W¨·²¤u¿»ÅÑÚ×ÖÙÐÀ´D©dh±­«¤«¥§¢ ¨°°¸¼º²µ½Ã¶°£®«­­³±³ª¥ ©¯©¯¨¯°´º±«£³Á½À¶©¶´²ª±µ¬°«¢§·´ªª¢««« ¥£§´½º·¶·¸®§£¢¡§ª',/HH.2?GJbUDXO<Id\\\\I>B?094/,)-5/&)'7B0;B=GufCLgw~xkoZ=KNHPVaed*+(:V87DGkhg¡.03BV@202OaZp©¡¡¤£ECB2/3(\\u001f\\u001d#'%;Sª¹¸·®{jb]zl4'$&%$!-<?BEFW±´ªbMD4@O`{*4/\\u001d#0-1DOQZ[IP~a99*'5B¢h5=+\\u0015\\u001e;>>;:GRZ]\\\\ficlobB;2##>©e%-&\\u0017*@>@3<OUNR]__UQGMN<<% &t¥e':5\\u001b.=3:-OaNHNW]VKD6?P83\\\"\\u001f\\u0019WT4A5\\u0018%05;6YgK9E[]OJB.*E9&\\u001b\\u0019\\u0012CJA3$).\\u00181:FaeS1:YQEE:(\\\"1<\\\"\\u0017\\u0018\\u0013FN:'\\u001f^w-(?RYUN+/G@=;2/-#?+\\u0015\\u0017\\u0016Rq7\\u001d3¢{83JD=?,*@=9/.61!>7 \\u001e\\u0012Y7:r¡¥{.(,*-%-F9--10($)#\\u001e\\u001d\\u0013h~DF¬£¤X\\u0016!\\u001e\\u001a\\u001b@E2+220!+\\u0018\\u0011'\\u0012\\u0015n~>m°¤¨}\\u0017 \\u0017\\u0019<bV<-0- #e/\\u0015k2\\u0013Y¬ £  ¡<'\\u0019\\\"DC4(\\\"%\\u001c\\u0017TD\\u0012qp\\u001f-~¦¡ ¢ ¢¢7%(>M4+,(3]V\\u0017P8\\u0011e¡¤¨ ¥E\\u001c!_¥|wsh\\\"5\\\\\\u0013_¢¨U\\u000f\\u001dp±««¥{*@\\u001d_¡  f\\u0014$­¦/Z0`r\\u0017-«%c?]n\\u0018\\u001f¢{f\\u0017e>B j\\u001a\\u000e@uqvS\\u0014i<(}j$L'-c}zvp3\\u0014e|>,~r kc$(Zy}z|w]+2XlpBBt¡o\\u0019XX->amylSNfi^a]_iz\\\\-hzmBDai{xvovrrl]fenvv~uy~}i`}xlv{}vniryswpw|}vjl|u}}zngimr~wwo{||rxuu|y{xvow|fvuYSknaqudc`\\by|||}}~~~y{}}~~~~~~~zz}|~~z{|}|w}}{~~y|~{|~~~~~~~^afghoqvt|~~}}~~~}{,,.37;@E=Ssypmpvuxqrtmjnwyxt---,-**4/Hr´·£gCDDELQKLMFACKMLR,+,****07JZp{tdU9+-,0023220//../))*(()*,=RFRTJRPD305420/..-++++*+,,+*++-:YFDONYJOP0+0110//.-,++*+++*****2UEIfo¯º½@.12-,--,,))*&(*))))(/Zy¨¾¼ÂßáÝÁr+-.10///,+**%'))('('2]z¡¬¹m7/...++)'++*(''&%$%%3@5P_]MHLo58GT[\\\\UL=((+)/+$#$$49\\\";]ZYQLok¤¶¿ÇËÈÄ£?&12A7\\\"$##:9&YufT;XµÁÖæèòôîÞ<'<?/%\\u001f\\\"##<9XxcJG»ÇÁÃÖæîíÑ_6').+%$%%$&?`»¬]x¯ÀÉÐØàæÓ¨k0\\u001f1'%'(')*)%*)V±×±²¬ÆÔÎÕ×Æ§q<\\u0018\\u000b\\b\\u0019((**)(*0?847rØÏ²½ÑÓÚ×Áp?\\u001c\\u000f\\f\\n\\r\\u0013&'%''00VyyÒÈ¿ÉÒÞÍR)\\u0015\\u000f\\f\\f\\f\\r\\u0010\\u0018')('&o¢­¼·®ª£ÒÈÉÎÆÆ'\\u0013\\u0011\\u000f\\r\\u000e\\r\\u000e\\u0014\\u001a\\u001e')&'&ÅË¬svÔ¸­pSO9&#\\u001f\\u0018\\u0014\\u001d\\u001f\\u0017\\u0017#&%$%\\\"¼³8Wjy£¸`;..p¡©rd>\\u0017\\u0015\\u001b!  \\\"#\\u001f}dBE6P¢ÍÓË©¡·ÇÖÝèíáÏ¶x5\\u001b\\u001a\\u0017\\u0014\\u001d\\u001f \\u001esoeHBNlÄÚÜáâèêëìééçãÙÍ¯3\\u0015\\u0012\\u000e\\u0016\\u001a\\u001c\\u001dlNT©ÖÕÓÐÖããçéììéâØÍ¿¦U\\u0018\\u0011\\u0011\\u0015\\u001a\\u001b\\u001b®«xsÄÐÓÒÐÔâæêëìëéâÖËÆ´y2\\u0016\\u0015\\u0017\\u001b\\u001d\\u001cÂ½ÆÌÒØÝáâæèëíïîêáÑÊÉ¿§r,\\u0016\\u0019\\u001e\\u001e\\u001eÁµ¨­ÇÐÒÕØßâäççéêéæáÖÅ¼¹°¤?\\u0019\\u001c\\u001f  º¸¶¶¸»¹³µ­·Ã¿º»»º¹¹¹¹¹¹¸¸·¶¶¶µµ¶½ºº³³¶¸µ³­¶»¼¼¾¾¼¼¼¼¼¼¼¼¾¾¹····¸¹¶¶µ±±±´°³¹¶»¿¿½»»»ºº»¹º½¼¹¶¶µµ´¸µµµ²±´³±¬³·»¿¿½¼¼»»»»¹¸¹¹¸¶¶¶¶µ¸´´´³­´µ³®¸Á·½½½¼»»»»»¹¸¸¸·¶¶¶¶µ¹µµ¶·´´ºº¶µµÁÁ¿½½»ººº¹¸·¶¶µµµµ´£¦«©­±´°¯³·¸»¼»»¼º¹¹¸·¶¶··¶¶¶zy{||¦®½µ³ª¤ ¥««¯§§¨¢£«¬¬® ¸ÊÍ¾~|}}}~~~¨¦~zz|zy{{|~~}}~~}|}~}|}~~}~~~}|||||}|||{|y¡µËÓÑ­~~}}{{|yyzyyzy{}ÄÒÑÓèæâÔ¤~|{{{vwyyxwwy¹ÈÒ¾«°­~zx{{zvvwvutuv}~l[¶©¢yyuuyxtstt}vkZ¥~}¾«·ÊÏÖÚØÑ¹}uz|ssssu©iLf¡ÊÕáëìô÷ñå´xsysprsr~|¶¯}\\\\ZÒÜÕÖàìóïÔ wquwrrttttsÒÇ¸£qÄÖÚÛãéëØ°w:>xsrstquxuuvrÉâÄÈ¿®ÕäÞáàÍ­yG$\\u0018\\u0018Ouorrtqtz~yâÚÁÌàáçáÊ¦{L*\\u001d\\u0019\\u0016\\u0015(dqmoowwª¼°¤ ÚÓÎÕÞéØ]5\\\"\\u001e\\u001c\\u0019\\u0019\\u0019\\u001f;jopon¥¯ÄÁÅÀ»°¦ÜÔÔ×ÊÄ9#!!\\u001f\\u001b\\u0019\\u001e%+QnmmnmÚáÈ ¡zÜ¹¨lXbT<683).-#3bkiijgÙÖ¯Ycot¬ÃjNFJ²´º¤W$ Leabghd¿·cYKX¨ÙâÜÂ¼Î×àèðòëáÑUBOST^dec­©d[]×éëîïðïïïîíììçàË£aGEJW^`a¼¹ªo]l¿äåäâæììëîðñïíæßÙÆ|FCLV]^^ÐÎ½~³ÚßââáäëîîðððîíäÝÝÐZHPW^`^Ý×Äª¾ààåæéììíïðòôòðìãßßÙÇ^OX_`_ÙÐÉÎßâåæåèëìììîïïìéãÛÔÓÏÊ¶oPY^^^ßÜÚÚÜâãÚÚÐ×ßßâãàáââââââáßÞÝÞÞÞÞßäààÜÝáãÞÚÒØ×ÝäæääåååååååæãàààààáâßßßÝÜÛÝØÙàÜßâåâáâãããäâãåâßßßÞÞÝáÞÞÞÛÚÝÜÙÐÓÛßâãâáâãäääâáââáßßßßÞàÝÝÝÜ×ÝÞÙÐÔÛÕßââáàãäääâáááàßßßßßàÝÞÞßÜÜáßØÔÎµáääããääääâáàßßßßßÞÝÂÀÃÈÊÐÍÏÓÔÑÔÕÚÜâáßáãâáââáààáâäãÞ©¦¨ª«°¯¯¯½ËÏÚÒÕÍÅÁÇÎÍÑÊËÌÆÂÇÐÔÔÔ¹¸¸¸¸·³²­µÄÏÛÞÓÃ¸»·¶»¾¶¶¶°«­¶¹··²±²±²³±¯ª±»ÀÅÈÃ¿··¹¸º¹¸¶¶¶´³³³²²®­®¬«­®­§±±¶¸·¸¹´±¸º·¸¶´´µ´²²±°°¯¯°¯®¯¯°©¯¸¶¹·¼··¸²´µ·¶³³´´²±®®®°®¯®®®­®§ª¶¿ÁÕßááÉµ¶¶·²²´³³²®®®««­¬¬­¬­§¢ÞâäçìéìàÆ¶³±´¶·µ±®®­®©ª¬¬«ª«ª¯¯±ÏÚâÖÆ¬ÍÎÁ´´µµ±¯®©§¨¨¬ª©ª©¨§¨§¯´¯²¿¾µkÍ´¿Á°°´´·ºµ¬©­­©¨­«§¦¦¨¬°­°´´ }i´ÑÉÎÛÚàäâÛË«¨­ª´³¦¦¦¨®±«´Ä´z]u®²ÛæëòðöøóéÁ£¦·¶¥¤£¥¦¦«ªºÌÈ´kl©êñëëìò÷òÖ§¢§©§¦§§§¦¦ªµåÝÍ¸×èïìó÷óÞ·DT ¥¢£¦¤¥§§©ª§°×ëÙÚÐºãõîìçÓ°~O-\\u001f\\\"r¨¢¤¦¥ ¤«±²®§²èåÒÝïëòìÔ°V4&\\\"\\u001f\\u001f9¤¡¢ª¥»ÐØÍÂº©åáÜçïóÝ iF5.,%!#-W¢ ÏÎÜÙÕÐÇ·«çàÞæÕÇK6671)#(27rðïÚ¥«ª~¤ã½®ubzlRNNH;<9.FôìÍrpyu³Ïªx^\\\\c¤ÆÆÍ·£n4+kãÜÀrcZf²âïìÑÍÜàêòúüõïç®mZjuuÒÒ»xjbçôö÷øøöõöõóñôôóâ¾{\\\\aizÝÚËx~Éóòññóóóô÷÷÷ôõôóïß\\\\^l{ëåØÈçîïïïðóõ÷ø÷öôõòñòç²rdtôïáËÙîðôôôôõôõ÷úûú÷÷ñòõîÛ±}uíæãéñîñóóòòóòòôöøõôòêèìéàÐt\\u0003}nfjj¯¯jJGIP`n|¦³¼ÄÌÏÍËÊÊÊÈÊ°Á»¼»³»·vXCGPMRZ^foª·ÀÃÆÌ´ºÁ¹¿±°ÅÎ³©¯¬A>@?BHKPT^mzÅ±¨¶½Å¼³ÄÊÂ­«³¼ÈÀv039>@BCA?>>AHªµ½·­ÅÌÇ¾ºÁº+\\u001f)3:;:876654pu©¿¶©»ÇÂQ\\\\©ÀÀ±m^QE:1,+,28Bi\\\\ly²Åº´Ä]SL°¶ÁÅÇ¾´©rMXt¢yRd^b_aNJH¯±µ¿ÆÇÍÕ¯¦²¶´¼U`]J'&(,AAE8K°®¯ºÎÌÅ§lLf{z~~ yYXXO0$\\\"&30?2C´¨¶¸º¯T2'+0.03/½zF=YQ2%!$/:1$;WjwbQ1 \\u001d\\u001c\\u001c\\u0019\\u0018\\u0017\\u0016\\u0018ÇA9RA-*&#+95(4+\\u0018\\\"('\\u001e\\u001c\\u001b\\u001e\\u001d\\u001c\\u001b\\u001b\\u001b\\u001b\\u001a\\u001a¿®M8@5))$!%(.)+\\u001f\\u0011\\u0014\\u0017\\u0016\\u0017\\u0019\\u0017\\u0019\\u001b\\u001b\\u0018\\u0018\\u0018\\u0018\\u0017\\u0018¸²^II6/&\\\"%&*&(+\\u0019\\u0011\\u0013\\u0015\\u0014\\u0014\\u0014\\u0014\\u0016\\u0017\\u0019\\u0019\\u0019\\u0019\\u0018\\u0017\\u0017®gYR8D>5/).-('\\u0016\\u0011\\u0012\\u0013\\u0013\\u0013\\u0012\\u0013\\u0015\\u0017\\u0019\\u0019\\u0019\\u0019\\u0017\\u0016\\u0016x]bNRD`Q@>-0,\\u001f\\\"\\u0016\\u0011\\u0012\\u0014\\u0014\\u0014\\u0012\\u0013\\u0014\\u0017\\u0019\\u001a\\u0019\\u0018\\u0017\\u0016\\u0015UCeUM>eRC3,7,\\u001e\\u001c\\u0014\\u0011\\u0012\\u0013\\u0014\\u0015\\u0013\\u0013\\u0014\\u0017\\u0019\\u001a\\u0019\\u0017\\u0017\\u0016\\u0017A?e^?JXW;*3('(\\u001a\\u0012\\u0013\\u0013\\u0012\\u0014\\u0016\\u0013\\u0013\\u0013\\u0017\\u001b\\u001a\\u0018\\u0017\\u0017\\u0017\\u00183=W[IOQ]3).'&$\\u0016\\u0012\\u0014\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0013\\u0016\\u001e\\u001c\\u0017\\u0017\\u0017\\u0017\\u0016*6EZdlZI139D,\\u001b\\u0012\\u0012\\u0015\\u0014\\u0014\\u0015\\u0014\\u0013\\u0013\\u0013\\u0015\\u001b\\u001d\\u0018\\u0015\\u0017\\u0017\\u0017&4E[h9KTJ?(\\u0019\\u0014\\u0013\\u0015\\u0015\\u0016\\u0016\\u0013\\u0012\\u0013\\u0013\\u0014\\u0019\\u001d\\u0018\\u0017\\u0019\\u0018\\u0017DWgldoVkg:& \\u001a\\u0015\\u0014\\u0015\\u0015\\u0015\\u0015\\u0014\\u0013\\u0014\\u0014\\u0015\\u0019\\u001e\\u0018\\u0019\\u001c\\u0018\\u0017gqvWD:ZnY7\\u001c\\u001c\\u001b\\u0019\\u0016\\u0015\\u0015\\u0015\\u0015\\u0014\\u0016\\u0015\\u0015\\u0016\\u0016\\u0017\\u001d\\u0018\\u0019\\u001c\\u0018\\u0017rtlUHCMO-\\u001b\\u0017\\u0017\\u0018\\u0017\\u0016\\u0014\\u0013\\u0014\\u0014\\u0014\\u0015\\u0019\\u0017\\u0016\\u0014\\u0015\\u0018\\u0015\\u0017\\u001b\\u0016\\u0016cDA;334&\\u0019\\u001b\\u0019\\u0017\\u0015\\u0015\\u0014\\u0012\\u0012\\u0013\\u0017\\u0015\\u0018\\u0018\\u0016\\u0017\\u0015\\u0014\\u0013\\u0016\\u001c\\u0017\\u0017zG(\\\"\\\"\\u001e(,#\\u0018\\u001d\\u001a\\u0015\\u0014\\u0015\\u0016\\u0014\\u0012\\u0014\\u0018\\u0015\\u0015\\u0018\\u0017\\u001d\\u001c\\u001b\\u0019\\u0017\\u001a\\u0019\\u001bqB*\\u001f\\u001f\\\"+0)!\\u001b\\u001a\\u0015\\u0014\\u0016\\u0018\\u0014\\u0012\\u0016\\u0019\\u0018\\u001a\\u001c\\u001f(,-)%%%(i>+\\\"\\u001f#*40(\\u001d\\u0017\\u0014\\u0014\\u0013\\u0014\\u0013\\u0012\\u0015\\u0017\\u0019$.<FHLNMNRWgPB;:?EKH90,&\\\" \\u001d\\u001c\\u001d &5L[cefimnoruheecehhfdV[]VPMLKMS\\\\hruxz}~~~}himrwwvsmgtrsstuuvxz{|}~ils{~{rw|xy|~}eZacª©X68=FSbq«·ÁÊÐÐÐÒÒÏÍÐ¬¾¿ÃÂºÁµ~lM56<6:BIVcv§¶ÂÉÍÓ¹¹Â»Á´³ÉÐ²£§¡s0$&'.428?J]oÆ¶§´¼Äº²ÆÌÁ«¨³»Å¾r! #%%\\\"$%%&)+2¬¶¾¹®ÄÊÆ¼µ¾»%\\u0014\\u0018\\u001b\\u001f#$$%%#\\\"!ieªÀ¹¬»ÇÀAL¼À±eUG9.%  !%*4_Gcw²Ç½´ÄQ>8¬¶ÀÂÄ¼²¥hDOk~p=Z[`_\\\\C:5«°µ¿ÇÇÍÓ§zª²°¸xAUYF%&),>9;,9­®¯ºÏÌÅ¦fF`uu}}¬sDLRJ,\\\"!%.&6*2~°¨µµ·¬Q/#',+.1-Éw53SK.#!$(/)\\u001e,Lhw\\\\L,\\u001c\\u001b\\u0019\\u001a\\u0017\\u0015\\u0013\\u0012\\u0014Ì>7M=-,)!&20\\\"+'\\u0019\\\"&%\\u001c\\u001b\\u001a\\u001d\\u001c\\u001b\\u001a\\u001a\\u001a\\u0019\\u0018\\u0018¿®N7<2)+&\\u001e!$*$$\\u001d\\u0014\\u0015\\u0015\\u0016\\u0018\\u0019\\u0017\\u0019\\u001a\\u001a\\u0017\\u0017\\u0017\\u0017\\u0016\\u0017·±\\\\FE3-% !\\\"&\\\"#$\\u0017\\u0014\\u0014\\u0013\\u0014\\u0014\\u0014\\u0014\\u0016\\u0016\\u0018\\u0018\\u0018\\u0018\\u0017\\u0015\\u0016­dTO5@:0+%*)$ \\u0015\\u0013\\u0013\\u0011\\u0012\\u0013\\u0012\\u0013\\u0014\\u0016\\u0018\\u0018\\u0018\\u0018\\u0016\\u0015\\u0015xZ^HPAZH79),)\\u001b\\u001b\\u0014\\u0013\\u0013\\u0012\\u0013\\u0014\\u0012\\u0013\\u0014\\u0016\\u0018\\u0019\\u0018\\u0017\\u0016\\u0015\\u0014Q=_QK;^H8/+4)\\u0018\\u0016\\u0013\\u0013\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0014\\u0016\\u0018\\u0019\\u0018\\u0016\\u0016\\u0015\\u001652][<DRN0)3%!!\\u0018\\u0012\\u0013\\u0013\\u0012\\u0014\\u0016\\u0013\\u0013\\u0013\\u0016\\u001a\\u0019\\u0017\\u0016\\u0016\\u0016\\u0017,1MVEIJT(!(! \\u001f\\u0015\\u0012\\u0014\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0013\\u0015\\u001c\\u001b\\u0016\\u0016\\u0016\\u0016\\u0015&,9P_fS?%#*;'\\u0019\\u0012\\u0012\\u0015\\u0014\\u0014\\u0015\\u0014\\u0013\\u0013\\u0013\\u0014\\u001a\\u001c\\u0017\\u0014\\u0016\\u0016\\u0016\\u001d&6Ocz0>C;6%\\u0019\\u0014\\u0013\\u0015\\u0015\\u0016\\u0016\\u0013\\u0012\\u0013\\u0013\\u0014\\u0018\\u001c\\u0017\\u0016\\u0018\\u0017\\u00161CT^`kK_\\\\1!\\u001f\\u001b\\u0015\\u0014\\u0015\\u0015\\u0015\\u0015\\u0014\\u0013\\u0014\\u0014\\u0014\\u0018\\u001d\\u0017\\u0018\\u001b\\u0017\\u0016N[fL?4RfQ1\\u0019\\u001a\\u001b\\u0019\\u0016\\u0015\\u0015\\u0015\\u0015\\u0014\\u0016\\u0016\\u0014\\u0015\\u0016\\u0017\\u001c\\u0017\\u0018\\u001c\\u0017\\u0017]dcO@;GM-\\u001b\\u0017\\u0017\\u0017\\u0016\\u0016\\u0014\\u0013\\u0014\\u0014\\u0015\\u0017\\u0019\\u0016\\u0014\\u0015\\u0017\\u0019\\u0016\\u0018\\u001c\\u0017\\u0017qX?@7.05(\\u001a\\u001b\\u0018\\u0016\\u0014\\u0015\\u0014\\u0012\\u0012\\u0013\\u0017\\u0016\\u0019\\u001b\\u0018\\u0019\\u0016\\u0016\\u0015\\u0017\\u001d\\u0018\\u0019m>&$\\\"\\u001c',#\\u0018\\u001d\\u0019\\u0014\\u0014\\u0015\\u0016\\u0014\\u0012\\u0014\\u0017\\u0015\\u0016\\u001b\\u001a\\u001a\\u0019\\u0018\\u0016\\u0014\\u0017\\u0016\\u0019b9'\\u001f\\u001f\\u001f&+#\\u001f\\u001b\\u0019\\u0014\\u0013\\u0015\\u0018\\u0014\\u0012\\u0016\\u0017\\u0015\\u0016\\u0018\\u001a\\u001e\\\"#\\u001e\\u001b\\u001b\\u001b\\u001eV0$\\u001f\\u001c\\u001d!($&\\u001e\\u0017\\u0014\\u0013\\u0013\\u0014\\u0013\\u0012\\u0015\\u0016\\u0015\\u001a\\u001f)36:<;<?ER>40.15751+& \\u001b\\u0019\\u0017\\u0016\\u0016\\u0019\\u001d(:CIMNQUVX[^RPQOOQQOMCJLD=;:9;@FPY\\\\^aceeeggeQTX]``_\\\\VO]\\\\\\\\\\\\^__`aabcdehjlmoqqpSW^fiigdZ[`]_aceefedeghikmnpruttt[S^`¦¥S115?M\\\\k|®¸ÂÍÖ××××ÖÔÖª¾ÃÉÈ¿Å¶~lK,,1'*;CNZo¨¶ÃÍÑ×·¹Ã½Ã¶µÎÖ¶¦¨¡l\\\"\\u0019\\u001a\\u001b!'(.5>UqÄ·¢±ºÂ¸²ÏÖÇ­§°ÀÐÂk\\u0014\\u0013\\u0018\\u001b\\u001b\\u0016\\u0017\\u0018\\u0016\\u0019#&-«·¿º±ÎÕË»z·ÊÂ\\u001d\\f\\u0011\\u0016\\u001a\\u001d\\u001d\\u001d\\u001d\\u001b\\u0016\\u0015\\u0014^\\\\{§À¼±ÁÎÄ4?ÀÄ²hTB2'\\u001e\\u0019\\u0018\\u001a\\u001f$.R;Wm¯ÉÁ·ÇK1+}­¹ÃÉÊ¿²£c?Jg~d2MOVYX;.)}¬´¸ÃÌÍÕÚ¨z«µ³»n6GJ9\\u001c!&*:22!-®±±¾ÔÒÍ¬fD_stªk9=A: \\u001a\\u001c\\\"&\\u001b+ &w²«¹¼½°P)\\u001d!%&,/+Êp*#A;\\\"\\u001a\\u001a\\u001e\\u001f#\\u001e\\u0017\\\"EhyaL'\\u0014\\u0011\\u0010\\u0010\\r\\r\\u000e\\r\\u000fÒ1%@3#\\\" \\u0019\\u001e*(\\u001b$ \\u0015!%&\\u001c\\u0019\\u0017\\u0019\\u0017\\u0016\\u0015\\u0014\\u0015\\u0014\\u0013\\u0014È­C(1*\\u001f \\u001b\\u0015\\u0018\\u001c!\\u001c\\u001e\\u0016\\u000e\\u0012\\u0014\\u0014\\u0016\\u0017\\u0015\\u0017\\u0016\\u0016\\u0013\\u0013\\u0013\\u0013\\u0012\\u0013¿±T::(\\\"\\u001a\\u0015\\u0016\\u0018\\u001b\\u0017\\u0019\\u001d\\u0010\\u000e\\u0011\\u0011\\u0012\\u0012\\u0012\\u0012\\u0014\\u0013\\u0014\\u0014\\u0014\\u0014\\u0013\\u0011\\u0012®ZGB(4.$\\u001f\\u001a\\u001e\\u001d\\u0019\\u001a\\u000e\\r\\u0010\\u0010\\u0010\\u0011\\u0010\\u0011\\u0012\\u0013\\u0014\\u0014\\u0014\\u0014\\u0012\\u0011\\u0011oNM7@4M=++\\u001b\\u001e\\u001b\\u000e\\u0014\\r\\r\\u0010\\u0010\\u0011\\u0012\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0014\\u0013\\u0012\\u0011\\u0010C/N?<,O:,#\\u001e'\\u001a\\u000b\\u0010\\r\\u000e\\u0010\\u0010\\u0012\\u0013\\u0011\\u0011\\u0012\\u0013\\u0014\\u0015\\u0014\\u0012\\u0012\\u0011\\u0012()RO38>;$#,\\u001b\\u0015\\u0016\\u0013\\u000f\\u0010\\u0011\\u0010\\u0012\\u0014\\u0011\\u0011\\u0011\\u0012\\u0016\\u0015\\u0013\\u0012\\u0012\\u0012\\u0013 (BJ;;7B\\u001b\\u0016\\u001d\\u0015\\u0015\\u0015\\u0011\\u0010\\u0012\\u0011\\u0010\\u0012\\u0013\\u0011\\u0011\\u0011\\u0011\\u0018\\u0017\\u0012\\u0012\\u0012\\u0012\\u0011\\u001b\\u001c(@QWC0\\u0016\\u0011\\u0019-\\u001e\\u0012\\u000f\\u0010\\u0013\\u0012\\u0012\\u0013\\u0012\\u0011\\u0011\\u0011\\u0010\\u0016\\u0018\\u0013\\u0010\\u0012\\u0012\\u0012\\f\\u000e\\u001e<Oon$00**\\u001d\\u0014\\u0011\\u0011\\u0013\\u0013\\u0014\\u0014\\u0011\\u0010\\u0011\\u0010\\u0010\\u0014\\u0018\\u0013\\u0012\\u0014\\u0013\\u0012\\u0016 7JIY|BRM$\\u0017\\u0017\\u0016\\u0013\\u0012\\u0013\\u0013\\u0013\\u0013\\u0012\\u0012\\u0012\\u0012\\u0010\\u0015\\u0019\\u0013\\u0014\\u0017\\u0013\\u0012*6G6(\\\"G[C&\\u000f\\u0012\\u0015\\u0014\\u0014\\u0013\\u0013\\u0013\\u0013\\u0012\\u0013\\u0012\\u0010\\u0010\\u0011\\u0012\\u0017\\u0012\\u0014\\u0017\\u0013\\u00125FI8.+8=\\u001c\\u000e\\r\\u0010\\u0013\\u0012\\u0014\\u0012\\u0011\\u0012\\u0012\\u0011\\u0012\\u0013\\u000f\\r\\u000e\\u0010\\u0013\\u0010\\u0012\\u0018\\u0012\\u0011M@+,(\\\"#'\\u0019\\u000e\\u0011\\u0012\\u0011\\u0011\\u0012\\u0012\\u0010\\u0010\\u0010\\u0012\\u0010\\u0014\\u0016\\u0014\\u0015\\u0012\\u0012\\u0011\\u0014\\u001c\\u0016\\u0013M*\\u0015\\u0014\\u0016\\u0012\\u001d!\\u0018\\r\\u0013\\u0013\\u0010\\u0010\\u0013\\u0015\\u0012\\u0011\\u0011\\u0011\\u000f\\u0011\\u0017\\u0016\\u0018\\u0016\\u0015\\u0013\\u0012\\u0015\\u0013\\u0012C%\\u0017\\u0011\\u0012\\u0014\\u001c!\\u0019\\u0014\\u0011\\u0012\\u000f\\u000f\\u0013\\u0016\\u0012\\u0011\\u0012\\u0010\\f\\u000e\\u000f\\u0010\\u0014\\u0017\\u0019\\u0014\\u0011\\u0010\\u000e\\u000f6\\u001c\\u0015\\u0010\\r\\u0010\\u0015\\u001d\\u0019\\u001c\\u0015\\u0011\\u0010\\u0010\\u0011\\u0012\\u0012\\u0011\\u0013\\u0011\\f\\f\\r\\u0014\\u001c\\u001f#%##%'.!\\u001a\\u0015\\u0016\\u001b #\\\"\\u001e\\u0019\\u0016\\u0014\\u0013\\u0013\\u0011\\u0010\\u0011\\u0012\\u000e\\u0014#'*,-16769;)'&#*..,*$)*''%$#&(#*4689=BDCCED()+.5652..825854567778:;@CHLMNPQ*-27<=;809:/056788888;<>CFKOQRTV\";\r\n\r\nexport default {\r\n  id: `testDataset`,\r\n  name: `cifar-10`,\r\n  imageSize: 32,\r\n  colorDepth: 3,\r\n  data: object,\r\n  vectorize: true,\r\n  normalizeMax: 255,\r\n};\r\n","import testDataset from \"./testDataset\";\r\nimport {\r\n  stringToUint8Array,\r\n  uint8ArrayToString,\r\n} from \"../CNN-js/datasetProcessor\";\r\nimport { CNN, NetworkArchitectures } from \"../CNN-js/cnn\";\r\n\r\nwindow.deleteDatabase = () => {\r\n  window.indexedDB.deleteDatabase(\"CNNjs-localStore\");\r\n};\r\n\r\n//init database\r\nconst openDb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const promiseDb = window.indexedDB.open(\"CNNjs-localStore\", 1);\r\n\r\n    promiseDb.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"networks\")) {\r\n        db.createObjectStore(\"networks\", { keyPath: \"id\" });\r\n      }\r\n      if (!db.objectStoreNames.contains(\"datasets\")) {\r\n        db.createObjectStore(\"datasets\", { keyPath: \"id\" });\r\n      }\r\n    };\r\n\r\n    promiseDb.onsuccess = (db) => {\r\n      resolve(promiseDb.result);\r\n    };\r\n    promiseDb.onerror = (e) => reject(e);\r\n  });\r\n};\r\n\r\nconst addRecord = (store_name, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    openDb().then((db) => {\r\n      const tx = db\r\n        .transaction(store_name, \"readwrite\")\r\n        .objectStore(store_name)\r\n        .put(data);\r\n\r\n      tx.onsuccess = () => {\r\n        resolve();\r\n      };\r\n      tx.onerror = (e) => {\r\n        reject(e);\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\nconst getRecord = (store_name, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    openDb().then((db) => {\r\n      const tx = db.transaction(store_name).objectStore(store_name).get(id);\r\n\r\n      tx.onsuccess = (event) => {\r\n        resolve(tx.result);\r\n      };\r\n      tx.onerror = (e) => {\r\n        reject(e);\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\nconst getAllRecordsAsObject = (store_name, keyProp) => {\r\n  return new Promise((resolve, reject) => {\r\n    openDb().then((db) => {\r\n      const out = {};\r\n      db\r\n        .transaction(store_name, \"readonly\")\r\n        .objectStore(store_name)\r\n        .openCursor().onsuccess = function (event) {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          out[cursor.value[keyProp]] = cursor.value;\r\n          cursor.continue();\r\n        } else {\r\n          resolve(out);\r\n        }\r\n      };\r\n    });\r\n  });\r\n};\r\n\r\nexport function getNetworks(server) {\r\n  return new Promise(async (resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      let localExisting = await getAllRecordsAsObject(`networks`, `id`);\r\n      if (!localExisting) {\r\n        localExisting = {};\r\n      }\r\n\r\n      const deserialized = {};\r\n\r\n      Object.keys(localExisting).forEach((stringCNNIndex) => {\r\n        const o = new CNN(localExisting[stringCNNIndex]);\r\n        o.name = localExisting[stringCNNIndex].name;\r\n        o.id = localExisting[stringCNNIndex].id;\r\n        deserialized[stringCNNIndex] = o;\r\n      });\r\n\r\n      resolve(deserialized);\r\n    } else {\r\n      fetch(`${server.url}/getNetworks`, {\r\n        method: `GET`,\r\n        headers: {\r\n          Authorization: `Bearer ${server.apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          if (json.err) throw json.err;\r\n          resolve(json);\r\n        })\r\n        .catch(reject);\r\n    }\r\n  });\r\n}\r\n\r\nexport function createNetwork(name, shape, server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      const neuralNet = new CNN(shape || NetworkArchitectures.LeNet5);\r\n      neuralNet.serializeParams = [\"id\", \"name\"];\r\n      const net_id = new Date().getTime();\r\n      neuralNet.name = name || net_id;\r\n      neuralNet.id = net_id;\r\n      addRecord(\"networks\", JSON.parse(JSON.stringify(neuralNet)))\r\n        .then(() => {\r\n          resolve();\r\n        })\r\n        .catch((e) => reject(e));\r\n    } else {\r\n      fetch(\r\n        `${server.url}/createCnn?name=${name}&shape=${JSON.stringify(shape)}`,\r\n        {\r\n          method: `POST`,\r\n          headers: {\r\n            Authorization: `Bearer ${server.apiToken}`,\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          if (json.err) throw json.err;\r\n          resolve(json);\r\n        })\r\n        .catch(reject);\r\n    }\r\n  });\r\n}\r\n\r\nexport function getNetwork(id, server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      getRecord(`networks`, parseInt(id))\r\n        .then((saved) => {\r\n          console.log(saved);\r\n          if (saved) {\r\n            resolve(\r\n              Object.assign(new CNN(saved), {\r\n                name: saved.name,\r\n                id: saved.id,\r\n              })\r\n            );\r\n          } else {\r\n            reject(`Network doesn't exist`);\r\n          }\r\n        })\r\n        .catch(() => reject(`Local database error`));\r\n    } else {\r\n      fetch(`${server.url}/getNetwork/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${server.apiToken}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.err) throw json.err;\r\n          else resolve(json);\r\n        })\r\n        .catch(reject);\r\n    }\r\n  });\r\n}\r\n\r\nexport function login(user, pass, server) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${server.url}/login`, {\r\n      method: `POST`,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user,\r\n        pass,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.err) throw json.err;\r\n        else resolve(json.token);\r\n      })\r\n      .catch(reject);\r\n  });\r\n}\r\n\r\nexport function getDatasets(server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      getAllRecordsAsObject(`datasets`, `id`)\r\n        .then((localExisting) => {\r\n          if (!localExisting) {\r\n            localExisting = { testDataset: testDataset };\r\n          }\r\n\r\n          Object.keys(localExisting).forEach((id) => {\r\n            if (typeof localExisting[id].data === \"string\") {\r\n              localExisting[id].data = stringToUint8Array(\r\n                localExisting[id].data\r\n              );\r\n            }\r\n            localExisting[id].full = true;\r\n          });\r\n          resolve(localExisting);\r\n        })\r\n        .catch((e) => reject(e));\r\n    } else {\r\n      fetch(`${server.url}/getDatasets`, {\r\n        method: `GET`,\r\n        headers: {\r\n          Authorization: `Bearer ${server.apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          if (json.err) throw json.err;\r\n          //TODO: parse string data to uint8Array\r\n          resolve(json);\r\n        })\r\n        .catch(reject);\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDataset(id, server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      getRecord(`datasets`, id)\r\n        .then((dataset) => {\r\n          resolve(dataset);\r\n        })\r\n        .catch((e) => reject(e));\r\n    } else {\r\n      fetch(`${server.url}/getDataset/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${server.apiToken}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.err) throw json.err;\r\n          else resolve(json);\r\n        })\r\n        .catch(reject);\r\n    }\r\n  });\r\n}\r\n\r\nexport function newDataset(dataset, server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      addRecord(`datasets`, dataset)\r\n        .then(() => resolve())\r\n        .catch((e) => reject(e));\r\n    } else {\r\n      //TODO: newDataset on server\r\n    }\r\n  });\r\n}\r\n\r\nexport function setNetwork(network, server) {\r\n  return new Promise((resolve, reject) => {\r\n    if (server.url === `local`) {\r\n      addRecord(`networks`, JSON.parse(JSON.stringify(network)))\r\n        .then(() => resolve())\r\n        .catch((e) => reject(e));\r\n    } else {\r\n      //TODO: newDataset on server\r\n    }\r\n  });\r\n}\r\n\r\nexport function getDemoNetwork() {\r\n  return new Promise((resolve) => {\r\n    fetch(process.env.PUBLIC_URL + `/Cifar-10-LeNet5.cnn`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        resolve(res);\r\n      });\r\n  });\r\n}\r\n\r\nexport function getDemoDatasets() {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(process.env.PUBLIC_URL + `/datasets_metadata.json`)\r\n      .then((res) => res.json())\r\n      .then((metadata) => {\r\n        let responded = 0;\r\n        metadata.forEach((m, i) => {\r\n          fetch(process.env.PUBLIC_URL + `/` + m.name + \".bin\")\r\n            .then((res) => res.arrayBuffer())\r\n            .then((dataset) => {\r\n              metadata[i].data = new Uint8Array(dataset);\r\n              responded++;\r\n              if (responded === metadata.length)\r\n                resolve(metadata.filter((e) => e.data));\r\n            })\r\n            .catch((e) => reject(e));\r\n        });\r\n      });\r\n  });\r\n}\r\n","import {\r\n  getNetworks,\r\n  createNetwork,\r\n  getNetwork,\r\n  setNetwork as setNetworkApi,\r\n  getDemoNetwork,\r\n} from \"../../other/api\";\r\n\r\nimport { CNN } from \"../../CNN-js/cnn.js\";\r\n\r\nexport const FETCH_NETWORKS_REQUEST = `FETCH_NETWORKS_REQUEST`;\r\nexport const FETCH_NETWORKS_SUCCESS = `FETCH_NETWORKS_SUCCESS`;\r\nexport const FETCH_NETWORKS_ERROR = `FETCH_NETWORKS_ERROR`;\r\nexport const UNLOAD_NETWORKS = `UNLOAD_NETWORKS`;\r\n\r\nexport const NEW_NETWORK_REQUEST = `NEW_NETWORK_REQUEST`;\r\nexport const NEW_NETWORK_SUCCESS = `NEW_NETWORK_SUCCESS`;\r\nexport const NEW_NETWORK_ERROR = `NEW_NETWORK_ERROR`;\r\n\r\nexport const FETCH_NETWORK_REQUEST = `FETCH_NETWORK_REQUEST`;\r\nexport const FETCH_NETWORK_SUCCESS = `FETCH_NETWORK_SUCCESS`;\r\nexport const FETCH_NETWORK_ERROR = `FETCH_NETWORK_ERROR`;\r\n\r\nexport const SET_NETWORK_REQUEST = `SET_NETWORK_REQUEST`;\r\nexport const SET_NETWORK_SUCCESS = `SET_NETWORK_SUCCESS`;\r\nexport const SET_NETWORK_ERROR = `SET_NETWORK_ERROR`;\r\n\r\nexport const setNetworkRequest = ({ server, network }) => ({\r\n  type: SET_NETWORK_REQUEST,\r\n  server,\r\n  network,\r\n});\r\n\r\nexport const setNetworkSuccess = ({ server, network }) => ({\r\n  type: SET_NETWORK_SUCCESS,\r\n  server,\r\n  network,\r\n});\r\n\r\nexport const setNetworkError = ({ server, network, err }) => ({\r\n  type: SET_NETWORK_ERROR,\r\n  server,\r\n  network,\r\n  err,\r\n});\r\n\r\nexport const newNetworkRequest = () => ({\r\n  type: NEW_NETWORK_REQUEST,\r\n});\r\nexport const newNetworksSuccess = () => ({\r\n  type: NEW_NETWORK_SUCCESS,\r\n});\r\nexport const newNetworkError = ({ error }) => ({\r\n  type: NEW_NETWORK_ERROR,\r\n  error,\r\n});\r\n\r\nexport const requestNetworks = ({ server }) => ({\r\n  type: FETCH_NETWORKS_REQUEST,\r\n  server,\r\n});\r\nexport const networksSuccess = ({ networks, server }) => ({\r\n  type: FETCH_NETWORKS_SUCCESS,\r\n  networks,\r\n  server,\r\n});\r\nexport const networksError = ({ err, server }) => ({\r\n  type: FETCH_NETWORKS_ERROR,\r\n  error: err,\r\n  server,\r\n});\r\n\r\nexport const unloadNetworks = ({ server }) => ({\r\n  type: UNLOAD_NETWORKS,\r\n  server,\r\n});\r\n\r\nexport const requestNetwork = ({ server, networkId }) => ({\r\n  type: FETCH_NETWORK_REQUEST,\r\n  networkId: networkId,\r\n  server,\r\n});\r\nexport const networkSuccess = ({ server, network }) => ({\r\n  type: FETCH_NETWORK_SUCCESS,\r\n  network,\r\n  networkId: network.id,\r\n  server,\r\n});\r\nexport const networkError = ({ server, networkId, err }) => ({\r\n  type: FETCH_NETWORK_ERROR,\r\n  error: err,\r\n  networkId: networkId,\r\n  server,\r\n});\r\n\r\nexport const fetchNetworks = (server, dispatch) => {\r\n  dispatch(requestNetworks({ server }));\r\n  getNetworks(server)\r\n    .then(async (networks) => {\r\n      Object.keys(networks).forEach((n) => (networks[n].reduced = true));\r\n      if (Object.keys(networks).length === 0) {\r\n        setNetwork(server, await getDemoNetwork(), dispatch);\r\n      }\r\n      dispatch(networksSuccess({ networks, server }));\r\n    })\r\n    .catch((err) => dispatch(networksError({ err, server })));\r\n};\r\n\r\nexport const newNetwork = (name, shape, server, dispatch) => {\r\n  dispatch(newNetworkRequest());\r\n  createNetwork(name, shape, server)\r\n    .then(() => {\r\n      console.log(`complete`);\r\n      fetchNetworks(server, dispatch)\r\n        .then(() => {\r\n          dispatch(newNetworksSuccess());\r\n        })\r\n        .catch((err) => {\r\n          throw err;\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(newNetworkError({ error: err }));\r\n    });\r\n};\r\n\r\nexport const fetchNetwork = (networkId, server, dispatch) => {\r\n  dispatch(requestNetwork({ server, networkId }));\r\n  getNetwork(networkId, server)\r\n    .then((net) => {\r\n      dispatch(networkSuccess({ server, network: net }));\r\n    })\r\n    .catch((err) => {\r\n      dispatch(networkError({ server, networkId, err }));\r\n    });\r\n};\r\n\r\nexport const setNetwork = (\r\n  server,\r\n  network,\r\n  dispatch\r\n  //fetchNetworksAfter = true\r\n) => {\r\n  if (!(network instanceof CNN)) {\r\n    network = Object.assign(new CNN(network), {\r\n      id: network.id,\r\n      name: network.name,\r\n    });\r\n  }\r\n\r\n  dispatch(setNetworkRequest({ server, network }));\r\n  setNetworkApi(network, server)\r\n    .then(() => {\r\n      //if (fetchNetworksAfter) fetchNetworks(server, dispatch);\r\n      dispatch(setNetworkSuccess({ server, network }));\r\n    })\r\n    .catch((err) => dispatch(setNetworkError({ server, network, err })));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\n\r\n//res\r\nimport { TiPlus } from \"react-icons/ti\";\r\n\r\n// router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cardWrapperCss = css`\r\n  width: 13em;\r\n  height: 15em;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  margin: 0.7em;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  text-decoration: none;\r\n  color: ${(props) => props.accenttextcolor};\r\n  display: block;\r\n`;\r\n\r\nconst CardWrapper = styled(Link)`\r\n  ${cardWrapperCss}\r\n`;\r\n\r\nconst CardWrapperNoLink = styled.div`\r\n  ${cardWrapperCss}\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst BottomWrapper = styled.div`\r\n  height: 30%;\r\n  width: 100%;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n`;\r\n\r\nconst NetworkTitle = styled.h4`\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 0;\r\n  &:before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: 100%;\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst NetworkImage = styled.img`\r\n  width: 100%;\r\n  display: block;\r\n  flex-grow: 0;\r\n`;\r\n\r\nconst NetworkImageDiv = styled.div`\r\n  height: 70%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport default connect((state) => state)(\r\n  ({ colors, network, server, draggable, onClick, getRef }) => {\r\n    /*\r\n    // draggable too buggy\r\n    const [dragging, setDragging] = useState(false);\r\n    const [cardPosition, setCardPosition] = useState();\r\n\r\n    const cardRef = React.createRef();\r\n    const replacementCardRef = React.createRef();*/\r\n\r\n    const Wrapper = onClick ? CardWrapperNoLink : CardWrapper;\r\n\r\n    return (\r\n      <Wrapper\r\n        to={onClick ? \"\" : `/networks/${server}/${network.id}`}\r\n        onClick={onClick}\r\n        {...colors}\r\n        ref={getRef && ((ref) => getRef(ref))}\r\n        /*\r\n        // draggable too buggy\r\n        \r\n        ref={cardRef}\r\n        onMouseDown={\r\n          draggable\r\n            ? function(e) {\r\n                var draggingElement = cardRef.current;\r\n                var clientRect = draggingElement.getBoundingClientRect();\r\n                e.preventDefault();\r\n                var dragStart = { x: e.clientX, y: e.clientY };\r\n                var localDragging = false;\r\n                var draggingOffset = {\r\n                  x: e.clientX - clientRect.left,\r\n                  y: e.clientY - clientRect.top\r\n                };\r\n\r\n                const dragHandler = e1 => {\r\n                  if (!localDragging) {\r\n                    if (\r\n                      Math.abs(e1.clientX - dragStart.x) > 10 ||\r\n                      Math.abs(e1.clientY - dragStart.y) > 10\r\n                    ) {\r\n                      setDragging(true);\r\n                      localDragging = true;\r\n                    }\r\n                  } else {\r\n                    draggingElement.style.position = `absolute`;\r\n                    draggingElement.style.left =\r\n                      e1.clientX - draggingOffset.x + `px`;\r\n                    draggingElement.style.top =\r\n                      e1.clientY - draggingOffset.y + `px`;\r\n                  }\r\n                };\r\n\r\n                const mouseUpHandler = () => {\r\n                  localDragging = false;\r\n                  document.removeEventListener(\"mousemove\", dragHandler);\r\n                  document.removeEventListener(\"mousemove\", mouseUpHandler);\r\n                };\r\n\r\n                document.addEventListener(\"mousemove\", dragHandler);\r\n                document.addEventListener(\"mouseup\", mouseUpHandler);\r\n              }\r\n            : undefined\r\n        }\r\n        onClick={\r\n          dragging\r\n            ? e => {\r\n                e.preventDefault();\r\n                setDragging(false);\r\n              }\r\n            : undefined\r\n        }*/\r\n      >\r\n        <NetworkImageDiv>\r\n          <NetworkImage\r\n            src={process.env.PUBLIC_URL + `/cnn-diagram.png`}\r\n            alt=\"neural network icon\"\r\n          />\r\n        </NetworkImageDiv>\r\n        <BottomWrapper>\r\n          <NetworkTitle>{network.name}</NetworkTitle>\r\n        </BottomWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst AddNetworkWrapper = styled.div`\r\n  ${cardWrapperCss}\r\n  border:2px ${(props) => props.color} dashed;\r\n  display:flex;\r\n  justify-content:center;\r\n  flex-direction:row;\r\n  align-items:center;\r\n  background:${(props) => props.backgroundbyelevation(1)};\r\n  box-sizing:border-box;\r\n  font-size: 1em;\r\n  position:relative;\r\n\r\n  /* &:hover{\r\n    cursor:pointer;\r\n  } */\r\n\r\n  ${(props) =>\r\n    props.nohover &&\r\n    css`\r\n      &:hover {\r\n        transform: scale(1);\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledSubmit = styled.input`\r\n  position: absolute;\r\n  bottom: 1em;\r\n  width: calc(100% - 2em);\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst InputRow = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  border: none;\r\n  width: calc(100% - 5em);\r\n  margin: 1em;\r\n`;\r\n\r\nexport const AddNetworkCard = connect((state) => state)(\r\n  ({ colors, onclick, networks }) => {\r\n    const [name, setName] = useState(``);\r\n    const [networkShapeIndex, setNetworkShapeIndex] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n      <AddNetworkWrapper\r\n        color={colors.primaryColor}\r\n        backgroundbyelevation={colors.backgroundbyelevation}\r\n        onClick={() => setShow(true)}\r\n        nohover={show}\r\n      >\r\n        {show && (\r\n          <StyledForm\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              if (name) {\r\n                onclick(\r\n                  name,\r\n                  networks.networkArchitectures[\r\n                    Object.keys(networks.networkArchitectures)[\r\n                      networkShapeIndex\r\n                    ]\r\n                  ]\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <StyledInput\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(evt) => setName(evt.target.value)}\r\n              placeholder={`Network name`}\r\n            />\r\n            <select\r\n              onChange={(e) => setNetworkShapeIndex(JSON.parse(e.target.value))}\r\n              value={networkShapeIndex}\r\n            >\r\n              {Object.keys(networks.networkArchitectures).map((name, i) => {\r\n                return <option value={i}>{name}</option>;\r\n              })}\r\n            </select>\r\n            <StyledSubmit type=\"submit\" value=\"create network\" />\r\n          </StyledForm>\r\n        )}\r\n        {!show && <TiPlus color={colors.primaryColor} />}\r\n      </AddNetworkWrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst NetworkCardParentWrapper = styled.div`\r\n  padding: 1em;\r\n  /* padding-right: 0; */\r\n  padding-bottom: 0;\r\n\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n\r\n  transition: 0.5s padding;\r\n\r\n  ${(props) =>\r\n    props.small &&\r\n    css`\r\n      padding-right: 1em;\r\n    `}\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n\r\n  ${(props) =>\r\n    props.cardMode &&\r\n    css`\r\n      box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14),\r\n        0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n      margin: 0;\r\n      padding: 0.5em;\r\n      border-radius: 5px;\r\n    `}\r\n\r\n  transition: .5s;\r\n`;\r\n\r\nconst NetworkCards = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n  padding: 1em;\r\n  padding-right: 0;\r\n  box-sizing: border-box;\r\n  height: auto;\r\n\r\n  ${CardWrapper}:first-child {\r\n    margin-left: 0;\r\n  }\r\n\r\n  transition: 0.5s height, 0.5s padding;\r\n  ${(props) =>\r\n    props.small &&\r\n    css`\r\n      height: 0;\r\n      padding: 0;\r\n    `}\r\n`;\r\n\r\nconst NetworkScreenTitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst FlexCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NetworkCardParent = ({\r\n  children,\r\n  title,\r\n  small,\r\n  customRightButton,\r\n}) => (\r\n  <NetworkCardParentWrapper small={small}>\r\n    <div>\r\n      {!customRightButton && <Title cardMode={small}>{title}</Title>}\r\n      {customRightButton && (\r\n        <NetworkScreenTitleWrapper>\r\n          <Title cardMode={small}>{title}</Title>\r\n          <FlexCenter>{customRightButton}</FlexCenter>\r\n        </NetworkScreenTitleWrapper>\r\n      )}\r\n    </div>\r\n    <NetworkCards small={small}>{children}</NetworkCards>\r\n  </NetworkCardParentWrapper>\r\n);\r\n","import { login } from \"../../other/api\";\r\n\r\nexport const FETCH_SERVER_LOGIN_REQUEST = `FETCH_SERVER_LOGIN_REQUEST`;\r\nexport const FETCH_SERVER_LOGIN_SUCCESS = `FETCH_SERVER_LOGIN_SUCCESS`;\r\nexport const FETCH_SERVER_LOGIN_ERROR = `FETCH_SERVER_LOGIN_ERROR`;\r\n\r\nexport const requestLogin = ({ server }) => ({\r\n  type: FETCH_SERVER_LOGIN_REQUEST,\r\n  server\r\n});\r\n\r\nexport const loginSuccess = ({ server, apiToken }) => ({\r\n  type: FETCH_SERVER_LOGIN_SUCCESS,\r\n  server,\r\n  apiToken\r\n});\r\n\r\nexport const loginError = ({ err, server }) => ({\r\n  type: FETCH_SERVER_LOGIN_ERROR,\r\n  error: err,\r\n  server\r\n});\r\n\r\nexport const loginToServer = (user, pass, server, dispatch) => {\r\n  dispatch(requestLogin({ server }));\r\n  login(user, pass, server)\r\n    .then(apiToken => {\r\n      dispatch(loginSuccess({ apiToken, server }));\r\n    })\r\n    .catch(err => dispatch(loginError({ err, server })));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { loginToServer } from \"../redux/actions/servers\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { unloadNetworks } from \"../redux/actions/networks\";\r\n\r\nconst ServerLoginWrapper = styled.div`\r\n  background: ${props => props.backgroundbyelevation(1)};\r\n  height: 2em;\r\n  padding: 10px;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 5px;\r\n  &:not(:first-child) {\r\n    margin-left: 1em;\r\n  }\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: none;\r\n  color: ${props => props.subaccenttextcolor};\r\n`;\r\n\r\nconst StyledInputButton = styled.input`\r\n  box-sizing: border-box;\r\n  margin-left: 1em;\r\n  border-radius: 5px;\r\n  height: 100%;\r\n  background: white;\r\n  border-width: 1px;\r\n  border-style: solid;\r\n  border-color: rgba(0, 0, 0, 0.16) rgb(0, 0, 0, 0.18) rgb(0, 0, 0, 0.27);\r\n  background: none;\r\n  color: ${props => props.textcolor};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  background: ${props => props.errorcolor};\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  margin: 10px;\r\n  color: white;\r\n`;\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    loginServer: (user, pass, server) =>\r\n      loginToServer(user, pass, server, dispatch),\r\n    unload: server => dispatch(unloadNetworks({ server }))\r\n  })\r\n)(({ server, loginServer, colors, unload }) => {\r\n  const [user, setUser] = useState(``);\r\n  const [pass, setPass] = useState(``);\r\n\r\n  return (\r\n    <>\r\n      <ServerLoginWrapper {...colors}>\r\n        <form\r\n          onSubmit={evt => {\r\n            evt.preventDefault();\r\n            unload(server);\r\n            loginServer(user, pass, server);\r\n          }}\r\n        >\r\n          <StyledInput\r\n            type=\"text\"\r\n            value={user}\r\n            onChange={event => setUser(event.target.value)}\r\n            placeholder={`username`}\r\n            {...colors}\r\n          />\r\n          <StyledInput\r\n            type=\"password\"\r\n            value={pass}\r\n            onChange={event => setPass(event.target.value)}\r\n            placeholder={`password`}\r\n            {...colors}\r\n          />\r\n          <StyledInputButton type=\"submit\" value={`Login`} {...colors} />\r\n        </form>\r\n      </ServerLoginWrapper>\r\n      {server.error && <ErrorDiv {...colors}>{server.error}</ErrorDiv>}\r\n    </>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { MdReplay } from \"react-icons/md\";\r\n\r\nconst ErrorDiv = styled.div`\r\n  background: ${(props) => props.errorcolor};\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const translateError = (error) => {\r\n  let strError = `${error}`;\r\n  console.error(error);\r\n  console.error(error.stack);\r\n  return `Server unavailable`;\r\n};\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(-360deg);\r\n  }\r\n`;\r\n\r\nconst StyledReplay = styled(MdReplay)`\r\n  margin-left: 5px;\r\n  animation: ${(props) => (props.spinning ? rotate : `none`)} 2s linear infinite;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default connect((state) => state)(({ error, colors, retryFunction }) => {\r\n  const [animation, setAnimation] = useState(false);\r\n  console.log(error);\r\n  if (!(error instanceof String)) error = error.toString() || error;\r\n  return (\r\n    <ErrorDiv errorcolor={colors.errorcolor}>\r\n      {error}\r\n      {retryFunction && (\r\n        <StyledReplay\r\n          spinning={animation}\r\n          onClick={(props) => {\r\n            setAnimation(true);\r\n            retryFunction(props);\r\n          }}\r\n        />\r\n      )}\r\n    </ErrorDiv>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nconst AnimatedCard = styled(animated.div)`\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  position: absolute;\r\n  z-index: 2000;\r\n`;\r\n\r\nconst AnimFSC = ({\r\n  startFromElement,\r\n  contentFunction,\r\n  colors,\r\n  fullscreen,\r\n  onCloseCallback,\r\n}) => {\r\n  const [innerDivRef, setInnerDivRef] = useState();\r\n  const [wrapperRef, setWrapperRef] = useState();\r\n  const [resizeUpdater, setResizeUpdater] = useState(0);\r\n  const [closing, setClosing] = useState(false);\r\n  const [closed, setClosed] = useState(false);\r\n  const prevStyle = startFromElement.getBoundingClientRect();\r\n  const startComputedStyle = window.getComputedStyle(startFromElement);\r\n\r\n  if (startFromElement.style) {\r\n    startFromElement.style.opacity = `0`;\r\n  } else {\r\n    startFromElement.style = `opacity:0`;\r\n  }\r\n\r\n  if (closed) {\r\n    if (onCloseCallback) onCloseCallback();\r\n  }\r\n\r\n  const wrapperDivStyle = (wrapperRef &&\r\n    wrapperRef.getBoundingClientRect()) || {\r\n    top: 0,\r\n    left: 0,\r\n    height: 0,\r\n    width: 0,\r\n  };\r\n\r\n  const innerDivStyle = (!fullscreen &&\r\n    innerDivRef &&\r\n    innerDivRef.getBoundingClientRect()) || {\r\n    top: 0,\r\n    left: 0,\r\n    height: Math.max(0, wrapperDivStyle.height - 50),\r\n    width: Math.max(0, wrapperDivStyle.width - 50),\r\n  };\r\n\r\n  const startAnimatedProps = {\r\n    top: prevStyle.top + `px`,\r\n    left: prevStyle.left + `px`,\r\n    width: prevStyle.width + `px`,\r\n    height: prevStyle.height + `px`,\r\n    boxShadow: startComputedStyle.boxShadow,\r\n    borderWidth:\r\n      startComputedStyle.borderWidth || startComputedStyle[\"border-top-width\"],\r\n  };\r\n\r\n  const cardProps = useSpring({\r\n    from: startAnimatedProps,\r\n    to: closing\r\n      ? startAnimatedProps\r\n      : {\r\n          width: innerDivStyle.width + `px`,\r\n          height: innerDivStyle.height + `px`,\r\n          top:\r\n            parseInt((wrapperDivStyle.height - innerDivStyle.height) / 2) +\r\n            `px`,\r\n          left:\r\n            parseInt((wrapperDivStyle.width - innerDivStyle.width) / 2) + `px`,\r\n          borderRadius: startComputedStyle[\"border-top-left-radius\"],\r\n          borderColor:\r\n            startComputedStyle.borderColor ||\r\n            startComputedStyle[\"border-top-color\"],\r\n          borderStyle:\r\n            startComputedStyle.borderStyle ||\r\n            startComputedStyle[\"border-top-style\"],\r\n          borderWidth: `0px`,\r\n          opacity: 1,\r\n          overflow: `hidden`,\r\n        },\r\n    config: closing ? { ...config.gentle, clamp: true } : config.gentle,\r\n    onRest: () => {\r\n      if (closing) {\r\n        setClosed(true);\r\n        setClosing(false);\r\n        startFromElement.style.opacity = 1;\r\n      }\r\n    },\r\n  });\r\n\r\n  const wrapperProps = useSpring({\r\n    to: {\r\n      background: closing ? `rgba(0, 0, 0, 0)` : `rgba(0, 0, 0, 0.2)`,\r\n    },\r\n    from: {\r\n      background: `rgba(0, 0, 0, 0)`,\r\n    },\r\n  });\r\n\r\n  const resizeHandler = () => setResizeUpdater(Math.random());\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={(ref) => setWrapperRef(ref)}\r\n      onClick={(e) => (e.target === wrapperRef ? setClosing(true) : false)}\r\n      style={wrapperProps}\r\n    >\r\n      <AnimatedCard {...colors} style={cardProps}>\r\n        <div\r\n          ref={(ref) => setInnerDivRef(ref)}\r\n          style={\r\n            fullscreen\r\n              ? { height: `100%`, width: `100%`, boxSizing: `border-box` }\r\n              : {}\r\n          }\r\n        >\r\n          {contentFunction(() => setClosing(true))}\r\n        </div>\r\n      </AnimatedCard>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default connect((state) => state)(AnimFSC);\r\n","import React, { Component } from \"react\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchNetworks,\r\n  newNetwork,\r\n  setNetwork,\r\n} from \"../redux/actions/networks\";\r\n\r\n// components\r\nimport NetworkCard, {\r\n  NetworkCardParent,\r\n  AddNetworkCard,\r\n} from \"../components/NetworkCard\";\r\nimport ServerLogin from \"../components/ServerLogin\";\r\nimport Error, { translateError } from \"../components/Error\";\r\n\r\nimport { NetworkArchitectures, CNN } from \"../CNN-js/cnn\";\r\nimport { SyncLoader } from \"react-spinners\";\r\n\r\nimport styled from \"styled-components\";\r\nimport AnimatedFullScreenCard from \"../components/AnimatedFullScreenCard\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nconst DownloadButton = styled.div`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  border: none;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  box-sizing: content-box;\r\n  padding: 1em;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InnerNetworkSelect = styled.div`\r\n  border-radius: 5px;\r\n  padding: 1em;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FileSelect = styled.div`\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  margin-top: 1em;\r\n  border: 1px solid gray;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ConfirmButton = styled.div`\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  margin-top: 1em;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nclass Networks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      networkGroupsSmall: false,\r\n      downloadRef: {},\r\n      importServer: undefined,\r\n      importNetworkName: undefined,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.servers.servers.map((server) => {\r\n      this.props.getNetworks(server);\r\n    });\r\n  }\r\n  componentWillUpdate() {\r\n    this.props.servers.servers.map((server) => {\r\n      if (\r\n        !this.props.networks.networks[server.uniqueName] &&\r\n        !this.props.networks.isLoading[server.uniqueName] &&\r\n        !this.props.networks.error[server.uniqueName]\r\n      )\r\n        this.props.getNetworks(server);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {this.props.servers.servers.map((server) => {\r\n            return (\r\n              <NetworkCardParent\r\n                title={server.uniqueName}\r\n                customRightButton={\r\n                  <DownloadButton\r\n                    ref={(r) =>\r\n                      !this.state.downloadRef[server.uniqueName] &&\r\n                      this.setState((prevState) => ({\r\n                        downloadRef: Object.assign({}, prevState.downloadRef, {\r\n                          [server.uniqueName]: r,\r\n                        }),\r\n                      }))\r\n                    }\r\n                    onClick={() => {\r\n                      this.setState({ importServer: server });\r\n                    }}\r\n                    {...this.props.colors}\r\n                  >\r\n                    Import\r\n                  </DownloadButton>\r\n                }\r\n                small={this.props.networkGroupsSmall}\r\n                key={`${server.uniqueName}_network_display_group`}\r\n              >\r\n                {!this.props.networks.isLoading[server.uniqueName] &&\r\n                  !this.props.networks.error[server.uniqueName] &&\r\n                  this.props.networks.networks[server.uniqueName] && (\r\n                    <>\r\n                      {Object.keys(\r\n                        this.props.networks.networks[server.uniqueName]\r\n                      ).map((id) => {\r\n                        return (\r\n                          <NetworkCard\r\n                            network={\r\n                              this.props.networks.networks[server.uniqueName][\r\n                                id\r\n                              ]\r\n                            }\r\n                            draggable={true}\r\n                            server={server.uniqueName}\r\n                          />\r\n                        );\r\n                      })}\r\n                      <AddNetworkCard\r\n                        onclick={(name, shape) => {\r\n                          this.props.createNewNetwork(name, shape, server);\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n\r\n                {this.props.networks.isLoading[server.uniqueName] && (\r\n                  <div>\r\n                    <SyncLoader />\r\n                  </div>\r\n                )}\r\n                {this.props.networks.error[server.uniqueName] &&\r\n                  this.props.networks.error[server.uniqueName] !==\r\n                    `Unauthorized` && (\r\n                    <div>\r\n                      <Error\r\n                        error={translateError(\r\n                          this.props.networks.error[server.uniqueName]\r\n                        )}\r\n                        retryFunction={() => this.props.getNetworks(server)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {this.props.networks.error[server.uniqueName] ===\r\n                  `Unauthorized` && <ServerLogin server={server} />}\r\n              </NetworkCardParent>\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.importServer && (\r\n          <AnimatedFullScreenCard\r\n            startFromElement={\r\n              this.state.downloadRef[this.state.importServer.uniqueName]\r\n            }\r\n            fullscreen={true}\r\n            onCloseCallback={() => this.setState({ importServer: undefined })}\r\n            contentFunction={(close) => (\r\n              <InnerNetworkSelect {...this.props.colors}>\r\n                <Title>Upload network file</Title>\r\n                <Dropzone\r\n                  onDrop={(acceptedFiles) => {\r\n                    const file = acceptedFiles[0];\r\n\r\n                    const reader = new FileReader();\r\n\r\n                    reader.onabort = () =>\r\n                      console.log(\"file reading was aborted\");\r\n                    reader.onerror = () =>\r\n                      console.log(\"file reading has failed\");\r\n                    reader.onload = () => {\r\n                      const networkJSON = JSON.parse(reader.result);\r\n                      this.setState({\r\n                        importNetworkName: networkJSON.name,\r\n                        networkJSON,\r\n                      });\r\n                    };\r\n                    reader.readAsText(file);\r\n                  }}\r\n                >\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                      <div {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <FileSelect>\r\n                          {this.state.importNetworkName ||\r\n                            `Drag 'n' drop some file here, or click to select files`}\r\n                        </FileSelect>\r\n                      </div>\r\n                    </section>\r\n                  )}\r\n                </Dropzone>\r\n                <ConfirmButton\r\n                  {...this.props.colors}\r\n                  onClick={() => {\r\n                    this.props.setNetwork(\r\n                      this.state.importServer,\r\n                      this.state.networkJSON\r\n                    );\r\n                    close();\r\n                  }}\r\n                >\r\n                  Confirm\r\n                </ConfirmButton>\r\n              </InnerNetworkSelect>\r\n            )}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getNetworks: (server) => fetchNetworks(server, dispatch),\r\n    createNewNetwork: (name, shape, server) =>\r\n      newNetwork(name, shape, server, dispatch),\r\n    setNetwork: (server, network) => setNetwork(server, network, dispatch),\r\n  })\r\n)(Networks);\r\n","/**\r\n * Computes the maximum of each property\r\n * @param {Array<Object>} dataArray array of data objects\r\n */\r\nconst maxProperties = (dataArray) => {\r\n  const max = Object.assign({}, dataArray[0]);\r\n  dataArray.forEach((d) => {\r\n    Object.keys(d).forEach((key) => {\r\n      if (d[key] > max[key] || max[key] == undefined) {\r\n        max[key] = d[key];\r\n      }\r\n    });\r\n  });\r\n  return max;\r\n};\r\n\r\n/**\r\n * Computes the minimum of each property\r\n * @param {Array<Object>} dataArray array of data objects\r\n */\r\nexport const minProperties = (dataArray) => {\r\n  const min = Object.assign({}, dataArray[0]);\r\n  dataArray.forEach((d) => {\r\n    Object.keys(d).forEach((key) => {\r\n      if (d[key] < min[key] || min[key] == undefined) {\r\n        min[key] = d[key];\r\n      }\r\n    });\r\n  });\r\n  return min;\r\n};\r\n\r\n/**\r\n * Normalizes all properties min-max -> 0-1\r\n * @param {Array<Object>} dataArray\r\n * @param {Number} nanValue (optional) if all props are the same, normalization returns NaN. Instead of NaN, this function returns `nanValue`\r\n */\r\nexport const normalizeData = (dataArray, nanValue = NaN) => {\r\n  const max = maxProperties(dataArray);\r\n  const min = minProperties(dataArray);\r\n  const normalized = dataArray.map((data) => {\r\n    const normalizedRecord = {};\r\n    Object.keys(min).forEach((key) => {\r\n      normalizedRecord[key] =\r\n        data[key] === min[key]\r\n          ? nanValue\r\n          : (data[key] - min[key]) / (max[key] - min[key]);\r\n    });\r\n    return normalizedRecord;\r\n  });\r\n  return normalized;\r\n};\r\n\r\nexport const exportText = (data, fileName) => {\r\n  var a = window.document.createElement(\"a\");\r\n  a.href = window.URL.createObjectURL(new Blob([data], { type: \"text/plain\" }));\r\n  a.download = fileName;\r\n\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { deepMap } from \"../CNN-js/math\";\r\n\r\nexport default ({ style, array, slice, width, height }) => {\r\n  const [ref, setRef] = useState(null);\r\n\r\n  if (ref) {\r\n    let imageData = [];\r\n    let width, height;\r\n    if (array) {\r\n      for (let i = 0; i < array[0].length; i++) {\r\n        imageData = imageData.concat(\r\n          array[0][i].reduce(\r\n            (prev, d, j) =>\r\n              prev.concat([\r\n                array[0][i][j],\r\n                (array[1] && array[1][i][j]) || array[0][i][j],\r\n                (array[2] && array[2][i][j]) || array[0][i][j],\r\n                255,\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n      }\r\n      width = array[0][0].length;\r\n      height = array[0].length;\r\n    } else if (slice) {\r\n      const positiveSlice = deepMap(slice, (x) => Math.max(0, x));\r\n      const negativeSlice = deepMap(slice, (x) => Math.min(0, x));\r\n\r\n      for (let i = 0; i < slice.length; i++) {\r\n        imageData = imageData.concat(\r\n          slice[i].reduce(\r\n            (prev, d, j) =>\r\n              prev.concat([\r\n                negativeSlice[i][j] * 255,\r\n                positiveSlice[i][j] * 255,\r\n                0,\r\n                255,\r\n              ]),\r\n            []\r\n          )\r\n        );\r\n      }\r\n\r\n      width = slice[0].length;\r\n      height = slice.length;\r\n    }\r\n    ref\r\n      .getContext(\"2d\")\r\n      .putImageData(\r\n        new ImageData(new Uint8ClampedArray(imageData), width, height),\r\n        0,\r\n        0\r\n      );\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      style={height && width ? { width, height, ...style } : style}\r\n      height={array ? array[0].length : slice.length}\r\n      width={array ? array[0][0].length : slice[0].length}\r\n      ref={(r) => setRef(r)}\r\n    ></canvas>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\n//utils\r\nimport { normalizeData } from \"../other/utils\";\r\n\r\n// components\r\nimport Error from \"./Error\";\r\nimport { IoIosArrowRoundForward } from \"react-icons/io\";\r\nimport { connect } from \"react-redux\";\r\nimport LayerCanvas from \"./LayerCanvas\";\r\n\r\nimport { LayerType } from \"../CNN-js/cnn\";\r\n\r\nconst WrapperCard = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst NetworkVisualWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow-x: auto;\r\n  padding: 2em;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst NetworkLayer = styled.div`\r\n  width: 7em;\r\n  height: 7em;\r\n  margin: 1em;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst FilterLayer = styled.div`\r\n  width: 16em;\r\n  height: 7em;\r\n  margin: 1em;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst NetworkFilterAndInput = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst NetworkLayerWrapper = styled.div`\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LayerTypeTitle = styled.h5`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst LayerSpacer = styled.div`\r\n  width: 1em;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-bottom: ${0.83 + 1.67 + 1.3}em;\r\n  padding: 10px;\r\n`;\r\n\r\n//NETWORK LAYERS\r\nconst minCONVSize = 1;\r\nconst maxCONVSize = 5;\r\n\r\nconst getSliceSize = (\r\n  normalizedLayer,\r\n  min = minCONVSize,\r\n  max = maxCONVSize\r\n) => ({\r\n  w: min + normalizedLayer.w * (max - min),\r\n  h: min + normalizedLayer.h * (max - min),\r\n});\r\n\r\nconst getFilterSliceSize = (sliceSize, filterSize) =>\r\n  Math.min(sliceSize.w, sliceSize.h) * filterSize;\r\n\r\nconst LAYER_STACK_slice = styled(animated.div)`\r\n  width: ${(props) => getSliceSize(props).w}em;\r\n  height: ${(props) => getSliceSize(props).h}em;\r\n  margin: 1em;\r\n  background: ${(props) => props.backgroundbyelevation(3)};\r\n  border: 1px solid ${(props) => (props.darkMode ? `gray` : props.primarycolor)};\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  z-index: ${(props) => 300 - props.i};\r\n  overflow: hidden;\r\n`;\r\nconst LAYER_STACK_filter_wrapper = styled(animated.div)`\r\n  width: ${(props) => getSliceSize(props).w}em;\r\n  height: ${(props) => getSliceSize(props).h}em;\r\n  margin: 1em;\r\n\r\n  position: absolute;\r\n  z-index: ${(props) => 300 - props.i};\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst LAYER_STACK_FILTER_inner = styled(animated.div)`\r\n  width: ${(props) => {\r\n    return getFilterSliceSize(getSliceSize(props), props.f);\r\n  }}em;\r\n  height: ${(props) => {\r\n    return getFilterSliceSize(getSliceSize(props), props.f);\r\n  }}em;\r\n  box-sizing: border-box;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n  background: ${(props) => props.backgroundbyelevation(3)};\r\n  border: 1px solid ${(props) => (props.darkMode ? `gray` : props.primarycolor)};\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\nconst LAYER_STACK_wrapper = styled(animated.div)`\r\n  position: relative;\r\n`;\r\nconst LAYER_STACK_slice_component = connect((state) => ({\r\n  colors: state.colors,\r\n}))(\r\n  ({\r\n    layer,\r\n    i,\r\n    withData,\r\n    layerNormalized,\r\n    extended,\r\n    filter,\r\n    colors,\r\n    layerData,\r\n    filterData,\r\n  }) => {\r\n    const { w: slicewidth, h: sliceheight } = getSliceSize(layerNormalized);\r\n    const layerSliceProps = useSpring({\r\n      top: extended ? `${(sliceheight + 2) * i}em` : `-${i / 5}em`,\r\n      //                                ^ don't forget the margin\r\n      left: extended ? `0em` : `${i / 5}em`,\r\n      opacity: extended ? `1` : `${Math.max(1 - i / 10, 0)}`,\r\n      from:\r\n        i < 10\r\n          ? {\r\n              left: `${i / 5}em`,\r\n              top: `-${i / 5}em`,\r\n              opacity: `${Math.max(1 - i / 10, 0)}`,\r\n            }\r\n          : {},\r\n    });\r\n\r\n    const filterProps = useSpring({\r\n      boxShadow: extended\r\n        ? `0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.20)`\r\n        : `0 0px 0px 0 rgba(0,0,0,0.14), 0 0px 0px 0 rgba(0,0,0,0.12), 0 0px 0px 0px rgba(0,0,0,0.20)`,\r\n      from: {\r\n        boxShadow: `0 0px 0px 0 rgba(0,0,0,0.14), 0 0px 0px 0 rgba(0,0,0,0.12), 0 0px 0px 0px rgba(0,0,0,0.20)`,\r\n      },\r\n    });\r\n\r\n    const sliceSizeProps = getSliceSize(layerNormalized);\r\n\r\n    if (filter) {\r\n      return (\r\n        <LAYER_STACK_filter_wrapper\r\n          style={layerSliceProps}\r\n          key={`LAYER_STACK_layer_filter_${i}`}\r\n          w={layerNormalized.w}\r\n          h={layerNormalized.h}\r\n          i={i}\r\n        >\r\n          <LAYER_STACK_FILTER_inner\r\n            {...colors}\r\n            style={filterProps}\r\n            f={layerNormalized.f}\r\n            w={layerNormalized.w}\r\n            h={layerNormalized.h}\r\n          >\r\n            {withData && (\r\n              <LayerCanvas\r\n                slice={layerData}\r\n                style={{ position: `absolute`, top: 0 }}\r\n                width={\r\n                  getFilterSliceSize(sliceSizeProps, layerNormalized.f) + `em`\r\n                }\r\n                height={\r\n                  getFilterSliceSize(sliceSizeProps, layerNormalized.f) + `em`\r\n                }\r\n              />\r\n            )}\r\n          </LAYER_STACK_FILTER_inner>\r\n        </LAYER_STACK_filter_wrapper>\r\n      );\r\n    } else {\r\n      return (\r\n        <LAYER_STACK_slice\r\n          {...colors}\r\n          style={Object.assign({}, layerSliceProps, filterProps)}\r\n          key={`LAYER_STACK_layer_${i}`}\r\n          w={layerNormalized.w}\r\n          h={layerNormalized.h}\r\n          i={i}\r\n        >\r\n          {withData && (\r\n            <LayerCanvas\r\n              style={{ position: `absolute`, top: 0 }}\r\n              slice={layerData}\r\n              width={sliceSizeProps.w + `em`}\r\n              height={sliceSizeProps.h + `em`}\r\n            />\r\n          )}\r\n        </LAYER_STACK_slice>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst LAYER_STACK = ({\r\n  layer,\r\n  withData,\r\n  layerNormalized,\r\n  layerData,\r\n  filterData,\r\n  extended,\r\n  withFilter,\r\n}) => {\r\n  const { w: sliceWidth, h: sliceHeight } = getSliceSize(layerNormalized);\r\n  const emPadding = 1 * 2;\r\n  const wrapperStyle = useSpring({\r\n    height: extended\r\n      ? `${(sliceHeight + emPadding) * layer.d}em`\r\n      : `${sliceHeight + emPadding}em`,\r\n    width: `${sliceWidth + emPadding}em`,\r\n    marginTop: `-${(sliceHeight + emPadding) / 2}em`,\r\n\r\n    from: {\r\n      height: `${sliceHeight + emPadding}em`,\r\n      width: `${sliceWidth + emPadding}em`,\r\n      marginTop: `-${(sliceHeight + emPadding) / 2}em`,\r\n      marginLeft: `-${(sliceWidth + emPadding) / 2}em`,\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      {withFilter && (\r\n        <div\r\n          style={{\r\n            height: 0,\r\n            width: 0,\r\n          }}\r\n        >\r\n          <LAYER_STACK_wrapper style={wrapperStyle}>\r\n            {new Array(layer.d)\r\n              .fill(0)\r\n              .map(\r\n                (_, i) =>\r\n                  (extended || i < 10) && (\r\n                    <LAYER_STACK_slice_component\r\n                      layer={layer}\r\n                      i={i}\r\n                      withData={withData}\r\n                      layerData={layerData && layerData[i]}\r\n                      filterData={filterData && filterData[i]}\r\n                      layerNormalized={layerNormalized}\r\n                      extended={extended}\r\n                      filter={true}\r\n                    />\r\n                  )\r\n              )}\r\n          </LAYER_STACK_wrapper>\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          height: 0,\r\n          width: 0,\r\n          marginLeft: withFilter ? `${sliceHeight + emPadding}em` : ``,\r\n        }}\r\n      >\r\n        <LAYER_STACK_wrapper style={wrapperStyle}>\r\n          {new Array(layer.d)\r\n            .fill(0)\r\n            .map(\r\n              (_, i) =>\r\n                (extended || i < 10) && (\r\n                  <LAYER_STACK_slice_component\r\n                    layer={layer}\r\n                    i={i}\r\n                    withData={withData}\r\n                    layerData={layerData && layerData[i]}\r\n                    filterData={filterData && filterData[i]}\r\n                    layerNormalized={layerNormalized}\r\n                    extended={extended}\r\n                  />\r\n                )\r\n            )}\r\n        </LAYER_STACK_wrapper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n//NETWORK LAYERS\r\n\r\n//normalize layers, normalize f as percentage of width and height minimum\r\nconst normalizeLayers = (shape) => {\r\n  const out = normalizeData(shape, 0);\r\n  shape.forEach((s, i) => {\r\n    if (s.f) {\r\n      out[i].f = s.f / Math.min(shape[i - 1].w, shape[i - 1].h);\r\n    }\r\n  });\r\n  return out;\r\n};\r\n\r\nexport default connect((state) => ({\r\n  colors: state.colors,\r\n}))(({ colors, network, small, withData }) => {\r\n  const [extended, setExtended] = useState(\r\n    new Array(network.shape.length).fill(false)\r\n  );\r\n  const [layersNormalized] = useState(\r\n    network && network.shape ? normalizeLayers(network.shape) : undefined\r\n  );\r\n\r\n  return (\r\n    <WrapperCard>\r\n      {network && network.shape && (\r\n        <NetworkVisualWrapper>\r\n          {network.shape.map((layerShape, i) => {\r\n            return (\r\n              <>\r\n                <div key={`network_layer_${i}`}>\r\n                  <NetworkLayerWrapper\r\n                    {...colors}\r\n                    onClick={() => {\r\n                      setExtended(\r\n                        extended.map((_, i1) =>\r\n                          i1 === i ? !extended[i1] : extended[i1]\r\n                        )\r\n                      );\r\n                    }}\r\n                  >\r\n                    <NetworkFilterAndInput>\r\n                      {layerShape.type === LayerType.CONV && (\r\n                        <FilterLayer>\r\n                          <LAYER_STACK\r\n                            layerData={network.layers[i]}\r\n                            filterData={network.weights[i]}\r\n                            layer={layerShape}\r\n                            layerNormalized={layersNormalized[i]}\r\n                            withData={withData}\r\n                            extended={extended[i]}\r\n                            withFilter={true}\r\n                          />\r\n                        </FilterLayer>\r\n                      )}\r\n                      {layerShape.type !== LayerType.CONV && (\r\n                        <NetworkLayer>\r\n                          {layerShape.type === LayerType.INPUT && (\r\n                            <LAYER_STACK\r\n                              layerData={network.layers[i]}\r\n                              layer={layerShape}\r\n                              layerNormalized={layersNormalized[i]}\r\n                              withData={withData ? { layer: i } : null}\r\n                              extended={extended[i]}\r\n                            />\r\n                          )}\r\n                          {layerShape.type === LayerType.POOL && (\r\n                            <LAYER_STACK\r\n                              layerData={network.layers[i]}\r\n                              layer={layerShape}\r\n                              layerNormalized={layersNormalized[i]}\r\n                              withData={withData ? { layer: i } : null}\r\n                              extended={extended[i]}\r\n                            />\r\n                          )}\r\n                          {layerShape.type === LayerType.FC}\r\n                          {layerShape.type === LayerType.FLATTEN}\r\n                        </NetworkLayer>\r\n                      )}\r\n                    </NetworkFilterAndInput>\r\n                    <LayerTypeTitle>\r\n                      {Object.keys(LayerType).find(\r\n                        (key) => LayerType[key] === layerShape.type\r\n                      )}\r\n                    </LayerTypeTitle>\r\n                  </NetworkLayerWrapper>\r\n                </div>\r\n\r\n                <LayerSpacer>\r\n                  {layerShape.type !== LayerType.FC && (\r\n                    <IoIosArrowRoundForward />\r\n                  )}\r\n                </LayerSpacer>\r\n              </>\r\n            );\r\n          })}\r\n        </NetworkVisualWrapper>\r\n      )}\r\n      {(!network || !network.shape) && (\r\n        <Error error={`invalid network shape`} />\r\n      )}\r\n    </WrapperCard>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n\r\n  &:not(:first-child) {\r\n    margin-top: 1em;\r\n  }\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Key = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 1em;\r\n  text-align: right;\r\n`;\r\n\r\nconst Value = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 1em;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 5px;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background: none;\r\n  color: ${(props) => props.subaccenttextcolor};\r\n`;\r\n\r\nconst KeyValueWrapper = styled.div`\r\n  padding: 2em;\r\n`;\r\n\r\nconst KeyValueTable = ({ data, editFunction, colors, include }) => (\r\n  <KeyValueWrapper>\r\n    {!include &&\r\n      Object.keys(data).map((key) => (\r\n        <Card {...colors} key={`key_value_table_${key}`}>\r\n          <Key>{key}</Key>\r\n          <Value>\r\n            <StyledInput\r\n              value={data[key]}\r\n              onChange={(evt) => editFunction(key, evt.target.value)}\r\n            />\r\n          </Value>\r\n        </Card>\r\n      ))}\r\n    {include &&\r\n      include.map((key) => (\r\n        <Card {...colors} key={`key_value_table_${key}`}>\r\n          <Key>{key}</Key>\r\n          <Value>\r\n            <StyledInput\r\n              value={data[key]}\r\n              onChange={(evt) => editFunction(key, evt.target.value)}\r\n            />\r\n          </Value>\r\n        </Card>\r\n      ))}\r\n  </KeyValueWrapper>\r\n);\r\n\r\nexport default connect((state) => state)(KeyValueTable);\r\n","import React, { useState } from \"react\";\r\nimport { imageToArray, resizeImage } from \"../CNN-js/imageProcessor\";\r\nimport { softmax } from \"../CNN-js/math\";\r\nimport styled from \"styled-components\";\r\nimport LayerCanvas from \"./LayerCanvas\";\r\nimport { deepNormalize, deepMap } from \"../CNN-js/math\";\r\nimport { connect } from \"react-redux\";\r\n//import { setNetwork as setNetworkAction } from \"../redux/actions/networks\";\r\n\r\nconst PropagationWrapper = styled.div`\r\n  padding-top: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst FirstLayerDisplay = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nconst OutputLayer = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nconst Row = styled.tr`\r\n  background: lightgray;\r\n\r\n  & td {\r\n    text-align: center;\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n\r\nconst OutputTable = styled.table`\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Prediction = styled.tr`\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n\r\n  font-weight: bold;\r\n\r\n  & td {\r\n    padding: 1em;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst round = (x, c) => parseInt(x * 10 ** c) / 10 ** c;\r\n\r\nexport default connect(\r\n  (state) => state\r\n  /*(dispatch) => ({\r\n    setNetwork: (server, network) =>\r\n      setNetworkAction(server, network, dispatch),\r\n  })*/\r\n)(({ network, rawData, image, setNetwork, server, colors }) => {\r\n  const [output, setOutput] = useState();\r\n  const [imageArray, setImageArray] = useState();\r\n  const [softmaxed, setSoftmaxed] = useState();\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (image || rawData) {\r\n        const imageArr = image\r\n          ? deepNormalize(\r\n              await imageToArray(image, {\r\n                y: network.layers[0][0].length,\r\n                x: network.layers[0][0][0].length,\r\n                z: network.layers[0].length,\r\n              }),\r\n              255\r\n            )\r\n          : rawData;\r\n        const out = network.forwardPropagate(imageArr);\r\n\r\n        setImageArray(deepMap(imageArr, (x) => x * 255));\r\n        setOutput(out);\r\n        setSoftmaxed(softmax(out));\r\n        //setNetwork(server, network);\r\n      }\r\n    })();\r\n  }, [image, rawData]);\r\n\r\n  return (\r\n    <PropagationWrapper>\r\n      <FirstLayerDisplay\r\n        width={network.layers[0][0].length}\r\n        height={network.layers[0][0][0].length}\r\n      >\r\n        {imageArray && (\r\n          <LayerCanvas width={`10em`} height={`10em`} array={imageArray} />\r\n        )}\r\n      </FirstLayerDisplay>\r\n      <OutputLayer>\r\n        {output && (\r\n          <OutputTable {...colors}>\r\n            <thead>\r\n              <tr style={{ textAlign: `center` }}>\r\n                <td>class</td>\r\n                <td>label</td>\r\n                <td>value</td>\r\n                <td>softmax</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {output\r\n                .map((v, i) => ({ v, i }))\r\n                .sort((a, b) => b.v - a.v)\r\n                .map(({ v, i }, j) => {\r\n                  const inner = (\r\n                    <>\r\n                      <td>{i}</td>\r\n                      <td>{network.labels && network.labels[i]}</td>\r\n                      <td>{round(v, 2)}</td>\r\n                      <td>\r\n                        {`${round(\r\n                          parseInt(softmaxed && softmaxed[i] * 100),\r\n                          2\r\n                        )}%`}\r\n                      </td>\r\n                    </>\r\n                  );\r\n\r\n                  if (j == 0) {\r\n                    return <Prediction {...colors}>{inner}</Prediction>;\r\n                  }\r\n                  return <Row>{inner}</Row>;\r\n                })}\r\n            </tbody>\r\n          </OutputTable>\r\n        )}\r\n      </OutputLayer>\r\n    </PropagationWrapper>\r\n  );\r\n});\r\n","import {\r\n  getDatasets,\r\n  getDataset,\r\n  newDataset as apiNewDataset,\r\n  getDemoDatasets,\r\n} from \"../../other/api\";\r\n\r\nexport const FETCH_REDUCED_DATASETS_REQUEST = `FETCH_REDUCED_DATASETS_REQUEST`;\r\nexport const FETCH_REDUCED_DATASETS_SUCCESS = `FETCH_REDUCED_DATASETS_SUCCESS`;\r\nexport const FETCH_REDUCED_DATASETS_ERROR = `FETCH_REDUCED_DATASETS_ERROR`;\r\n\r\nexport const FETCH_DATASET_REQUEST = `FETCH_DATASET_REQUEST`;\r\nexport const FETCH_DATASET_SUCCESS = `FETCH_DATASET_SUCCESS`;\r\nexport const FETCH_DATASET_ERROR = `FETCH_DATASET_ERROR`;\r\n\r\nexport const NEW_DATASET_REQUEST = `NEW_DATASET_REQUEST`;\r\nexport const NEW_DATASET_SUCCESS = `NEW_DATASET_SUCCESS`;\r\nexport const NEW_DATASET_ERROR = `NEW_DATASET_ERROR`;\r\n\r\nexport const requestNewDataset = ({ dataset, server }) => ({\r\n  type: NEW_DATASET_REQUEST,\r\n  server,\r\n  dataset,\r\n});\r\n\r\nexport const newDatasetSuccess = ({ dataset, server }) => ({\r\n  type: NEW_DATASET_SUCCESS,\r\n  server,\r\n  dataset,\r\n});\r\n\r\nexport const newDatasetsError = ({ err, dataset, server }) => ({\r\n  type: NEW_DATASET_ERROR,\r\n  err,\r\n  server,\r\n  dataset,\r\n});\r\n\r\nexport const requestDatasets = ({ server }) => ({\r\n  type: FETCH_REDUCED_DATASETS_REQUEST,\r\n  server,\r\n});\r\n\r\nexport const datasetsSuccess = ({ datasets, server }) => ({\r\n  type: FETCH_REDUCED_DATASETS_SUCCESS,\r\n  server,\r\n  datasets,\r\n});\r\n\r\nexport const datasetsError = ({ err, server }) => ({\r\n  type: FETCH_REDUCED_DATASETS_ERROR,\r\n  err,\r\n  server,\r\n});\r\n\r\nexport const requestDataset = ({ datasetId, server }) => ({\r\n  type: FETCH_DATASET_REQUEST,\r\n  server,\r\n  datasetId,\r\n});\r\n\r\nexport const datasetSuccess = ({ dataset, server }) => ({\r\n  type: FETCH_DATASET_SUCCESS,\r\n  server,\r\n  dataset,\r\n});\r\n\r\nexport const datasetError = ({ err, datasetId, server }) => ({\r\n  type: FETCH_DATASET_ERROR,\r\n  err,\r\n  server,\r\n  datasetId,\r\n});\r\n\r\nexport const fetchDatasets = (server, dispatch) => {\r\n  dispatch(requestDatasets({ server }));\r\n  getDatasets(server)\r\n    .then(async (datasets) => {\r\n      Object.keys(datasets).forEach((datasetId) => {\r\n        if (!datasets[datasetId].full) datasets[datasetId].reduced = true;\r\n      });\r\n\r\n      if (Object.keys(datasets).length === 0) {\r\n        const demos = await getDemoDatasets();\r\n        demos.forEach((d) => newDataset(d, server, dispatch));\r\n      }\r\n\r\n      dispatch(\r\n        datasetsSuccess({\r\n          server,\r\n          datasets,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      if (err.message) {\r\n        err = err.message;\r\n      }\r\n      dispatch(datasetsError({ err, server }));\r\n    });\r\n};\r\n\r\nexport const fetchDataset = (datasetId, server, dispatch) => {\r\n  dispatch(requestDataset({ datasetId, server }));\r\n  getDataset(datasetId, server)\r\n    .then((dataset) => {\r\n      dispatch(datasetSuccess({ dataset, server }));\r\n    })\r\n    .catch((err) => {\r\n      if (err.message) {\r\n        err = err.message;\r\n      }\r\n      dispatch(datasetError({ err, datasetId, server }));\r\n    });\r\n};\r\n\r\nexport const newDataset = (dataset, server, dispatch) => {\r\n  dispatch(requestNewDataset({ dataset, server }));\r\n  apiNewDataset(dataset, server).then(() => {\r\n    dispatch(newDatasetSuccess({ dataset, server }));\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// components\r\nimport NetworkShapeVisual from \"../components/NetworkShapeVisual\";\r\nimport styled from \"styled-components\";\r\nimport Error from \"../components/Error\";\r\nimport KeyValueTable from \"../components/KeyValueTable\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\n// redux actions\r\nimport { fetchNetwork } from \"../redux/actions/networks\";\r\n\r\n// utils\r\nimport { exportText } from \"../other/utils\";\r\nimport NetworkPropagation from \"../components/NetworkPropagation\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { fetchDatasets } from \"../redux/actions/datasets\";\r\nimport { openDatasetFromBuffer } from \"../CNN-js/datasetProcessor\";\r\nimport { deepNormalize } from \"../CNN-js/math\";\r\n\r\nconst NetworkWrapper = styled.div`\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst NetworkScreenTitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst FlexCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst DownloadButton = styled.div`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  border: none;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  box-sizing: content-box;\r\n  padding: 1em;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ImageSelect = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst UploadRoot = styled.div`\r\n  padding: 1em;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  margin-right: 1em;\r\n`;\r\n\r\nconst getDatasetLen = (dataset) => {\r\n  return (\r\n    dataset &&\r\n    dataset.data &&\r\n    dataset.data.length / (dataset.imageSize ** 2 * dataset.colorDepth + 1)\r\n  );\r\n};\r\n\r\nclass Network extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      network:\r\n        props.match.params.serverUniqueName &&\r\n        props.match.params.networkId &&\r\n        props.networks.networks[props.match.params.serverUniqueName] &&\r\n        props.networks.networks[props.match.params.serverUniqueName][\r\n          props.match.params.networkId\r\n        ],\r\n      error: undefined,\r\n      server: this.props.servers.servers.find(\r\n        (server) =>\r\n          server.uniqueName === this.props.match.params.serverUniqueName\r\n      ),\r\n      uploadedImage: null,\r\n      selectedDatasetImageIndex: 0,\r\n    };\r\n\r\n    this.checkForError = this.checkForError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkForError();\r\n\r\n    this.props.servers.servers.map((s) => {\r\n      this.props.fetchDatasets(s);\r\n    });\r\n  }\r\n\r\n  checkForError() {\r\n    const network =\r\n      this.props.match.params.serverUniqueName &&\r\n      this.props.match.params.networkId &&\r\n      this.props.networks.networks[this.props.match.params.serverUniqueName] &&\r\n      this.props.networks.networks[this.props.match.params.serverUniqueName][\r\n        this.props.match.params.networkId\r\n      ];\r\n    if (network !== this.state.network) this.setState({ network });\r\n    let error = undefined;\r\n    if (!this.props.match.params.serverUniqueName) {\r\n      error = `invalid server name`;\r\n    } else if (!this.props.match.params.networkId) {\r\n      error = `invalid network name`;\r\n    } else if (\r\n      !this.props.networks.networks[this.props.match.params.serverUniqueName]\r\n    ) {\r\n      error = `server has no networks`;\r\n      if (!this.state.server.apiToken) {\r\n        error = `not logged in, redirecting...`;\r\n        this.setState({ notLoggedIn: true });\r\n      } else {\r\n        if (!this.state.refreshRequestSent) {\r\n          this.setState({ needToRefreshNetwork: true });\r\n        }\r\n      }\r\n    } else if (\r\n      !this.props.networks.networks[this.props.match.params.serverUniqueName][\r\n        this.props.match.params.networkId\r\n      ]\r\n    ) {\r\n      error = `network has not been cached`;\r\n      if (!this.state.refreshRequestSent)\r\n        this.setState({ needToRefreshNetwork: true });\r\n    }\r\n\r\n    if (network && network.reduced) {\r\n      if (!this.state.refreshRequestSent)\r\n        this.setState({ needToRefreshNetwork: true });\r\n    }\r\n\r\n    error =\r\n      this.props.networks.networkError[\r\n        this.props.match.params.serverUniqueName +\r\n          this.props.match.params.networkId\r\n      ] || error;\r\n    if (this.state.error !== error) {\r\n      this.setState({ error });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkForError();\r\n    if (this.state.needToRefreshNetwork) {\r\n      this.setState(\r\n        { needToRefreshNetwork: false, refreshRequestSent: true },\r\n        () => {\r\n          this.props.getNetwork(\r\n            this.props.match.params.networkId,\r\n            this.state.server\r\n          );\r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.state.notLoggedIn) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          notLoggedIn: false,\r\n          redirect: true,\r\n        });\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NetworkWrapper>\r\n        {this.state.redirect && (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/networks\",\r\n            }}\r\n          />\r\n        )}\r\n        {this.state.network && (\r\n          <>\r\n            <NetworkScreenTitleWrapper>\r\n              <Title>{this.state.network.name}</Title>\r\n              <FlexCenter>\r\n                <DownloadButton\r\n                  onClick={() => {\r\n                    exportText(\r\n                      JSON.stringify(this.state.network),\r\n                      this.state.network.name.replace(` `, `_`) + `.cnn`\r\n                    );\r\n                  }}\r\n                  {...this.props.colors}\r\n                >\r\n                  Export\r\n                </DownloadButton>\r\n              </FlexCenter>\r\n            </NetworkScreenTitleWrapper>\r\n            <NetworkShapeVisual\r\n              network={this.state.networkNew || this.state.network}\r\n              withData={false}\r\n            />\r\n            <Subtitle>Classify</Subtitle>\r\n            <ImageSelect>\r\n              <Dropzone\r\n                accept={\".jpg, .png\"}\r\n                onDrop={(acceptedFiles) => {\r\n                  acceptedFiles.forEach((file) => {\r\n                    const reader = new FileReader();\r\n\r\n                    reader.onabort = () =>\r\n                      console.log(\"file reading was aborted\");\r\n                    reader.onerror = () =>\r\n                      console.log(\"file reading has failed\");\r\n                    reader.onload = () => {\r\n                      this.setState({\r\n                        uploadedImage: reader.result,\r\n                        selectedDatasetIndex: null,\r\n                      });\r\n                    };\r\n                    reader.readAsArrayBuffer(file);\r\n                  });\r\n                }}\r\n              >\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <section>\r\n                    <UploadRoot {...getRootProps()}>\r\n                      <input {...getInputProps()} />\r\n                      Drag 'n' drop image file here, or click to select it\r\n                    </UploadRoot>\r\n                  </section>\r\n                )}\r\n              </Dropzone>\r\n              <div style={{ padding: `1em` }}>or</div>\r\n              <Dropdown\r\n                placeholder=\"Select a dataset\"\r\n                options={(() => {\r\n                  const out = Object.keys(this.props.datasets.datasets).map(\r\n                    (s) => ({\r\n                      type: `group`,\r\n                      name: s,\r\n                      items: Object.keys(this.props.datasets.datasets[s]).map(\r\n                        (dId) => ({\r\n                          value: dId,\r\n                          label:\r\n                            this.props.datasets.datasets[s][dId].name +\r\n                            ` (${\r\n                              this.props.datasets.datasets[s][dId].data.length /\r\n                              (this.props.datasets.datasets[s][dId].imageSize **\r\n                                2 *\r\n                                this.props.datasets.datasets[s][dId]\r\n                                  .colorDepth +\r\n                                1)\r\n                            })`,\r\n                        })\r\n                      ),\r\n                    })\r\n                  );\r\n                  return out;\r\n                })()}\r\n                onChange={(v) => {\r\n                  this.setState({ selectedDatasetIndex: v.value });\r\n                }}\r\n                value={this.state.selectedDatasetIndex}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                min={0}\r\n                max={\r\n                  this.state.selectedDatasetIndex &&\r\n                  getDatasetLen(\r\n                    this.props.datasets.datasets[this.state.server.uniqueName][\r\n                      this.state.selectedDatasetIndex\r\n                    ]\r\n                  ) - 1\r\n                }\r\n                value={this.state.selectedDatasetImageIndex}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    selectedDatasetImageIndex:\r\n                      (e.target.value || e.target.value === 0) &&\r\n                      e.target.value <\r\n                        getDatasetLen(\r\n                          this.props.datasets.datasets[\r\n                            this.state.server.uniqueName\r\n                          ][this.state.selectedDatasetIndex]\r\n                        )\r\n                        ? parseInt(e.target.value)\r\n                        : this.state.selectedDatasetImageIndex,\r\n                    uploadedImage: null,\r\n                  });\r\n                }}\r\n                style={{ padding: `8px`, width: `5em`, fontSize: `1em` }}\r\n              />\r\n\r\n              {/*<DownloadButton\r\n                {...this.props.colors}\r\n                style={{ marginLeft: `1em` }}\r\n                onClick={\r\n\r\n                }\r\n              >\r\n                Classify\r\n              </DownloadButton>*/}\r\n            </ImageSelect>\r\n            <NetworkPropagation\r\n              network={this.state.network}\r\n              image={this.state.uploadedImage}\r\n              server={this.state.server}\r\n              rawData={(() => {\r\n                if (this.state.selectedDatasetIndex) {\r\n                  const inputDataset = openDatasetFromBuffer(\r\n                    this.props.datasets.datasets[this.state.server.uniqueName][\r\n                      this.state.selectedDatasetIndex\r\n                    ].data\r\n                  );\r\n\r\n                  const inputArray =\r\n                    inputDataset[this.state.selectedDatasetImageIndex].input;\r\n\r\n                  //debugger;\r\n\r\n                  const datasetProps = this.props.datasets.datasets[\r\n                    this.state.server.uniqueName\r\n                  ][this.state.selectedDatasetIndex];\r\n                  if (datasetProps.normalizeMax) {\r\n                    return deepNormalize(inputArray, datasetProps.normalizeMax);\r\n                  } else {\r\n                    return inputArray;\r\n                  }\r\n                }\r\n              })()}\r\n            />\r\n            <Subtitle>Parameters</Subtitle>\r\n            <KeyValueTable\r\n              data={this.state.network}\r\n              include={[`name`, `learningRate`]}\r\n              editFunction={(key, newValue) => {}}\r\n            />\r\n          </>\r\n        )}\r\n        {this.props.networks.networkLoading[\r\n          this.props.match.params.serverUniqueName +\r\n            this.props.match.params.networkId\r\n        ] && <div>Loading</div>}\r\n        {!this.props.networks.networkLoading[\r\n          this.props.match.params.serverUniqueName +\r\n            this.props.match.params.networkId\r\n        ] &&\r\n          this.state.error && <Error error={this.state.error} />}\r\n      </NetworkWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getNetwork: (networkId, server) =>\r\n      fetchNetwork(networkId, server, dispatch),\r\n    fetchDatasets: (server) => fetchDatasets(server, dispatch),\r\n  })\r\n)(Network);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TrainingWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 1em;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TrainingHeader = styled.div`\r\n  padding: 1em;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Card = styled(Link)`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  color: ${(props) => props.textcolor};\r\n  text-decoration: none;\r\n\r\n  &:not(:first-child) {\r\n    margin-top: 2em;\r\n  }\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  flex: 1 1 0px;\r\n  padding: 1em;\r\n  text-align: center;\r\n`;\r\n\r\nconst round = (x, n) => parseInt(x * 10 ** n) / 10 ** n;\r\n\r\nconst TrainingList = connect((state) => state)(\r\n  ({ data, colors, networks, customLinkFunction }) => {\r\n    console.log(data, colors);\r\n    return (\r\n      <>\r\n        <TrainingHeader {...colors}>\r\n          {[\r\n            `network`,\r\n            `server`,\r\n            `epoch`,\r\n            `learning rate`,\r\n            `error`,\r\n            `accuracy`,\r\n          ].map((c, i) => (\r\n            <Column key={`header_item_${i}`}>{c}</Column>\r\n          ))}\r\n        </TrainingHeader>\r\n        <TrainingWrapper>\r\n          {data.map((row, i) => (\r\n            <Card\r\n              key={`trainingList_${i}_row`}\r\n              {...colors}\r\n              to={\r\n                customLinkFunction\r\n                  ? customLinkFunction(row, i)\r\n                  : `/training/${row.server}/${row.network}`\r\n              }\r\n            >\r\n              <Column>{networks.networks[row.server][row.network].name}</Column>\r\n              <Column>{row.server}</Column>\r\n              <Column>\r\n                {row.epoch === `initializing`\r\n                  ? `initializing`\r\n                  : `${row.epoch}/${row.epochs}`}\r\n              </Column>\r\n              <Column>{round(row.learningRate, 5)}</Column>\r\n              <Column>{round(row.err, 5)}</Column>\r\n              <Column>{`${round(row.accuracy, 4) * 100}%`}</Column>\r\n            </Card>\r\n          ))}\r\n        </TrainingWrapper>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nconst StartButton = styled(Link)`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  border: none;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  box-sizing: content-box;\r\n  padding: 1em;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TrainingScreenWrapper = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nconst TrainingScreenTitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst FlexCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nclass Training extends Component {\r\n  render() {\r\n    return (\r\n      <TrainingScreenWrapper>\r\n        <TrainingScreenTitleWrapper>\r\n          <Title>Currently training</Title>\r\n          <FlexCenter>\r\n            <StartButton to={`startTraining`} {...this.props.colors}>\r\n              train a network\r\n            </StartButton>\r\n          </FlexCenter>\r\n        </TrainingScreenTitleWrapper>\r\n\r\n        <TrainingList\r\n          data={Object.keys(this.props.training)\r\n            .map((i) =>\r\n              i === `trained`\r\n                ? null\r\n                : Object.keys(this.props.training[i]).map((j) =>\r\n                    Object.assign({}, this.props.training[i][j], {\r\n                      server: i,\r\n                      network: j,\r\n                    })\r\n                  )\r\n            )\r\n            .flat(1)\r\n            .filter((a) => !!a)}\r\n        />\r\n\r\n        <TrainingScreenTitleWrapper>\r\n          <Title>Training history</Title>\r\n        </TrainingScreenTitleWrapper>\r\n        <TrainingList\r\n          data={this.props.training.trained}\r\n          customLinkFunction={(_row, i) => `/training/trained/${i}`}\r\n        />\r\n      </TrainingScreenWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  training: state.training,\r\n  colors: state.colors,\r\n}))(Training);\r\n","import {\r\n  openDatasetFromBuffer,\r\n  vectorizeDatasetLabels,\r\n  normalizeInputData,\r\n} from \"../CNN-js/datasetProcessor\";\r\n\r\nclass WithEventListener {\r\n  constructor() {\r\n    this.eventsListeners = {};\r\n  }\r\n\r\n  addEventListener(event, fn) {\r\n    if (!this.eventsListeners[event]) {\r\n      this.eventsListeners[event] = [];\r\n    }\r\n\r\n    this.eventsListeners[event].push(fn);\r\n  }\r\n\r\n  emitEvent(event, ...props) {\r\n    console.log(event);\r\n    if (event in this.eventsListeners)\r\n      this.eventsListeners[event].forEach((fn) => fn(...props));\r\n  }\r\n\r\n  removeEventListener(event, fn) {\r\n    this.eventsListeners[event] = this.eventsListeners[event].filter(\r\n      (f) => fn !== f\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * events:\r\n *  start,\r\n *  batchProgress\r\n */\r\nexport default class TrainingController extends WithEventListener {\r\n  constructor({ server, network, dataset, trainingParams }) {\r\n    super();\r\n    this.server = server;\r\n    this.network = network;\r\n    let datasetToBeTrained = dataset.data;\r\n    datasetToBeTrained = openDatasetFromBuffer(\r\n      datasetToBeTrained,\r\n      datasetToBeTrained.colorDepth,\r\n      datasetToBeTrained.imageSize\r\n    );\r\n    if (dataset.vectorize) {\r\n      datasetToBeTrained = vectorizeDatasetLabels(\r\n        datasetToBeTrained,\r\n        network.shape[network.shape.length - 1].l\r\n      );\r\n    }\r\n    if (dataset.normalizeMax) {\r\n      datasetToBeTrained = normalizeInputData(\r\n        datasetToBeTrained,\r\n        dataset.normalizeMax\r\n      );\r\n    }\r\n    this.dataset = datasetToBeTrained;\r\n    this.trainingParams = trainingParams;\r\n  }\r\n\r\n  startLearning() {\r\n    if (this.server.url === \"local\") {\r\n      this.emitEvent(\"start\");\r\n      this.trainingInstance = new Worker(\r\n        process.env.PUBLIC_URL + \"/trainingWorker.js\"\r\n      );\r\n      this.trainingInstance.addEventListener(\"message\", (m) => {\r\n        this.emitEvent(m.data.event, ...[...m.data.data, m.data.network]);\r\n      });\r\n      this.trainingInstance.postMessage({\r\n        network: JSON.stringify(this.network),\r\n        trainingProps: Object.assign({}, this.trainingParams, {\r\n          dataset: this.dataset,\r\n        }),\r\n      });\r\n    } else {\r\n      console.error(\"network training not supported yet\");\r\n      //TODO: learning over the network\r\n    }\r\n  }\r\n\r\n  confusionMatrix() {\r\n    this.emitEvent(\"confusionMatrixStart\");\r\n    this.trainingInstance = new Worker(\r\n      process.env.PUBLIC_URL + \"/trainingWorker.js\"\r\n    );\r\n    this.trainingInstance.addEventListener(\"message\", (m) => {\r\n      this.emitEvent(m.data.event, m.data.data);\r\n    });\r\n    this.trainingInstance.postMessage({\r\n      network: JSON.stringify(this.network),\r\n      dataset: this.dataset,\r\n      cmd: `confusionMatrix`,\r\n    });\r\n  }\r\n\r\n  terminate() {\r\n    this.emitEvent(\"end\");\r\n    if (this.trainingInstance) this.trainingInstance.terminate();\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst SpringButtonStyled = styled(animated.div)`\r\n  width: 100%;\r\n  padding: 1em;\r\n  background: ${(props) => props.color};\r\n  color: ${(props) => props.textColor};\r\n  border: none;\r\n  border-radius: 3px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SpringButton = ({ color, textColor, text, onClick }) => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const buttonStyle = useSpring({\r\n    transform: `scale(${clicked ? 0.8 : hovered ? 1.1 : 1}`,\r\n    config: config.gentle,\r\n  });\r\n\r\n  if (clicked) {\r\n    setTimeout(() => setClicked(false), 200);\r\n  }\r\n\r\n  return (\r\n    <SpringButtonStyled\r\n      style={buttonStyle}\r\n      color={color}\r\n      textColor={textColor}\r\n      onMouseEnter={() => setHovered(true)}\r\n      onMouseLeave={() => {\r\n        setHovered(false);\r\n        setClicked(false);\r\n      }}\r\n      onClick={(e) => {\r\n        if (onClick) onClick(e);\r\n        setClicked(true);\r\n      }}\r\n    >\r\n      {text}\r\n    </SpringButtonStyled>\r\n  );\r\n};\r\n\r\nexport default SpringButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport NetworkCard, { NetworkCardParent } from \"./NetworkCard\";\r\nimport Error, { translateError } from \"./Error\";\r\nimport ServerLogin from \"../components/ServerLogin\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FullCenter = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Section = styled.div``;\r\n/**\r\n *\r\n * @param {Array} sectionedData\r\n * structure:\r\n *  [\r\n *    {\r\n *      name:section name,\r\n *      data:[{\r\n *            name: \"row1\",\r\n *            icon: \"icon1\" <- optional\r\n *         },\r\n *        \"row2\"\r\n *      ]\r\n *    }\r\n *  ]\r\n */\r\nconst SelectableBigNetworkList = ({\r\n  servers,\r\n  networks,\r\n  onSelect,\r\n  refreshFunction,\r\n}) => {\r\n  const [selected, select] = React.useState(false);\r\n  const [serversWithError, setServersWithError] = React.useState({});\r\n\r\n  return selected ? (\r\n    <FullCenter>\r\n      <NetworkCard network={selected} onClick={() => {}} />\r\n    </FullCenter>\r\n  ) : (\r\n    <Wrapper>\r\n      {servers.servers.map((server, i) => {\r\n        console.log(networks.networks[server.uniqueName]);\r\n        if (\r\n          !serversWithError[server.uniqueName] &&\r\n          networks.error[server.uniqueName]\r\n        ) {\r\n          setServersWithError(\r\n            Object.assign({}, serversWithError, { [server.uniqueName]: true })\r\n          );\r\n        }\r\n        if (\r\n          serversWithError[server.uniqueName] &&\r\n          !networks.error[server.uniqueName]\r\n        ) {\r\n          setServersWithError(\r\n            Object.assign({}, serversWithError, { [server.uniqueName]: false })\r\n          );\r\n          refreshFunction(server);\r\n        }\r\n        return (\r\n          <NetworkCardParent\r\n            key={`server_${i}_${server.uniqueName}`}\r\n            title={server.uniqueName}\r\n          >\r\n            {networks.networks[server.uniqueName] &&\r\n              Object.keys(networks.networks[server.uniqueName]).map(\r\n                (networkId, j) => (\r\n                  <NetworkCard\r\n                    key={`network_sectioned_${j}`}\r\n                    network={networks.networks[server.uniqueName][networkId]}\r\n                    onClick={() => {\r\n                      select(networks.networks[server.uniqueName][networkId]);\r\n                      onSelect(server, networkId);\r\n                    }}\r\n                  />\r\n                )\r\n              )}\r\n\r\n            {networks.error[server.uniqueName] &&\r\n              networks.error[server.uniqueName] !== `Unauthorized` && (\r\n                <div>\r\n                  <Error\r\n                    error={translateError(networks.error[server.uniqueName])}\r\n                    retryFunction={() => refreshFunction(server)}\r\n                  />\r\n                </div>\r\n              )}\r\n            {networks.error[server.uniqueName] === `Unauthorized` && (\r\n              <ServerLogin server={server} />\r\n            )}\r\n          </NetworkCardParent>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectableBigNetworkList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\r\nimport SelectableBigNetworkList from \"./SelectableBigNetworkList\";\r\nimport { fetchNetworks } from \"../redux/actions/networks\";\r\nimport NetworkCard from \"./NetworkCard\";\r\n\r\nconst NetworkSelectWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SelectNetworkWrapper = styled.div`\r\n  width: 13em;\r\n  height: 15em;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  margin: 0.7em;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  text-decoration: none;\r\n  color: ${(props) => props.accenttextcolor};\r\n  display: block;\r\n\r\n  border: 2px ${(props) => props.color} dashed;\r\n  box-sizing: border-box;\r\n  font-size: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst InnerNoOverflow = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst NetworkSelect = ({\r\n  colors,\r\n  innerRef,\r\n  servers,\r\n  networks,\r\n  getNetworks,\r\n  getNetwork,\r\n  onNetworkSelect, //(server, networkId) => {}\r\n}) => {\r\n  const [selectedId, selectId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [wrapperRef, setWrapperRef] = useState();\r\n\r\n  React.useEffect(() => {\r\n    servers.servers.map((s) => {\r\n      getNetworks(s);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <NetworkSelectWrapper onClick={() => setOpen(true)}>\r\n      {(!selectedId || open) && (\r\n        <>\r\n          <SelectNetworkWrapper {...colors} ref={(ref) => setWrapperRef(ref)}>\r\n            Select network\r\n          </SelectNetworkWrapper>\r\n          {open && (\r\n            <AnimatedFullScreenCard\r\n              startFromElement={wrapperRef}\r\n              fullscreen={true}\r\n              onCloseCallback={() => {\r\n                setOpen(false);\r\n              }}\r\n              contentFunction={(closeCard) => {\r\n                return (\r\n                  <InnerNoOverflow>\r\n                    <SelectableBigNetworkList\r\n                      servers={servers}\r\n                      networks={networks}\r\n                      onSelect={(server, networkId) => {\r\n                        closeCard(false);\r\n                        onNetworkSelect(server, networkId);\r\n                        selectId({\r\n                          server: server.uniqueName,\r\n                          network: networkId,\r\n                        });\r\n                      }}\r\n                      refreshFunction={(server) => getNetworks(server)}\r\n                    />\r\n                  </InnerNoOverflow>\r\n                );\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {!open && selectedId && (\r\n        <NetworkCard\r\n          network={networks.networks[selectedId.server][selectedId.network]}\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n          getRef={(ref) => setWrapperRef(ref)}\r\n        />\r\n      )}\r\n    </NetworkSelectWrapper>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getNetworks: (server) => fetchNetworks(server, dispatch),\r\n  })\r\n)(NetworkSelect);\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\n//redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// router\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//res\r\nimport { MdPhotoLibrary } from \"react-icons/md\";\r\nimport { AiOutlineUpload } from \"react-icons/ai\";\r\n\r\nimport { openDatasetFromBuffer } from \"../CNN-js/datasetProcessor\";\r\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\r\n\r\nimport Dropzone from \"react-dropzone\";\r\nimport { newDataset } from \"../redux/actions/datasets\";\r\nimport Error from \"./Error\";\r\n\r\nconst cardWrapperCss = css`\r\n  width: 13em;\r\n  height: 15em;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  margin: 0.7em;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  text-decoration: none;\r\n  color: ${(props) => props.accenttextcolor};\r\n  display: block;\r\n`;\r\n\r\nconst CardWrapper = styled(Link)`\r\n  ${cardWrapperCss}\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CardWrapperNoLink = styled.div`\r\n  ${cardWrapperCss}\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DatasetImage = {\r\n  width: `50%`,\r\n  display: `block`,\r\n  height: `50%`,\r\n  flexGrow: 0,\r\n};\r\n\r\nconst DatasetImageDiv = styled.div`\r\n  height: 70%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst BottomWrapper = styled.div`\r\n  height: 30%;\r\n  width: 100%;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n`;\r\n\r\nconst DatasetTitle = styled.h4`\r\n  height: 100%;\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 0;\r\n  &:before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: 100%;\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nexport default connect((state) => state)(\r\n  ({ colors, dataset, serverId, onClick, getRef }) => {\r\n    const Wrapper = onClick ? CardWrapperNoLink : CardWrapper;\r\n\r\n    return (\r\n      <Wrapper\r\n        to={onClick ? \"\" : `/datasets/${serverId}/${dataset.id}`}\r\n        onClick={onClick}\r\n        ref={getRef && ((ref) => getRef(ref))}\r\n        {...colors}\r\n      >\r\n        <DatasetImageDiv>\r\n          <MdPhotoLibrary style={DatasetImage} />\r\n        </DatasetImageDiv>\r\n        <BottomWrapper>\r\n          <DatasetTitle>\r\n            {dataset.name +\r\n              ` (${\r\n                dataset.data.length /\r\n                (dataset.imageSize * dataset.imageSize * dataset.colorDepth + 1)\r\n              })`}\r\n          </DatasetTitle>\r\n        </BottomWrapper>\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n\r\nconst AddDatasetWrapper = styled.div`\r\n  ${cardWrapperCss}\r\n  border:2px ${(props) => props.color} dashed;\r\n  display:flex;\r\n  justify-content:center;\r\n  flex-direction:row;\r\n  align-items:center;\r\n  background:${(props) => props.backgroundbyelevation(1)};\r\n  box-sizing:border-box;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst InnerDatasetSelect = styled.div`\r\n  border-radius: 5px;\r\n  padding: 1em;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Subtitle = styled.h5`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FileSelect = styled.div`\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  margin-top: 1em;\r\n  border: 1px solid gray;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ConfirmButton = styled.div`\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  padding: 1em;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  margin: calc(0.8em - 1px);\r\n`;\r\n\r\nconst ParameterRow = styled.div`\r\n  margin-top: 1em;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ParameterName = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nconst ParameterInput = styled.input`\r\n  border: none;\r\n  background: none;\r\n  border-bottom: 1px solid black;\r\n  text-align: center;\r\n`;\r\n\r\nconst LeftRight = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftRightChild = styled.div`\r\n  width: 50%;\r\n  max-height: 100vh;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst StyledTextAreaWrapper = styled.div`\r\n  padding: 1em;\r\n  height: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 100%;\r\n  resize: none;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const AddDatasetCard = connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    newDatasetConnected: (dataset, server) =>\r\n      newDataset(dataset, server, dispatch),\r\n  })\r\n)(({ colors, server, newDatasetConnected }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [wrapperRef, setWrapperRef] = React.useState();\r\n  const [rawDataset, setRawDataset] = React.useState();\r\n  const [fileName, setFileName] = React.useState();\r\n\r\n  const [imageSize, setImageSize] = React.useState(32);\r\n  const [colorDepth, setColorDepth] = React.useState(3);\r\n  const [normalizeMax, setNormalizeMax] = React.useState(255);\r\n  const [crop, setCrop] = React.useState(`no`);\r\n  const [name, setName] = React.useState();\r\n\r\n  const [error, setError] = React.useState();\r\n  const [labels, setLabels] = React.useState();\r\n  return (\r\n    <>\r\n      <AddDatasetWrapper\r\n        color={colors.primaryColor}\r\n        backgroundbyelevation={colors.backgroundbyelevation}\r\n        ref={(r) => setWrapperRef(r)}\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <AiOutlineUpload color={colors.primaryColor} size={25} />\r\n      </AddDatasetWrapper>\r\n      {open && (\r\n        <AnimatedFullScreenCard\r\n          startFromElement={wrapperRef}\r\n          fullscreen={true}\r\n          onCloseCallback={() => setOpen(false)}\r\n          contentFunction={(close) => (\r\n            <InnerDatasetSelect {...colors}>\r\n              <Title>Upload dataset file</Title>\r\n              <Subtitle>\r\n                A dataset file is a binary file with the following formatting:\r\n                <br />\r\n                The file consists of chunks. Each chunk is a \"row\" of images,\r\n                although there is <b>nothing delimiting the rows</b>. The first\r\n                byte of the chunk is the label of the image(number), the next\r\n                n-bytes(image_depth * image_height * image_width) are the values\r\n                of the pixels.\r\n              </Subtitle>\r\n              <LeftRight>\r\n                <LeftRightChild>\r\n                  <Dropzone\r\n                    accept={\".bin\"}\r\n                    onDrop={(acceptedFiles) => {\r\n                      acceptedFiles.forEach((file) => {\r\n                        setFileName(file.name);\r\n                        setName(file.name.split(\".\")[0]);\r\n                        const reader = new FileReader();\r\n\r\n                        reader.onabort = () =>\r\n                          console.log(\"file reading was aborted\");\r\n                        reader.onerror = () =>\r\n                          console.log(\"file reading has failed\");\r\n                        reader.onload = () => {\r\n                          const binaryStr = reader.result;\r\n                          setRawDataset(new Uint8Array(binaryStr));\r\n                        };\r\n                        reader.readAsArrayBuffer(file);\r\n                      });\r\n                    }}\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <section>\r\n                        <div {...getRootProps()}>\r\n                          <input {...getInputProps()} />\r\n                          <FileSelect>\r\n                            {fileName ||\r\n                              `Drag 'n' drop binary file here, or click to select it`}\r\n                          </FileSelect>\r\n                        </div>\r\n                      </section>\r\n                    )}\r\n                  </Dropzone>\r\n                  <ParameterRow>\r\n                    <ParameterName>dataset name</ParameterName>\r\n                    <ParameterInput\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </ParameterRow>\r\n                  <ParameterRow>\r\n                    <ParameterName>image size</ParameterName>\r\n                    <ParameterInput\r\n                      value={imageSize}\r\n                      onChange={(e) => setImageSize(e.target.value)}\r\n                    />\r\n                  </ParameterRow>\r\n                  <ParameterRow>\r\n                    <ParameterName>color depth</ParameterName>\r\n                    <ParameterInput\r\n                      value={colorDepth}\r\n                      onChange={(e) => setColorDepth(e.target.value)}\r\n                    />\r\n                  </ParameterRow>\r\n                  <ParameterRow>\r\n                    <ParameterName>normalize max</ParameterName>\r\n                    <ParameterInput\r\n                      value={normalizeMax}\r\n                      onChange={(e) => setNormalizeMax(e.target.value)}\r\n                    />\r\n                  </ParameterRow>\r\n                  <ParameterRow>\r\n                    <ParameterName>crop dataset</ParameterName>\r\n                    <ParameterInput\r\n                      value={crop}\r\n                      onChange={(e) => setCrop(e.target.value)}\r\n                    />\r\n                  </ParameterRow>\r\n                </LeftRightChild>\r\n                <LeftRightChild>\r\n                  <StyledTextAreaWrapper>\r\n                    <StyledTextArea\r\n                      placeholder=\"Paste labels here, labels should be separated by a newline\"\r\n                      onChange={(e) => setLabels(e.target.value)}\r\n                    ></StyledTextArea>\r\n                  </StyledTextAreaWrapper>\r\n                </LeftRightChild>\r\n              </LeftRight>\r\n              <ConfirmButton\r\n                {...colors}\r\n                onClick={() => {\r\n                  setError();\r\n                  if (rawDataset) {\r\n                    if (\r\n                      rawDataset.length %\r\n                        (imageSize * imageSize * colorDepth + 1) !==\r\n                      0\r\n                    ) {\r\n                      setError(\r\n                        `Dataset invalid - length of stream doesn't match the parameters`\r\n                      );\r\n                    } else {\r\n                      newDatasetConnected(\r\n                        {\r\n                          id: `d` + new Date().getTime(),\r\n                          name,\r\n                          imageSize,\r\n                          colorDepth,\r\n                          data:\r\n                            crop === `no`\r\n                              ? rawDataset\r\n                              : rawDataset.subarray(\r\n                                  0,\r\n                                  crop *\r\n                                    (imageSize * imageSize * colorDepth + 1)\r\n                                ),\r\n                          vectorize: true,\r\n                          normalizeMax,\r\n                          labels: labels && labels.split(\"\\n\"),\r\n                        },\r\n                        server\r\n                      );\r\n                      close();\r\n                    }\r\n                  } else {\r\n                    setError(`file not loaded yet`);\r\n                  }\r\n                }}\r\n              >\r\n                Confirm\r\n              </ConfirmButton>\r\n              {error && <Error error={error} />}\r\n            </InnerDatasetSelect>\r\n          )}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { NetworkCardParent } from \"./NetworkCard\";\r\nimport DatasetCard from \"./DatasetCard\";\r\nimport Error, { translateError } from \"./Error\";\r\nimport ServerLogin from \"../components/ServerLogin\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FullCenter = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SelectableBigDatasetList = ({\r\n  servers,\r\n  datasets,\r\n  onSelect,\r\n  refreshFunction,\r\n}) => {\r\n  const [selected, select] = React.useState(false);\r\n  const [serversWithError, setServersWithError] = React.useState({});\r\n\r\n  return selected ? (\r\n    <FullCenter>\r\n      <DatasetCard dataset={selected} onClick={() => {}} />\r\n    </FullCenter>\r\n  ) : (\r\n    <Wrapper>\r\n      {servers.servers.map((server, i) => {\r\n        if (\r\n          !serversWithError[server.uniqueName] &&\r\n          datasets.serverDatasetsError[server.uniqueName]\r\n        ) {\r\n          setServersWithError(\r\n            Object.assign({}, serversWithError, { [server.uniqueName]: true })\r\n          );\r\n        }\r\n        if (\r\n          serversWithError[server.uniqueName] &&\r\n          !datasets.serverDatasetsError[server.uniqueName]\r\n        ) {\r\n          setServersWithError(\r\n            Object.assign({}, serversWithError, { [server.uniqueName]: false })\r\n          );\r\n          refreshFunction(server);\r\n        }\r\n        return (\r\n          <NetworkCardParent\r\n            key={`server_${i}_${server.uniqueName}_datasets`}\r\n            title={server.uniqueName}\r\n          >\r\n            {datasets.datasets[server.uniqueName] &&\r\n              Object.keys(datasets.datasets[server.uniqueName]).map(\r\n                (datasetId, j) => (\r\n                  <DatasetCard\r\n                    key={`dataset_sectioned_${j}`}\r\n                    dataset={datasets.datasets[server.uniqueName][datasetId]}\r\n                    onClick={() => {\r\n                      select(datasets.datasets[server.uniqueName][datasetId]);\r\n                      onSelect(server, datasetId);\r\n                    }}\r\n                  />\r\n                )\r\n              )}\r\n\r\n            {datasets.serverDatasetsError[server.uniqueName] &&\r\n              datasets.serverDatasetsError[server.uniqueName] !==\r\n                `Unauthorized` && (\r\n                <div>\r\n                  <Error\r\n                    error={translateError(\r\n                      datasets.serverDatasetsError[server.uniqueName]\r\n                    )}\r\n                    retryFunction={() => refreshFunction(server)}\r\n                  />\r\n                </div>\r\n              )}\r\n            {datasets.serverDatasetsError[server.uniqueName] ===\r\n              `Unauthorized` && <ServerLogin server={server} />}\r\n          </NetworkCardParent>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectableBigDatasetList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\r\nimport SelectableBigDatasetList from \"./SelectableBigDatasetList\";\r\nimport { fetchDatasets } from \"../redux/actions/datasets\";\r\nimport DatasetCard from \"./DatasetCard\";\r\n\r\nconst DatasetSelectWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst SelectDatasetWrapper = styled.div`\r\n  width: 13em;\r\n  height: 15em;\r\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  margin: 0.7em;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n\r\n  transform: scale(1);\r\n  transition: transform 0.5s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  text-decoration: none;\r\n  color: ${(props) => props.accenttextcolor};\r\n  display: block;\r\n\r\n  border: 2px ${(props) => props.color} dashed;\r\n  box-sizing: border-box;\r\n  font-size: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst InnerNoOverflow = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst DatasetSelect = ({\r\n  colors,\r\n  innerRef,\r\n  servers,\r\n  datasets,\r\n  getDatasets,\r\n  onDatasetSelect, //(server, networkId) => {}\r\n}) => {\r\n  const [selectedId, selectId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [wrapperRef, setWrapperRef] = useState();\r\n\r\n  React.useEffect(() => {\r\n    servers.servers.map((s) => {\r\n      getDatasets(s);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DatasetSelectWrapper onClick={() => setOpen(true)}>\r\n      {(!selectedId || open) && (\r\n        <>\r\n          <SelectDatasetWrapper {...colors} ref={(ref) => setWrapperRef(ref)}>\r\n            Select dataset\r\n          </SelectDatasetWrapper>\r\n          {open && (\r\n            <AnimatedFullScreenCard\r\n              startFromElement={wrapperRef}\r\n              fullscreen={true}\r\n              onCloseCallback={() => {\r\n                setOpen(false);\r\n              }}\r\n              contentFunction={(closeCard) => {\r\n                return (\r\n                  <InnerNoOverflow>\r\n                    <SelectableBigDatasetList\r\n                      servers={servers}\r\n                      datasets={datasets}\r\n                      onSelect={(server, datasetId) => {\r\n                        closeCard(false);\r\n                        onDatasetSelect(server, datasetId);\r\n                        selectId({\r\n                          server: server.uniqueName,\r\n                          dataset: datasetId,\r\n                        });\r\n                      }}\r\n                      refreshFunction={(server) => getDatasets(server)}\r\n                    />\r\n                  </InnerNoOverflow>\r\n                );\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {!open && selectedId && (\r\n        <DatasetCard\r\n          dataset={datasets.datasets[selectedId.server][selectedId.dataset]}\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n          getRef={(ref) => setWrapperRef(ref)}\r\n        />\r\n      )}\r\n    </DatasetSelectWrapper>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getDatasets: (server) => fetchDatasets(server, dispatch),\r\n  })\r\n)(DatasetSelect);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setTrainingParam } from \"../redux/actions/training\";\r\nimport KeyValueTable from \"../components/KeyValueTable\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { fetchNetwork } from \"../redux/actions/networks\";\r\nimport { fetchDataset } from \"../redux/actions/datasets\";\r\nimport { startTraining } from \"../redux/actions/training\";\r\n\r\n//components\r\nimport SpringButton from \"../components/SpringButton\";\r\nimport NetworkSelect from \"../components/NetworkSelect\";\r\nimport DatasetSelect from \"../components/DatasetSelect\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Error from \"../components/Error\";\r\nimport { setNetwork } from \"../redux/actions/networks\";\r\n\r\nconst TrainingWrapper = styled.div`\r\n  height: 100%;\r\n  padding: 1em;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TwoPart = styled.div`\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  @media only screen and (max-width: 900px) {\r\n    & {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TwoPartChild = styled.div`\r\n  width: 50%;\r\n  @media only screen and (max-width: 900px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TwoPartVertical = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst TwoPartVerticalChild = styled.div`\r\n  height: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StartTrainingButtonWrapper = styled.div`\r\n  width: calc(100% - 4em);\r\n  margin: 2em;\r\n  margin-top: 0;\r\n`;\r\n\r\nclass StartTraining extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      networkId: undefined,\r\n      datasetId: undefined,\r\n      datasetServer: undefined,\r\n      networkServer: undefined,\r\n      server: undefined,\r\n      trainingProps: {\r\n        epochs: 200,\r\n        batch_size: 1,\r\n        learningRate: -0.1,\r\n        decay: 0.005,\r\n      },\r\n      redirect: false,\r\n      error: false,\r\n    };\r\n  }\r\n  render() {\r\n    return this.state.redirect ? (\r\n      <Redirect to={`/training`} />\r\n    ) : (\r\n      <TrainingWrapper>\r\n        <TwoPart>\r\n          <TwoPartChild>\r\n            <TwoPartVertical>\r\n              <TwoPartVerticalChild>\r\n                <Title>Network</Title>\r\n                <NetworkSelect\r\n                  onNetworkSelect={(server, networkId) => {\r\n                    if (\r\n                      this.props.networks.networks[server.uniqueName][networkId]\r\n                        .reduced\r\n                    ) {\r\n                      this.props.getNetwork(networkId, server);\r\n                    }\r\n                    this.setState({\r\n                      networkId,\r\n                      networkServer: server,\r\n                      server,\r\n                    });\r\n                  }}\r\n                />\r\n              </TwoPartVerticalChild>\r\n              <TwoPartVerticalChild>\r\n                <Title>Dataset</Title>\r\n                <DatasetSelect\r\n                  onDatasetSelect={(server, datasetId) => {\r\n                    if (\r\n                      this.props.datasets.datasets[server.uniqueName][datasetId]\r\n                        .reduced\r\n                    ) {\r\n                      this.props.getDataset(datasetId, server);\r\n                    }\r\n                    this.setState({ datasetId, datasetServer: server });\r\n                  }}\r\n                />\r\n              </TwoPartVerticalChild>\r\n            </TwoPartVertical>\r\n          </TwoPartChild>\r\n          <TwoPartChild>\r\n            <KeyValueTable\r\n              data={this.state.trainingProps}\r\n              editFunction={(key, value) => {\r\n                this.setState((prev) => ({\r\n                  trainingProps: Object.assign({}, prev.trainingProps, {\r\n                    [key]: value,\r\n                  }),\r\n                }));\r\n              }}\r\n            ></KeyValueTable>\r\n\r\n            <StartTrainingButtonWrapper>\r\n              <SpringButton\r\n                text={`Start Training`}\r\n                color={this.props.colors.primarycolor}\r\n                textColor={this.props.colors.primarytextcolor}\r\n                onClick={() => {\r\n                  if (this.state.networkId && this.state.datasetId)\r\n                    if (\r\n                      this.props.networks.networks[\r\n                        this.state.networkServer.uniqueName\r\n                      ][this.state.networkId] &&\r\n                      this.props.networks.networks[\r\n                        this.state.networkServer.uniqueName\r\n                      ][this.state.networkId]\r\n                    ) {\r\n                      // https://stackoverflow.com/questions/1584370/how-to-merge-two-arrays-in-javascript-and-de-duplicate-items\r\n                      function arrayUnique(array) {\r\n                        var a = array.concat();\r\n                        for (var i = 0; i < a.length; ++i) {\r\n                          for (var j = i + 1; j < a.length; ++j) {\r\n                            if (a[i] === a[j]) a.splice(j--, 1);\r\n                          }\r\n                        }\r\n\r\n                        return a;\r\n                      }\r\n\r\n                      const dataset = this.props.datasets.datasets[\r\n                        this.state.datasetServer.uniqueName\r\n                      ][this.state.datasetId];\r\n                      const network = Object.assign(\r\n                        this.props.networks.networks[\r\n                          this.state.networkServer.uniqueName\r\n                        ][this.state.networkId],\r\n                        {\r\n                          serializeParams: arrayUnique(\r\n                            (\r\n                              this.props.networks.networks[\r\n                                this.state.networkServer.uniqueName\r\n                              ][this.state.networkId].serializeParams || []\r\n                            ).concat([\"labels\"])\r\n                          ),\r\n                          labels: dataset.labels,\r\n                        }\r\n                      );\r\n                      this.props.setNetwork(network, this.state.server);\r\n                      this.props.startTraining({\r\n                        server: this.state.server,\r\n                        network,\r\n                        dataset,\r\n                        trainingParams: this.state.trainingProps,\r\n                      });\r\n                      this.setState({ redirect: true });\r\n                    } else\r\n                      this.setState({ error: \"invalid network or dataset\" });\r\n                }}\r\n              />\r\n            </StartTrainingButtonWrapper>\r\n            {this.state.error && <Error error={this.state.error} />}\r\n          </TwoPartChild>\r\n        </TwoPart>\r\n      </TrainingWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getNetwork: (networkId, server) =>\r\n      fetchNetwork(networkId, server, dispatch),\r\n    getDataset: (datasetId, server) =>\r\n      fetchDataset(datasetId, server, dispatch),\r\n    setNetwork: (network, server) => setNetwork(server, network, dispatch),\r\n    startTraining: ({ server, network, dataset, trainingParams }) =>\r\n      startTraining({ server, network, dataset, trainingParams, dispatch }),\r\n  })\r\n)(StartTraining);\r\n","import TrainingController from \"../../other/TrainingController\";\r\nimport { setNetwork } from \"./networks\";\r\n\r\nexport const START_TRAINING = \"START_TRAINING\";\r\nexport const STOP_TRAINING = \"STOP_TRAINING\";\r\nexport const TRAINING_PROGRESS = \"TRAINING_PROGRESS\";\r\n\r\nexport const startedTraining = ({\r\n  network,\r\n  server,\r\n  dataset,\r\n  trainingParams,\r\n  epochs,\r\n  learningRate,\r\n  trainingInstance,\r\n}) => ({\r\n  type: START_TRAINING,\r\n  network,\r\n  server,\r\n  dataset,\r\n  trainingParams,\r\n  epochs,\r\n  learningRate,\r\n  trainingInstance,\r\n});\r\n\r\nexport const stoppedTraining = ({ network, server }) => ({\r\n  type: STOP_TRAINING,\r\n  network,\r\n  server,\r\n});\r\n\r\nexport const trainingProgress = ({\r\n  server,\r\n  epoch,\r\n  err,\r\n  accuracy,\r\n  learningRate,\r\n  network,\r\n  epochs,\r\n}) => ({\r\n  type: TRAINING_PROGRESS,\r\n  epoch,\r\n  err,\r\n  accuracy,\r\n  learningRate,\r\n  server,\r\n  network,\r\n  epochs,\r\n});\r\n\r\nexport const startTraining = ({\r\n  server,\r\n  network,\r\n  dataset,\r\n  trainingParams,\r\n  dispatch,\r\n}) => {\r\n  const trainingInstance = new TrainingController({\r\n    server,\r\n    network,\r\n    dataset,\r\n    trainingParams,\r\n  });\r\n  trainingInstance.addEventListener(\"start\", () => {\r\n    dispatch(\r\n      startedTraining({\r\n        network,\r\n        server,\r\n        dataset,\r\n        trainingParams,\r\n        learningRate: trainingParams.learningRate,\r\n        epochs: trainingParams.epochs,\r\n        trainingInstance: trainingInstance,\r\n      })\r\n    );\r\n  });\r\n  trainingInstance.addEventListener(\"end\", () => {\r\n    dispatch(stoppedTraining({ network, server }));\r\n  });\r\n  trainingInstance.addEventListener(\r\n    \"batchProgress\",\r\n    (epoch, accuracy, err, learningRate, trainedNetwork) => {\r\n      setNetwork(\r\n        server,\r\n        Object.assign(JSON.parse(trainedNetwork), {\r\n          name: network.name,\r\n          id: network.id,\r\n        }),\r\n        dispatch,\r\n        false\r\n      );\r\n      dispatch(\r\n        trainingProgress({\r\n          epoch,\r\n          err,\r\n          accuracy,\r\n          learningRate,\r\n          server,\r\n          network,\r\n          epochs: trainingParams.epochs,\r\n        })\r\n      );\r\n    }\r\n  );\r\n  trainingInstance.startLearning();\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchDatasets } from \"../redux/actions/datasets\";\r\nimport { NetworkCardParent } from \"../components/NetworkCard\";\r\nimport Error, { translateError } from \"../components/Error\";\r\nimport ServerLogin from \"../components/ServerLogin\";\r\nimport DatasetCard, { AddDatasetCard } from \"../components/DatasetCard\";\r\nimport { SyncLoader } from \"react-spinners\";\r\n\r\nclass Datasets extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.servers.servers.map((server) =>\r\n      this.props.fetchDatasets(server)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.servers.servers.map((server) => (\r\n          <NetworkCardParent\r\n            title={server.uniqueName}\r\n            key={`dataset_parent${server.uniqueName}`}\r\n          >\r\n            {this.props.datasets.serverDatasetsLoading[server.uniqueName] && (\r\n              <div style={{ width: `100%`, heigh: `100%` }}>\r\n                <SyncLoader />\r\n              </div>\r\n            )}\r\n            {this.props.datasets.serverDatasetsError[server.uniqueName] &&\r\n              this.props.datasets.serverDatasetsError[server.uniqueName] !==\r\n                `Unauthorized` && (\r\n                <Error\r\n                  error={translateError(\r\n                    this.props.datasets.serverDatasetsError[server.uniqueName]\r\n                  )}\r\n                  retryFunction={() => this.props.fetchDatasets(server)}\r\n                />\r\n              )}\r\n            {this.props.datasets.serverDatasetsError[server.uniqueName] ===\r\n              `Unauthorized` && <ServerLogin server={server} />}\r\n            {!this.props.datasets.serverDatasetsLoading[server.uniqueName] &&\r\n              !this.props.datasets.serverDatasetsError[server.uniqueName] &&\r\n              this.props.datasets.datasets[server.uniqueName] && (\r\n                <>\r\n                  {Object.keys(\r\n                    this.props.datasets.datasets[server.uniqueName]\r\n                  ).map((datasetId) => (\r\n                    <DatasetCard\r\n                      key={`dataset_card_${datasetId}`}\r\n                      dataset={\r\n                        this.props.datasets.datasets[server.uniqueName][\r\n                          datasetId\r\n                        ]\r\n                      }\r\n                      serverId={server.uniqueName}\r\n                    />\r\n                  ))}\r\n                  <AddDatasetCard server={server} />\r\n                </>\r\n              )}\r\n          </NetworkCardParent>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    fetchDatasets: (server) => fetchDatasets(server, dispatch),\r\n  })\r\n)(Datasets);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  background: ${(props) => props.color};\r\n  color: ${(props) => props.textcolor};\r\n  border-radius: 5px;\r\n  margin-top: 1em;\r\n  padding: 1em;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TwoPart = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nexport default ({ color, textcolor, text, onConfirm, style }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  return (\r\n    <ButtonWrapper\r\n      {...{ color, textcolor }}\r\n      style={style}\r\n      onClick={() => {\r\n        if (!open) {\r\n          setOpen(true);\r\n        }\r\n      }}\r\n    >\r\n      {!open && <div>{text}</div>}\r\n      {open && (\r\n        <>\r\n          <TwoPart\r\n            onClick={() => {\r\n              onConfirm();\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            confirm\r\n          </TwoPart>\r\n          <TwoPart\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            cancel\r\n          </TwoPart>\r\n        </>\r\n      )}\r\n    </ButtonWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport TrainingController from \"../other/TrainingController\";\r\nimport { deepNormalize, max, deepMap } from \"../CNN-js/math\";\r\nimport { tint, mix } from \"polished\";\r\nimport { SyncLoader } from \"react-spinners\";\r\nconst CNN = require(\"../CNN-js/cnn\").CNN;\r\n\r\nconst StyledTable = styled.table`\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 0.5em;\r\n  box-sizing: border-box;\r\n  table-layout: fixed;\r\n`;\r\nconst StyledRow = styled.tr``;\r\nconst StyledData = styled.td`\r\n  text-align: center;\r\n  background: ${(props) => tint(1 - props.opacity, props.primarycolor)};\r\n  color: ${(props) =>\r\n    props.opacity > 0.5 ? props.primarytextcolor : props.textcolor};\r\n`;\r\n\r\nconst StyledDataFlipped = styled.td`\r\n  text-align: center;\r\n  color: ${(props) => props.textcolor};\r\n  transform: rotate(-90deg);\r\n  height: 5em;\r\n`;\r\nconst StyledDataStart = styled.td`\r\n  text-align: center;\r\n  color: ${(props) => props.textcolor};\r\n  width: 5em;\r\n`;\r\n\r\nconst StyledCenterData = styled.td`\r\n  text-align: center;\r\n  background: ${(props) => tint(1 - props.opacity, props.primarycolor)};\r\n  color: ${(props) =>\r\n    props.opacity > 0.5 ? props.primarytextcolor : props.textcolor};\r\n  border: 1px solid grey;\r\n\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  color: ${(props) => props.textcolor};\r\n  border-radius: 5px;\r\n  :not(:first-child) {\r\n    margin-top: 0.5em;\r\n  }\r\n  padding: 0.5em;\r\n  height: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 0.5em;\r\n`;\r\n\r\nconst TableMenuTop = styled.div`\r\n  height: 1em;\r\n  text-align: center;\r\n  vertical-align: center;\r\n`;\r\n\r\nconst TableMenuRestBottom = styled.div`\r\n  height: calc(100% - 0.5em);\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst TableMenuLeft = styled.div`\r\n  width: 1em;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: rotate(-90deg) translateZ(0);\r\n  -webkit-font-smoothing: antialiased;\r\n`;\r\n\r\nconst TableRest = styled.div`\r\n  width: calc(100% - 0.5em);\r\n  height: 100%;\r\n`;\r\n\r\nexport default connect((state) => state)(\r\n  ({ colors, network, dataset, updateVar, statsCallback }) => {\r\n    const [cm, setCm] = React.useState(null);\r\n    const [normalizedCm, setNormalizedCm] = React.useState(null);\r\n    const [stats, setStats] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const labels = dataset.labels;\r\n\r\n    React.useEffect(() => {\r\n      if (!loading) {\r\n        setLoading(true);\r\n        const instance = new TrainingController({ network, dataset });\r\n        instance.addEventListener(\"confusionMatrix\", (confusion) => {\r\n          setCm(confusion);\r\n          setNormalizedCm(deepNormalize(confusion, max(confusion)));\r\n          const stats1 = CNN.confusionMatrixStats(confusion);\r\n          setStats(stats1);\r\n          if (statsCallback) statsCallback(stats1);\r\n          setLoading(false);\r\n        });\r\n        instance.confusionMatrix();\r\n      }\r\n    }, [updateVar]);\r\n    return cm && stats ? (\r\n      <TableContainer {...colors}>\r\n        <TableMenuTop>\r\n          predicted{loading ? `(recalculating...)` : ``}\r\n        </TableMenuTop>\r\n        <TableMenuRestBottom>\r\n          <TableMenuLeft>actual</TableMenuLeft>\r\n          <TableRest>\r\n            <StyledTable>\r\n              {labels && (\r\n                <StyledRow>\r\n                  <StyledData {...colors} opacity={0}></StyledData>\r\n                  {labels.map((l) => (\r\n                    <StyledDataFlipped {...colors}>{l}</StyledDataFlipped>\r\n                  ))}\r\n                </StyledRow>\r\n              )}\r\n              {cm.map((row, i) => (\r\n                <StyledRow>\r\n                  {labels && (\r\n                    <StyledDataStart {...colors}>{labels[i]}</StyledDataStart>\r\n                  )}\r\n                  {row.map((predictedCount, j) =>\r\n                    i === j ? (\r\n                      <StyledCenterData\r\n                        {...colors}\r\n                        opacity={normalizedCm[i][j]}\r\n                      >\r\n                        {predictedCount}\r\n                      </StyledCenterData>\r\n                    ) : (\r\n                      <StyledData {...colors} opacity={normalizedCm[i][j]}>\r\n                        {predictedCount}\r\n                      </StyledData>\r\n                    )\r\n                  )}\r\n                </StyledRow>\r\n              ))}\r\n            </StyledTable>\r\n          </TableRest>\r\n        </TableMenuRestBottom>\r\n      </TableContainer>\r\n    ) : (\r\n      <div>\r\n        <SyncLoader />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TableWrapper = styled.div`\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  color: ${(props) => props.textcolor};\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  &:not(:first-child) {\r\n    border-top: 1px solid gray;\r\n  }\r\n`;\r\n\r\nconst TableColumn = styled.div`\r\n  width: 50%;\r\n  text-align: center;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport default connect((state) => ({\r\n  colors: state.colors,\r\n}))(({ colors, data, include, style }) => (\r\n  <TableWrapper {...colors} style={style}>\r\n    {(include || Object.keys(data)).map((key, i) => (\r\n      <TableRow key={`data_row_${i}`}>\r\n        <TableColumn>{key}</TableColumn>\r\n        {typeof data[key] === `object` ? (\r\n          <TableColumn>\r\n            {Object.keys(data[key]).map((keyInner, j) => (\r\n              <TableRow key={`data_row_row_${j}`}>\r\n                <TableColumn>{keyInner}</TableColumn>\r\n                <TableColumn>{data[key][keyInner]}</TableColumn>\r\n              </TableRow>\r\n            ))}\r\n          </TableColumn>\r\n        ) : (\r\n          <TableColumn>{data[key]}</TableColumn>\r\n        )}\r\n      </TableRow>\r\n    ))}\r\n  </TableWrapper>\r\n));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Error from \"../components/Error\";\r\nimport styled from \"styled-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport ButtonWithConfirmation from \"../components/ButtonWithConfirmation\";\r\n\r\nimport ConfusionMatrix from \"../components/ConfusionMatrix\";\r\nimport { getDataset } from \"../other/api\";\r\n\r\nimport Table from \"../components/Table\";\r\n\r\nconst ChardCard = styled.div`\r\n  background: ${(props) => props.backgroundbyelevation(1)};\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  color: ${(props) => props.textcolor};\r\n  border-radius: 5px;\r\n  :not(:first-child) {\r\n    margin-top: 0.5em;\r\n  }\r\n  padding: 0.5em;\r\n`;\r\n\r\nclass ChartWrapper extends React.Component {\r\n  componentDidUpdate() {\r\n    if (this.chartRef) {\r\n      this.chartRef.chartInstance.update();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ChardCard {...this.props.colors}>\r\n        <Line\r\n          data={{\r\n            datasets: this.props.datasets.map((d) =>\r\n              Object.assign({}, d, {\r\n                fill: false,\r\n                borderColor: this.props.color,\r\n                data: d.data.map((y, x) => ({\r\n                  x,\r\n                  y,\r\n                })),\r\n              })\r\n            ),\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: this.props.title },\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  type: `linear`,\r\n                  ticks: this.props.maxX\r\n                    ? {\r\n                        suggestedMin: 0,\r\n                        suggestedMax: this.props.maxX,\r\n                      }\r\n                    : {},\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n          ref={(reference) => (this.chartRef = reference)}\r\n        />\r\n      </ChardCard>\r\n    );\r\n  }\r\n}\r\n\r\nconst TopBottom = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst TopBottomChild = styled.div`\r\n  height: 50%;\r\n  width: 100%;\r\n  padding: 0.5em;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TrainingProgressWrapper = styled.div`\r\n  padding: 0.5em;\r\n`;\r\n\r\nconst LeftRight = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftRightChild = styled.div`\r\n  width: 50%;\r\n  max-height: 100vh;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst round = (x, c) => parseInt(x * 10 ** c) / 10 ** c;\r\nclass TrainingProgress extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stats: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const trained =\r\n      this.props.match.params.serverUniqueName === `trained` &&\r\n      this.props.training.trained[this.props.match.params.networkId];\r\n    const serverName = trained\r\n      ? this.props.training.trained[this.props.match.params.networkId].server\r\n      : this.props.match.params.serverUniqueName;\r\n    const networkId = trained\r\n      ? this.props.training.trained[this.props.match.params.networkId].network\r\n      : this.props.match.params.networkId;\r\n\r\n    const trainingData = trained\r\n      ? this.props.training.trained[this.props.match.params.networkId]\r\n      : this.props.training[serverName] &&\r\n        this.props.training[serverName][networkId];\r\n    return (\r\n      <TrainingProgressWrapper>\r\n        {serverName && networkId ? (\r\n          this.props.networks.networks[serverName] &&\r\n          this.props.networks.networks[serverName][networkId] ? (\r\n            trained || (this.props.training[serverName] && trainingData) ? (\r\n              <>\r\n                <LeftRight>\r\n                  <LeftRightChild>\r\n                    <TopBottom>\r\n                      <TopBottomChild>\r\n                        <ChartWrapper\r\n                          colors={this.props.colors}\r\n                          datasets={[\r\n                            {\r\n                              label: `error`,\r\n                              data: trainingData.errArr,\r\n                            },\r\n                          ]}\r\n                          title={`error`}\r\n                          /*maxX={\r\n                      this.props.training[\r\n                        serverName\r\n                      ][networkId].epochs\r\n                    }*/\r\n                          color={this.props.colors.primarycolor}\r\n                        />\r\n                      </TopBottomChild>\r\n                      <TopBottomChild>\r\n                        <ChartWrapper\r\n                          colors={this.props.colors}\r\n                          datasets={[\r\n                            {\r\n                              label: `accuracy`,\r\n                              data: trainingData.accuracyArr.map(\r\n                                (i) => i * 100\r\n                              ),\r\n                            },\r\n                          ]}\r\n                          title={`accuracy`}\r\n                          /*maxX={\r\n                      this.props.training[\r\n                        serverName\r\n                      ][networkId].epochs\r\n                    }*/\r\n                          color={this.props.colors.primarycolor}\r\n                        />\r\n                        {/*<ChartWrapper\r\n                  colors={this.props.colors}\r\n                    datasets={[\r\n                      {\r\n                        label: `learning rate`,\r\n                        data: this.props.training[\r\n                          serverName\r\n                        ][networkId].learningRateArr,\r\n                      },\r\n                    ]}\r\n                    title={`learning rate`}\r\n                    // maxX={\r\n                    //   this.props.training[\r\n                    //     serverName\r\n                    //   ][networkId].epochs\r\n                    // }\r\n                    color={this.props.colors.primarycolor}\r\n                  />*/}\r\n                      </TopBottomChild>\r\n                    </TopBottom>\r\n                  </LeftRightChild>\r\n                  <LeftRightChild>\r\n                    <TopBottom>\r\n                      <TopBottomChild>\r\n                        <Table\r\n                          data={{\r\n                            network: this.props.networks.networks[serverName][\r\n                              networkId\r\n                            ].name,\r\n                            dataset:\r\n                              this.props.training[serverName] &&\r\n                              trainingData.dataset.name,\r\n                          }}\r\n                        />\r\n                        <Table\r\n                          style={{ marginTop: `0.5em` }}\r\n                          data={trainingData}\r\n                          include={[\r\n                            `epoch`,\r\n                            `epochs`,\r\n                            `learningRate`,\r\n                            `err`,\r\n                            `accuracy`,\r\n                          ]}\r\n                        />\r\n                      </TopBottomChild>\r\n                      <TopBottomChild>\r\n                        <LeftRight>\r\n                          <LeftRightChild style={{ paddingRight: `0.5em` }}>\r\n                            <ConfusionMatrix\r\n                              updateVar={trainingData.epoch}\r\n                              network={\r\n                                this.props.networks.networks[serverName][\r\n                                  networkId\r\n                                ]\r\n                              }\r\n                              dataset={\r\n                                this.props.datasets.datasets[serverName][\r\n                                  trainingData.dataset.id\r\n                                ]\r\n                              }\r\n                              statsCallback={(stats) =>\r\n                                this.setState({ stats })\r\n                              }\r\n                            />\r\n                          </LeftRightChild>\r\n                          <LeftRightChild style={{ paddingLeft: `0.5em` }}>\r\n                            <Table\r\n                              data={\r\n                                (this.state.stats &&\r\n                                  this.state.stats.avg &&\r\n                                  Object.keys(this.state.stats.avg).reduce(\r\n                                    (prev, current) =>\r\n                                      Object.assign(prev, {\r\n                                        [current]: `${round(\r\n                                          this.state.stats.avg[current] * 100,\r\n                                          2\r\n                                        )}%`,\r\n                                      }),\r\n                                    {}\r\n                                  )) ||\r\n                                {}\r\n                              }\r\n                            />\r\n                            {!trained && (\r\n                              <ButtonWithConfirmation\r\n                                color={this.props.colors.errorcolor}\r\n                                textcolor={`white`}\r\n                                text={`stop learning`}\r\n                                onConfirm={() =>\r\n                                  this.props.training[serverName][\r\n                                    networkId\r\n                                  ].trainingInstance.terminate()\r\n                                }\r\n                              />\r\n                            )}\r\n                          </LeftRightChild>\r\n                        </LeftRight>\r\n                      </TopBottomChild>\r\n                    </TopBottom>\r\n                  </LeftRightChild>\r\n                </LeftRight>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Error error={`network isn't training`} />\r\n                <Redirect to={`/training`} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <Error error={`network isn't training`} />\r\n          )\r\n        ) : (\r\n          <Error error={`invalid network or server`} />\r\n        )}\r\n      </TrainingProgressWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({ fetchDataset: (id, server) => getDataset(id, server) })\r\n)(TrainingProgress);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// redux actions\r\nimport { fetchDataset } from \"../redux/actions/datasets\";\r\n\r\n// utils\r\nimport styled from \"styled-components\";\r\nimport { openDatasetFromBuffer } from \"../CNN-js/datasetProcessor\";\r\nimport LayerCanvas from \"../components/LayerCanvas\";\r\n\r\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from \"react-icons/ai\";\r\nimport NetworkSelect from \"../components/NetworkSelect\";\r\nimport ConfusionMatrix from \"../components/ConfusionMatrix\";\r\nimport Table from \"../components/Table\";\r\n\r\nconst DatasetWrapper = styled.div`\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0.5em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n\r\n  box-shadow: 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst FlexCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PreviewWrapper = styled.div`\r\n  max-width: 100%;\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 1em;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst PreviewControls = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst PreviewButton = styled.div`\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  background: ${(props) => props.primarycolor};\r\n  color: ${(props) => props.primarytextcolor};\r\n  border: none;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n  box-sizing: content-box;\r\n  padding: 0.2em 0.5em;\r\n  margin-right: 1em;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LeftRight = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftRightChild = styled.div`\r\n  width: 50%;\r\n  max-height: 100vh;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst getDatasetLen = (dataset) => {\r\n  return (\r\n    dataset &&\r\n    dataset.data &&\r\n    dataset.data.length / (dataset.imageSize ** 2 * dataset.colorDepth + 1)\r\n  );\r\n};\r\n\r\nconst round = (x, c) => parseInt(x * 10 ** c) / 10 ** c;\r\n\r\nclass Dataset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataset:\r\n        props.match.params.serverUniqueName &&\r\n        props.match.params.datasetId &&\r\n        props.datasets.datasets[props.match.params.serverUniqueName] &&\r\n        props.datasets.datasets[props.match.params.serverUniqueName][\r\n          props.match.params.datasetId\r\n        ],\r\n      error: undefined,\r\n      server: this.props.servers.servers.find(\r\n        (server) =>\r\n          server.uniqueName === this.props.match.params.serverUniqueName\r\n      ),\r\n\r\n      datasetData: undefined,\r\n      datasetPreviewIndex: 0,\r\n      datasetPreviewSize: 50,\r\n      selectedNetwork: undefined,\r\n      selectedNetworkServer: undefined,\r\n      confusionStats: undefined,\r\n    };\r\n\r\n    this.checkForError = this.checkForError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkForError();\r\n\r\n    if (this.state.dataset)\r\n      this.setState({\r\n        datasetData: openDatasetFromBuffer(\r\n          this.state.dataset.data,\r\n          this.state.dataset.colorDepth,\r\n          this.state.dataset.imageSize\r\n        ),\r\n      });\r\n  }\r\n\r\n  checkForError() {\r\n    const dataset =\r\n      this.props.match.params.serverUniqueName &&\r\n      this.props.match.params.datasetId &&\r\n      this.props.datasets.datasets[this.props.match.params.serverUniqueName] &&\r\n      this.props.datasets.datasets[this.props.match.params.serverUniqueName][\r\n        this.props.match.params.datasetId\r\n      ];\r\n    if (dataset !== this.state.dataset) this.setState({ dataset });\r\n    let error = undefined;\r\n    if (!this.props.match.params.serverUniqueName) {\r\n      error = `invalid server name`;\r\n    } else if (!this.props.match.params.datasetId) {\r\n      error = `invalid network name`;\r\n    } else if (\r\n      !this.props.datasets.datasets[this.props.match.params.serverUniqueName]\r\n    ) {\r\n      error = `server has no networks`;\r\n      if (!this.state.server.apiToken) {\r\n        error = `not logged in, redirecting...`;\r\n        this.setState({ notLoggedIn: true });\r\n      } else {\r\n        if (!this.state.refreshRequestSent) {\r\n          this.setState({ needToRefreshDataset: true });\r\n        }\r\n      }\r\n    } else if (\r\n      !this.props.datasets.datasets[this.props.match.params.serverUniqueName][\r\n        this.props.match.params.datasetId\r\n      ]\r\n    ) {\r\n      error = `network has not been cached`;\r\n      if (!this.state.refreshRequestSent)\r\n        this.setState({ needToRefreshDataset: true });\r\n    }\r\n\r\n    error =\r\n      this.props.datasets.datasetsError[\r\n        this.props.match.params.serverUniqueName +\r\n          this.props.match.params.datasetId\r\n      ] || error;\r\n    if (this.state.error !== error) {\r\n      this.setState({ error });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkForError();\r\n    if (this.state.needToRefreshDataset) {\r\n      this.setState(\r\n        { needToRefreshDataset: false, refreshRequestSent: true },\r\n        () => {\r\n          this.props.getDataset(\r\n            this.props.match.params.datasetId,\r\n            this.state.server\r\n          );\r\n        }\r\n      );\r\n    }\r\n    if (this.state.dataset && this.state.refreshRequestSent) {\r\n      this.setState({\r\n        datasetData: openDatasetFromBuffer(\r\n          this.state.dataset.data,\r\n          this.state.dataset.colorDepth,\r\n          this.state.dataset.imageSize\r\n        ),\r\n        refreshRequestSent: false,\r\n      });\r\n    }\r\n\r\n    if (this.state.notLoggedIn) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          notLoggedIn: false,\r\n          redirect: true,\r\n        });\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DatasetWrapper>\r\n        {this.state.redirect && (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/datasets\",\r\n            }}\r\n          />\r\n        )}\r\n        {this.state.dataset && (\r\n          <>\r\n            <Title>{this.state.dataset.name}</Title>\r\n            <FlexCenter>\r\n              <PreviewWrapper>\r\n                <Preview>\r\n                  {this.state.datasetData &&\r\n                    this.state.datasetData\r\n                      .slice(\r\n                        this.state.datasetPreviewIndex,\r\n                        this.state.datasetPreviewIndex +\r\n                          this.state.datasetPreviewSize\r\n                      )\r\n                      .map((d) => (\r\n                        <LayerCanvas\r\n                          style={{ paddingLeft: `.5em`, paddingTop: `.5em` }}\r\n                          array={d.input}\r\n                          width={`5em`}\r\n                          height={`5em`}\r\n                        />\r\n                      ))}\r\n                </Preview>\r\n                <PreviewControls>\r\n                  {this.state.datasetData &&\r\n                    this.state.datasetPreviewIndex > 0 && (\r\n                      <PreviewButton\r\n                        {...this.props.colors}\r\n                        onClick={() =>\r\n                          this.setState((prevState) => ({\r\n                            datasetPreviewIndex:\r\n                              prevState.datasetPreviewIndex -\r\n                              prevState.datasetPreviewSize,\r\n                          }))\r\n                        }\r\n                      >\r\n                        <AiOutlineArrowLeft />\r\n                      </PreviewButton>\r\n                    )}\r\n                  {this.state.datasetData &&\r\n                    this.state.datasetPreviewIndex +\r\n                      this.state.datasetPreviewSize <\r\n                      this.state.datasetData.length && (\r\n                      <PreviewButton\r\n                        {...this.props.colors}\r\n                        onClick={() =>\r\n                          this.setState((prevState) => ({\r\n                            datasetPreviewIndex:\r\n                              prevState.datasetPreviewIndex +\r\n                              prevState.datasetPreviewSize,\r\n                          }))\r\n                        }\r\n                      >\r\n                        <AiOutlineArrowRight />\r\n                      </PreviewButton>\r\n                    )}\r\n                </PreviewControls>\r\n              </PreviewWrapper>\r\n            </FlexCenter>\r\n            <Title>Generate confusion matrix</Title>\r\n            <LeftRight>\r\n              <LeftRightChild>\r\n                <NetworkSelect\r\n                  onNetworkSelect={(server, networkId) => {\r\n                    this.setState({\r\n                      selectedNetworkServer: server,\r\n                      selectedNetwork: networkId,\r\n                    });\r\n                  }}\r\n                />\r\n              </LeftRightChild>\r\n              <LeftRightChild>\r\n                {this.state.selectedNetwork && (\r\n                  <LeftRight>\r\n                    <LeftRightChild>\r\n                      <ConfusionMatrix\r\n                        updateVar={this.state.selectedNetwork}\r\n                        network={\r\n                          this.props.networks.networks[\r\n                            this.state.selectedNetworkServer.uniqueName\r\n                          ][this.state.selectedNetwork]\r\n                        }\r\n                        dataset={this.state.dataset}\r\n                        statsCallback={(confusionStats) =>\r\n                          this.setState({ confusionStats })\r\n                        }\r\n                      />\r\n                    </LeftRightChild>\r\n                    <LeftRightChild>\r\n                      {this.state.confusionStats && (\r\n                        <Table\r\n                          data={\r\n                            Object.keys(this.state.confusionStats.avg).reduce(\r\n                              (prev, current) =>\r\n                                Object.assign(prev, {\r\n                                  [current]: `${round(\r\n                                    this.state.confusionStats.avg[current] *\r\n                                      100,\r\n                                    2\r\n                                  )}%`,\r\n                                }),\r\n                              {}\r\n                            ) || {}\r\n                          }\r\n                        />\r\n                      )}\r\n                    </LeftRightChild>\r\n                  </LeftRight>\r\n                )}\r\n              </LeftRightChild>\r\n            </LeftRight>\r\n          </>\r\n        )}\r\n      </DatasetWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => state,\r\n  (dispatch) => ({\r\n    getDataset: (datasetId, server) =>\r\n      fetchDataset(datasetId, server, dispatch),\r\n  })\r\n)(Dataset);\r\n","import React from \"react\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\n// components\r\nimport Sidebar from \"./Sidebar\";\r\nimport TopBar from \"./TopBar\";\r\nimport TrainingIndicator from \"./TrainingIndicator\";\r\n\r\n// screens\r\nimport Dashboard from \"../screens/Dashboard\";\r\nimport Networks from \"../screens/Networks\";\r\nimport Network from \"../screens/Network\";\r\nimport Training from \"../screens/Training\";\r\nimport StartTraining from \"../screens/StartTraining\";\r\nimport Datasets from \"../screens/Datasets\";\r\nimport TrainingProgress from \"../screens/TrainingProgress\";\r\n\r\n// router\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// resources\r\nimport { MdHome, MdSchool, MdPhotoLibrary } from \"react-icons/md\";\r\nimport { IoMdGitNetwork } from \"react-icons/io\";\r\nimport { FaQuestion } from \"react-icons/fa\";\r\nimport Dataset from \"../screens/Dataset\";\r\n\r\nconst screens = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    exactLink: true,\r\n    component: Dashboard,\r\n    fullName: `About`,\r\n    icon: FaQuestion,\r\n  },\r\n  {\r\n    path: `/networks`,\r\n    fullName: `Networks`,\r\n    component: Networks,\r\n    exact: true,\r\n    icon: ({ style }) => (\r\n      <IoMdGitNetwork style={{ transform: `rotate(-90deg)`, ...style }} />\r\n    ),\r\n  },\r\n  {\r\n    path: `/datasets`,\r\n    fullName: `Datasets`,\r\n    component: Datasets,\r\n    exact: true,\r\n    icon: MdPhotoLibrary,\r\n  },\r\n  {\r\n    path: `/datasets/:serverUniqueName/:datasetId`,\r\n    component: Dataset,\r\n  },\r\n  {\r\n    path: `/networks/:serverUniqueName/:networkId`,\r\n    component: Network,\r\n  },\r\n  {\r\n    path: `/training`,\r\n    fullName: `Training`,\r\n    component: Training,\r\n    exact: true,\r\n    icon: MdSchool,\r\n    customRightIcon: <TrainingIndicator />,\r\n  },\r\n  {\r\n    path: `/training/:serverUniqueName/:networkId`,\r\n    component: TrainingProgress,\r\n  },\r\n  {\r\n    path: `/startTraining`,\r\n    component: StartTraining,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background: ${(props) => props.background};\r\n  color: ${(props) => props.textcolor};\r\n`;\r\n\r\nconst SideAndScreens = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ScreenSwitcher = styled.div`\r\n  flex-shrink: 1;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nfunction App({ colors }) {\r\n  return (\r\n    <Router>\r\n      <AppWrapper {...colors}>\r\n        <TopBar />\r\n        <SideAndScreens>\r\n          <Sidebar screens={screens} />\r\n          <ScreenSwitcher>\r\n            {screens.map((screen) => (\r\n              <Route\r\n                path={screen.path}\r\n                component={screen.component}\r\n                exact={screen.exact}\r\n              />\r\n            ))}\r\n          </ScreenSwitcher>\r\n        </SideAndScreens>\r\n      </AppWrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default connect((state) => state)(App);\r\n","import { SET_COLOR } from \"../actions/colors\";\r\n\r\nconst darkMode = localStorage.getItem(\"darkMode\");\r\n\r\nconst defaultState = {\r\n  background: darkMode ? `#121212` : `#f4f8f9`,\r\n  topbarbackground: darkMode ? `#121212` : `white`,\r\n  backgroundbyelevation: (e) =>\r\n    darkMode ? `rgb(${18 + e * 20},${18 + e * 20},${18 + e * 20})` : `white`,\r\n  primarycolor: `#2261c6`,\r\n  primarytextcolor: `white`,\r\n  errorcolor: `#e74c3c`,\r\n  textcolor: darkMode ? `white` : `black`,\r\n  accenttextcolor: darkMode ? `white` : `black`,\r\n  subaccenttextcolor: darkMode ? `white` : `black`,\r\n  darkMode,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_COLOR:\r\n      return Object.assign({}, state, { [action.property]: action.value });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_STRUCT_PROP } from \"../actions/structure\";\r\n\r\nconst defaultState = {\r\n  sidebarwidth: `250px`,\r\n  topbarheight: `50px`,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SET_STRUCT_PROP:\r\n      return Object.assign({}, state, { [action.property]: action.value });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_NETWORKS_REQUEST,\r\n  FETCH_NETWORKS_SUCCESS,\r\n  FETCH_NETWORKS_ERROR,\r\n  UNLOAD_NETWORKS,\r\n  NEW_NETWORK_REQUEST,\r\n  NEW_NETWORK_SUCCESS,\r\n  NEW_NETWORK_ERROR,\r\n  FETCH_NETWORK_REQUEST,\r\n  FETCH_NETWORK_SUCCESS,\r\n  FETCH_NETWORK_ERROR,\r\n  SET_NETWORK_SUCCESS,\r\n} from \"../actions/networks\";\r\n\r\nimport { NetworkArchitectures } from \"../../CNN-js/cnn\";\r\n\r\nconst defaultState = {\r\n  networks: {},\r\n  isLoading: {},\r\n  error: {},\r\n  networkLoading: {},\r\n  networkError: {},\r\n  networkArchitectures: { LeNet5Color: NetworkArchitectures.LeNet5Color },\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_NETWORK_REQUEST:\r\n      return Object.assign({}, state, {\r\n        networkLoading: Object.assign({}, state.networkLoading, {\r\n          [action.server.uniqueName + action.networkId]: true,\r\n        }),\r\n        networkError: Object.assign({}, state.networkError, {\r\n          [action.server.uniqueName + action.networkId]: undefined,\r\n        }),\r\n      });\r\n    case FETCH_NETWORK_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        networkLoading: Object.assign({}, state.networkLoading, {\r\n          [action.server.uniqueName + action.networkId]: false,\r\n        }),\r\n        networkError: Object.assign({}, state.networkError, {\r\n          [action.server.uniqueName + action.networkId]: undefined,\r\n        }),\r\n        networks: Object.assign(state.networks, {\r\n          [action.server.uniqueName]: Object.assign(\r\n            {},\r\n            state.networks[action.server.uniqueName],\r\n            { [action.networkId]: action.network }\r\n          ),\r\n        }),\r\n      });\r\n    case SET_NETWORK_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        networks: Object.assign({}, state.networks, {\r\n          [action.server.uniqueName]: Object.assign(\r\n            {},\r\n            state.networks[action.server.uniqueName],\r\n            {\r\n              [action.network.id]: action.network,\r\n            }\r\n          ),\r\n        }),\r\n      });\r\n    case FETCH_NETWORK_ERROR:\r\n      return Object.assign({}, state, {\r\n        networkLoading: Object.assign({}, state.networkLoading, {\r\n          [action.server.uniqueName + action.networkId]: false,\r\n        }),\r\n        networkError: Object.assign({}, state.networkError, {\r\n          [action.server.uniqueName + action.networkId]: action.err,\r\n        }),\r\n      });\r\n    case NEW_NETWORK_REQUEST:\r\n      return Object.assign({}, state, { isLoading: true });\r\n    case NEW_NETWORK_SUCCESS:\r\n      return Object.assign({}, state, { isLoading: false });\r\n    case NEW_NETWORK_ERROR:\r\n      return Object.assign({}, state, { error: action.error });\r\n    case FETCH_NETWORKS_REQUEST:\r\n      return Object.assign({}, state, {\r\n        networks: Object.assign({}, state.networks),\r\n        isLoading: Object.assign({}, state.isLoading, {\r\n          [action.server.uniqueName]: true,\r\n        }),\r\n        error: Object.assign({}, state.error, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\r\n      });\r\n    case FETCH_NETWORKS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        networks: Object.assign({}, state.networks, {\r\n          [action.server.uniqueName]: action.networks,\r\n        }),\r\n        isLoading: Object.assign({}, state.isLoading, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        error: Object.assign({}, state.error, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\r\n      });\r\n    case FETCH_NETWORKS_ERROR:\r\n      return Object.assign({}, state, {\r\n        networks: Object.assign({}, state.networks),\r\n        isLoading: Object.assign({}, state.isLoading, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        error: Object.assign({}, state.error, {\r\n          [action.server.uniqueName]: action.error,\r\n        }),\r\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\r\n      });\r\n    case UNLOAD_NETWORKS:\r\n      return Object.assign({}, state, {\r\n        networks: Object.assign({}, state.networks, {\r\n          [action.server.uniqueName]: undefined,\r\n        }),\r\n        isLoading: Object.assign({}, state.isLoading, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        error: Object.assign({}, state.error, {\r\n          [action.server.uniqueName]: false,\r\n        }),\r\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_SERVER_LOGIN_REQUEST,\r\n  FETCH_SERVER_LOGIN_SUCCESS,\r\n  FETCH_SERVER_LOGIN_ERROR,\r\n} from \"../actions/servers\";\r\n\r\nlet savedServers_array = localStorage.getItem(\"servers_store\");\r\nif (savedServers_array) savedServers_array = JSON.parse(savedServers_array);\r\nconst savedServers = savedServers_array ? {} : null;\r\nif (savedServers_array)\r\n  savedServers_array.forEach((i) => {\r\n    savedServers[i.uniqueName] = i;\r\n  });\r\n\r\nconst defaultState = {\r\n  servers: [\r\n    {\r\n      url: `local`,\r\n      uniqueName: `Local storage`,\r\n      apiToken: `not needed`,\r\n    },\r\n    /*{\r\n      url: `http://localhost:3005`,\r\n      //apiToken: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0YWY2NDdjNWQ0Yjc5MGJhN2ExNGIzZDZjOTY2ZTY0ZTM2ZTAyMzRiM2U4YzY0NmZlYzZjZjk5YzdhNmYyNDU5IiwiaWF0IjoxNTgyNTc3MzE1LCJleHAiOjE1ODMxODIxMTV9.EsPP7BQO8R4aKCjwxCN_xspVjqKQ3BR5BwJrRHL7GrA`,\r\n      uniqueName: `Local server`,\r\n      isLoading: false,\r\n      error: false,\r\n      apiToken:\r\n        savedServers &&\r\n        savedServers[`Local server`] &&\r\n        savedServers[`Local server`].apiToken\r\n    },\r\n    {\r\n      url: `http://localhost:3005`,\r\n      //apiToken: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0YWY2NDdjNWQ0Yjc5MGJhN2ExNGIzZDZjOTY2ZTY0ZTM2ZTAyMzRiM2U4YzY0NmZlYzZjZjk5YzdhNmYyNDU5IiwiaWF0IjoxNTgyNTc3MzE1LCJleHAiOjE1ODMxODIxMTV9.EsPP7BQO8R4aKCjwxCN_xspVjqKQ3BR5BwJrRHL7GrA`,\r\n      uniqueName: `Local server1`,\r\n      isLoading: false,\r\n      error: false,\r\n      apiToken:\r\n        savedServers &&\r\n        savedServers[`Local server1`] &&\r\n        savedServers[`Local server1`].apiToken\r\n    }*/\r\n  ],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SERVER_LOGIN_REQUEST:\r\n      return {\r\n        servers: state.servers.map((server) =>\r\n          Object.assign(\r\n            {},\r\n            server,\r\n            action.server.uniqueName === server.uniqueName\r\n              ? { isLoading: true, error: false }\r\n              : {}\r\n          )\r\n        ),\r\n      };\r\n    case FETCH_SERVER_LOGIN_SUCCESS:\r\n      const servers_store = state.servers.map((server) =>\r\n        Object.assign(\r\n          {},\r\n          server,\r\n          action.server.uniqueName === server.uniqueName\r\n            ? { isLoading: false, error: false, apiToken: action.apiToken }\r\n            : {}\r\n        )\r\n      );\r\n      localStorage.setItem(\"servers_store\", JSON.stringify(servers_store));\r\n      return {\r\n        servers: servers_store,\r\n      };\r\n    case FETCH_SERVER_LOGIN_ERROR:\r\n      return {\r\n        servers: state.servers.map((server) =>\r\n          Object.assign(\r\n            {},\r\n            server,\r\n            action.server.uniqueName === server.uniqueName\r\n              ? { isLoading: false, error: action.error }\r\n              : {}\r\n          )\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  START_TRAINING,\r\n  STOP_TRAINING,\r\n  TRAINING_PROGRESS,\r\n} from \"../actions/training\";\r\n\r\nconst defaultState = { trained: [] };\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case START_TRAINING:\r\n      return Object.assign({}, state, {\r\n        [action.server.uniqueName]: Object.assign(\r\n          {},\r\n          state[action.server.uniqueName],\r\n          {\r\n            [action.network.id]: {\r\n              dataset: Object.assign({}, action.dataset, { data: undefined }),\r\n              epochs: action.epochs,\r\n              epoch: `initializing`,\r\n              learningRate: action.learningRate,\r\n              learningRateArr: [],\r\n              errArr: [],\r\n              accuracyArr: [],\r\n              trainingInstance: action.trainingInstance,\r\n            },\r\n          }\r\n        ),\r\n      });\r\n    case STOP_TRAINING:\r\n      const serverCopy = Object.assign({}, state[action.server.uniqueName]);\r\n      const a = Object.assign(serverCopy[action.network.id], {\r\n        server: action.server.uniqueName,\r\n        network: action.network.id,\r\n      });\r\n      delete serverCopy[action.network.id];\r\n      return Object.assign({}, state, {\r\n        [action.server.uniqueName]: serverCopy,\r\n        trained: state.trained.concat([a]),\r\n      });\r\n    case TRAINING_PROGRESS:\r\n      return Object.assign({}, state, {\r\n        [action.server.uniqueName]: Object.assign(\r\n          {},\r\n          state[action.server.uniqueName],\r\n          {\r\n            [action.network.id]: {\r\n              epoch: action.epoch,\r\n              epochs: action.epochs,\r\n              err: action.err,\r\n              accuracy: action.accuracy,\r\n              learningRate: action.learningRate,\r\n              dataset: Object.assign(\r\n                {},\r\n                state[action.server.uniqueName][action.network.id].dataset,\r\n                { data: undefined }\r\n              ),\r\n              learningRateArr: Object.assign(\r\n                [],\r\n                state[action.server.uniqueName][action.network.id]\r\n                  .learningRateArr,\r\n                {\r\n                  [action.epoch]: action.learningRate * -1,\r\n                }\r\n              ),\r\n              errArr: Object.assign(\r\n                [],\r\n                state[action.server.uniqueName][action.network.id].errArr,\r\n                {\r\n                  [action.epoch]: action.err,\r\n                }\r\n              ),\r\n              accuracyArr: Object.assign(\r\n                [],\r\n                state[action.server.uniqueName][action.network.id].accuracyArr,\r\n                {\r\n                  [action.epoch]: action.accuracy,\r\n                }\r\n              ),\r\n              trainingInstance:\r\n                state[action.server.uniqueName][action.network.id]\r\n                  .trainingInstance,\r\n            },\r\n          }\r\n        ),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_REDUCED_DATASETS_REQUEST,\r\n  FETCH_REDUCED_DATASETS_SUCCESS,\r\n  FETCH_REDUCED_DATASETS_ERROR,\r\n  FETCH_DATASET_REQUEST,\r\n  FETCH_DATASET_SUCCESS,\r\n  FETCH_DATASET_ERROR,\r\n  NEW_DATASET_REQUEST,\r\n  NEW_DATASET_SUCCESS,\r\n  NEW_DATASET_ERROR,\r\n} from \"../actions/datasets\";\r\n\r\nconst defaultState = {\r\n  datasets: {},\r\n  datasetsLoading: {},\r\n  serverDatasetsLoading: {},\r\n  serverDatasetsError: {},\r\n  datasetsError: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REDUCED_DATASETS_REQUEST:\r\n      return {\r\n        datasets: state.datasets,\r\n        datasetsLoading: state.datasetsLoading,\r\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\r\n          [action.server.uniqueName]: true,\r\n        }),\r\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\r\n          [action.server.uniqueName]: undefined,\r\n        }),\r\n        datasetsError: state.datasetsError,\r\n      };\r\n    case FETCH_REDUCED_DATASETS_SUCCESS:\r\n      return {\r\n        datasets: Object.assign(state.datasets, {\r\n          [action.server.uniqueName]: Object.assign(\r\n            {},\r\n            state.datasets[action.server.uniqueName],\r\n            action.datasets\r\n          ),\r\n        }),\r\n        datasetsLoading: state.datasetsLoading,\r\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\r\n          [action.server.uniqueName]: undefined,\r\n        }),\r\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\r\n          [action.server.uniqueName]: undefined,\r\n        }),\r\n        datasetsError: state.datasetsError,\r\n      };\r\n    case FETCH_REDUCED_DATASETS_ERROR:\r\n      return {\r\n        datasets: state.datasets,\r\n        datasetsLoading: state.datasetsLoading,\r\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\r\n          [action.server.uniqueName]: undefined,\r\n        }),\r\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\r\n          [action.server.uniqueName]: action.err,\r\n        }),\r\n        datasetsError: state.datasetsError,\r\n      };\r\n\r\n    case FETCH_DATASET_REQUEST:\r\n      return {\r\n        datasets: state.datasets,\r\n        datasetsLoading: Object.assign({}, state.datasetsError, {\r\n          [action.datasetId]: undefined,\r\n        }),\r\n        serverDatasetsLoading: state.serverDatasetsLoading,\r\n        serverDatasetsError: state.serverDatasetsError,\r\n        datasetsError: Object.assign({}, state.datasetsError, {\r\n          [action.datasetId]: undefined,\r\n        }),\r\n      };\r\n    case FETCH_DATASET_SUCCESS:\r\n      return {\r\n        datasets: Object.assign(state.datasets, {\r\n          [action.server.uniqueName]: Object.assign(\r\n            {},\r\n            state.datasets[action.server.uniqueName],\r\n            {\r\n              [action.dataset.id]: action.dataset,\r\n            }\r\n          ),\r\n        }),\r\n        datasetsLoading: Object.assign({}, state.datasetsError, {\r\n          [action.dataset.id]: undefined,\r\n        }),\r\n        serverDatasetsLoading: state.serverDatasetsLoading,\r\n        serverDatasetsError: state.serverDatasetsError,\r\n        datasetsError: Object.assign({}, state.datasetsError, {\r\n          [action.dataset.id]: undefined,\r\n        }),\r\n      };\r\n    case FETCH_DATASET_ERROR:\r\n      return {\r\n        datasets: state.datasets,\r\n        datasetsLoading: Object.assign({}, state.datasetsError, {\r\n          [action.datasetId]: undefined,\r\n        }),\r\n        serverDatasetsLoading: state.serverDatasetsLoading,\r\n        serverDatasetsError: state.serverDatasetsError,\r\n        datasetsError: Object.assign({}, state.datasetsError, {\r\n          [action.datasetId]: action.err,\r\n        }),\r\n      };\r\n    // case NEW_DATASET_REQUEST:\r\n    //   return\r\n    case NEW_DATASET_SUCCESS:\r\n      return {\r\n        datasets: Object.assign(state.datasets, {\r\n          [action.server.uniqueName]: Object.assign(\r\n            {},\r\n            state.datasets[action.server.uniqueName],\r\n            {\r\n              [action.dataset.id]: action.dataset,\r\n            }\r\n          ),\r\n        }),\r\n        datasetsLoading: state.datasetsError,\r\n        serverDatasetsLoading: state.serverDatasetsLoading,\r\n        serverDatasetsError: state.serverDatasetsError,\r\n        datasetsError: state.datasetsError,\r\n      };\r\n    // case NEW_DATASET_ERROR:\r\n    //   return;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\n// reducers\r\nimport colors from \"./colors\";\r\nimport structure from \"./structure\";\r\nimport networks from \"./networks\";\r\nimport servers from \"./servers\";\r\nimport training from \"./training\";\r\nimport datasets from \"./datasets\";\r\n\r\nexport default combineReducers({\r\n  colors,\r\n  structure,\r\n  networks,\r\n  servers,\r\n  training,\r\n  datasets,\r\n});\r\n","export const SET_COLOR = `SET_COLOR`;\r\n\r\nexport const setColor = (property, value) => ({\r\n  type: SET_COLOR,\r\n  property,\r\n  value\r\n});\r\n","export const SET_STRUCT_PROP = `SET_STRUCT_PROP`;\r\n\r\nexport const setColor = (property, value) => ({\r\n  type: SET_STRUCT_PROP,\r\n  property,\r\n  value\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// components\r\nimport App from \"./components/App.jsx\";\r\n\r\n// styles\r\nimport \"./index.css\";\r\n\r\n// redux\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\n\r\n// reducers\r\nimport rootReducer from \"./redux/reducers\";\r\n\r\n// other\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/cnnjs-logo.09950e4d.svg\";","const Jimp = require(\"jimp\");\r\n\r\n/**\r\n *\r\n * @param {*} image image URL, buffer, path...\r\n * @param {Object} sizeDim output Array size {x:xSize, y:ySize, z:zSize}\r\n *      x and y are mandatory, z is optional and can be 3 or 1, default is 3\r\n *\r\n */\r\nconst imageToArray = (imageData, sizeDim) =>\r\n  new Promise((resolve, reject) => {\r\n    Jimp.read(imageData)\r\n      .then(image => {\r\n        let resizedImage = resizeImage(image, sizeDim);\r\n\r\n        let out;\r\n        if (!sizeDim.z || sizeDim.z === 3) {\r\n          out = [[], [], []];\r\n          for (let j = 0; j < sizeDim.y; j++) {\r\n            out[0][j] = [];\r\n            out[1][j] = [];\r\n            out[2][j] = [];\r\n            for (let k = 0; k < sizeDim.x; k++) {\r\n              const pixel = Jimp.intToRGBA(resizedImage.getPixelColor(k, j));\r\n\r\n              out[0][j][k] = pixel.r;\r\n              out[1][j][k] = pixel.g;\r\n              out[2][j][k] = pixel.b;\r\n            }\r\n          }\r\n        } else {\r\n          out = [[]];\r\n          for (let j = 0; j < sizeDim.y; j++) {\r\n            out[0][j] = [];\r\n            for (let k = 0; k < sizeDim.x; k++) {\r\n              const pixel = Jimp.intToRGBA(resizedImage.getPixelColor(k, j));\r\n              out[0][j][k] = pixel.r;\r\n            }\r\n          }\r\n        }\r\n\r\n        resolve(out);\r\n      })\r\n      .catch(e => reject(e));\r\n  });\r\n\r\n/**\r\n *\r\n * @param {*} array 3d array\r\n * @param {*} writeTo optional, path to write to\r\n * @returns image buffer\r\n */\r\nconst arrayToImage = (array, writeTo) => {\r\n  return new Promise(\r\n    (resolve, reject) =>\r\n      new Jimp(array[0][0].length, array[0].length, (err, image) => {\r\n        for (let y = 0; y < array[0].length; y++) {\r\n          for (let x = 0; x < array[0][y].length; x++) {\r\n            if (array.length === 1) {\r\n              image.setPixelColor(\r\n                Jimp.rgbaToInt(\r\n                  array[0][y][x],\r\n                  array[0][y][x],\r\n                  array[0][y][x],\r\n                  1,\r\n                ),\r\n                x,\r\n                y,\r\n              );\r\n            } else {\r\n              image.setPixelColor(\r\n                Jimp.rgbaToInt(\r\n                  array[0][y][x],\r\n                  array[1][y][x],\r\n                  array[2][y][x],\r\n                  1,\r\n                ),\r\n                x,\r\n                y,\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        if (writeTo) {\r\n          image.write(writeTo, () =>\r\n            image.getBuffer(Jimp.AUTO, b => resolve(b)),\r\n          );\r\n        } else {\r\n          image.getBuffer(Jimp.AUTO, b => resolve(b));\r\n        }\r\n      }),\r\n  );\r\n};\r\n\r\nconst resizeImage = (image, sizeDim) => {\r\n  if (sizeDim.z) {\r\n    if (sizeDim.z === 1) {\r\n      return resizeImage(\r\n        image.greyscale(),\r\n        Object.assign({}, sizeDim, {z: undefined}),\r\n      );\r\n    } else {\r\n      return resizeImage(image, Object.assign({}, sizeDim, {z: undefined}));\r\n    }\r\n  } else {\r\n    return image.resize(sizeDim.x, sizeDim.y);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  imageToArray,\r\n  resizeImage,\r\n  arrayToImage,\r\n};\r\n"],"sourceRoot":""}