{"version":3,"sources":["CNN-js/cnn.js","components/Sidebar.jsx","components/Logo.jsx","components/TopBar.jsx","components/TrainingIndicator.jsx","components/UnderConstruction.jsx","other/testDataset.js","CNN-js/datasetProcessor.js","other/api.js","redux/actions/networks.js","components/NetworkCard.jsx","redux/actions/servers.js","components/ServerLogin.jsx","components/Error.jsx","components/AnimatedFullScreenCard.jsx","screens/Networks.jsx","other/utils.js","components/LayerCanvas.jsx","components/NetworkShapeVisual.jsx","components/KeyValueTable.jsx","CNN-js/imageProcessor.js","components/NetworkPropagation.jsx","redux/actions/datasets.js","screens/Network.jsx","screens/Training.jsx","other/TrainingController.js","components/SpringButton.jsx","components/SelectableBigNetworkList.jsx","components/NetworkSelect.jsx","components/DatasetCard.jsx","components/SelectableBigDatasetList.jsx","components/DatasetSelect.jsx","screens/StartTraining.jsx","redux/actions/training.js","screens/Datasets.jsx","components/ButtonWithConfirmation.jsx","components/ConfusionMatrix.jsx","screens/TrainingProgress.jsx","components/App.jsx","redux/reducers/colors.js","redux/reducers/structure.js","redux/reducers/networks.js","redux/reducers/servers.js","redux/reducers/training.js","redux/reducers/datasets.js","redux/reducers/index.js","redux/actions/colors.js","redux/actions/structure.js","serviceWorker.js","index.js","CNN-js/math.js","res/cnnjs-logo.svg","res/gears.svg"],"names":["sigm","x","Math","exp","ActivationFunctions","RELU","norm","derivative","SIGMOID","TANH","tanh","pow","CNN","shape","confirmShape","this","initialShape","map","s","Object","assign","applyActivationFunctionToShape","errorF","expected","actual","dErrorF","learningRate","layers","dlayers","weights","biases","serializeParams","forEach","p","randomBiasF","Array","length","fill","_","i","type","LayerType","FC","FLATTEN","l","d","h","w","fan_in","fan_out","random","sqrt","CONV","k","f","dataset","epochs","decay","onProgress","onEnd","epoch","error","correct","example","out","forwardPropagate","input","backpropagate","output","updateWeights","getError","maxIndex","classCount","netOut","data","Error","correlate","POOL","maxPool","flattenDeep","matrixAdd","matrixDot","deepMap","v","isNaN","af","returnArray","dout","j","reduce","a","b","transpose","daf","matrixMultiply","y","darray","i1","temp","backPropagateCorrelation","dF","dI","dB","update2Dmatrix","dIn","maxCoords","z","coords","afName","cm","stats","avgSum","precision","recall","f1Score","sum","avg","INPUT","ActivationFunction","Layer","NetworkArchitectures","LeNet5","LeNet5Color","SidebarWrapper","styled","aside","props","sidebarwidth","darkMode","background","primarycolor","SidebarInside","div","SidebarItemLink","NavLink","attrs","activeClassName","primarytextcolor","CustomRightIcon","img","connect","state","colors","screens","structure","screen","ScreenIcon","icon","fullName","to","path","exact","exactLink","style","paddingRight","height","width","customRightIcon","Logo","LogoImg","LogoText","h2","textcolor","src","logo","alt","TopBarStyled","topbarheight","topbarbackground","AboveSidebar","AboveScreens","keys","training","flat","filter","size","color","id","name","imageSize","colorDepth","vectorize","normalizeMax","openDatasetFromBuffer","buffer","imageColorDepth","datasetArray","Uint8Array","imageChannelPixelCount","imagePixelCount","rowCount","console","log","n","label","openDb","Promise","resolve","reject","promiseDb","window","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","onerror","e","addRecord","store_name","then","tx","transaction","objectStore","put","getRecord","get","getAllRecordsAsObject","keyProp","openCursor","cursor","value","continue","getDatasets","server","url","localExisting","testDataset","str","buf","ArrayBuffer","bufView","strLen","charCodeAt","stringToUint8Array","full","catch","fetch","method","headers","Authorization","apiToken","response","json","err","getDataset","res","fetchNetworks","dispatch","deserialized","stringCNNIndex","o","getNetworks","networks","reduced","newNetwork","neuralNet","net_id","Date","getTime","JSON","parse","stringify","createNetwork","fetchNetwork","networkId","requestNetwork","parseInt","saved","getNetwork","net","network","networkSuccess","networkError","setNetwork","setNetworkApi","cardWrapperCss","css","backgroundbyelevation","accenttextcolor","CardWrapper","Link","CardWrapperNoLink","BottomWrapper","NetworkTitle","h4","NetworkImage","NetworkImageDiv","onClick","draggable","getRef","Wrapper","ref","AddNetworkWrapper","nohover","StyledForm","form","StyledSubmit","StyledInput","AddNetworkCard","onclick","useState","setName","networkShapeIndex","setNetworkShapeIndex","show","setShow","primaryColor","onSubmit","preventDefault","networkArchitectures","onChange","evt","placeholder","NetworkCardParentWrapper","small","Title","h3","cardMode","NetworkCards","NetworkScreenTitleWrapper","FlexCenter","NetworkCardParent","children","title","customRightButton","loginToServer","user","pass","body","token","login","ServerLoginWrapper","subaccenttextcolor","StyledInputButton","ErrorDiv","errorcolor","loginServer","unload","setUser","setPass","translateError","stack","rotate","keyframes","StyledReplay","MdReplay","spinning","retryFunction","animation","setAnimation","String","toString","animated","AnimatedCard","startFromElement","contentFunction","fullscreen","onCloseCallback","innerDivRef","setInnerDivRef","wrapperRef","setWrapperRef","setResizeUpdater","closing","setClosing","closed","setClosed","prevStyle","getBoundingClientRect","startComputedStyle","getComputedStyle","opacity","wrapperDivStyle","top","left","innerDivStyle","max","startAnimatedProps","boxShadow","borderWidth","cardProps","useSpring","from","borderRadius","borderColor","borderStyle","config","gentle","clamp","onRest","wrapperProps","resizeHandler","React","useEffect","addEventListener","removeEventListener","boxSizing","DownloadButton","InnerNetworkSelect","FileSelect","ConfirmButton","Networks","networkGroupsSmall","downloadRef","importServer","undefined","importNetworkName","servers","uniqueName","isLoading","r","setState","prevState","key","NetworkCard","createNewNetwork","ServerLogin","AnimatedFullScreenCard","close","onDrop","acceptedFiles","file","reader","FileReader","onabort","onload","networkJSON","readAsText","getRootProps","getInputProps","Component","maxProperties","dataArray","minProperties","min","array","slice","setRef","imageData","concat","prev","positiveSlice","negativeSlice","getContext","putImageData","ImageData","Uint8ClampedArray","WrapperCard","NetworkVisualWrapper","NetworkLayer","FilterLayer","NetworkFilterAndInput","NetworkLayerWrapper","LayerTypeTitle","h5","LayerSpacer","getSliceSize","normalizedLayer","getFilterSliceSize","sliceSize","filterSize","LAYER_STACK_slice","LAYER_STACK_filter_wrapper","LAYER_STACK_FILTER_inner","LAYER_STACK_wrapper","LAYER_STACK_slice_component","layer","withData","layerNormalized","extended","layerData","filterData","sliceheight","layerSliceProps","filterProps","sliceSizeProps","LayerCanvas","position","LAYER_STACK","withFilter","sliceWidth","sliceHeight","wrapperStyle","marginTop","marginLeft","normalizeLayers","nanValue","NaN","normalized","normalizedRecord","normalizeData","setExtended","layersNormalized","layerShape","find","Card","Key","Value","KeyValueWrapper","editFunction","include","Jimp","require","imageToArray","sizeDim","read","image","resizedImage","resizeImage","pixel","intToRGBA","getPixelColor","g","greyscale","resize","PropagationWrapper","FirstLayerDisplay","OutputLayer","Row","tr","OutputTable","table","Prediction","round","c","rawData","setOutput","imageArray","setImageArray","softmaxed","setSoftmaxed","deepNormalize","imageArr","softmax","textAlign","sort","inner","labels","fetchDatasets","datasets","datasetId","datasetsSuccess","message","newDataset","requestNewDataset","apiNewDataset","newDatasetSuccess","NetworkWrapper","Subtitle","ImageSelect","UploadRoot","getDatasetLen","Network","match","params","serverUniqueName","uploadedImage","selectedDatasetImageIndex","checkForError","bind","refreshRequestSent","needToRefreshNetwork","notLoggedIn","setTimeout","redirect","pathname","fileName","document","createElement","href","URL","createObjectURL","Blob","download","appendChild","click","removeChild","exportText","replace","NetworkShapeVisual","networkNew","accept","selectedDatasetIndex","readAsArrayBuffer","padding","options","items","dId","fontSize","NetworkPropagation","inputArray","datasetProps","newValue","networkLoading","TrainingWrapper","TrainingHeader","Column","TrainingList","customLinkFunction","row","accuracy","StartButton","TrainingScreenWrapper","TrainingScreenTitleWrapper","Training","trained","_row","TrainingController","trainingParams","datasetToBeTrained","outLength","vectorizeDatasetLabels","normalizeInputData","emitEvent","trainingInstance","Worker","process","m","postMessage","trainingProps","cmd","terminate","eventsListeners","fn","push","SpringButtonStyled","textColor","SpringButton","text","hovered","setHovered","clicked","setClicked","buttonStyle","transform","onMouseEnter","onMouseLeave","FullCenter","SelectableBigNetworkList","onSelect","refreshFunction","selected","select","serversWithError","setServersWithError","NetworkSelectWrapper","SelectNetworkWrapper","InnerNoOverflow","innerRef","onNetworkSelect","selectedId","selectId","setOpen","closeCard","DatasetImage","display","flexGrow","DatasetImageDiv","DatasetTitle","serverId","AddDatasetWrapper","InnerDatasetSelect","ParameterRow","ParameterName","ParameterInput","LeftRight","LeftRightChild","StyledTextAreaWrapper","StyledTextArea","textarea","AddDatasetCard","newDatasetConnected","rawDataset","setRawDataset","setFileName","setImageSize","setColorDepth","setNormalizeMax","crop","setCrop","setError","setLabels","split","binaryStr","subarray","SelectableBigDatasetList","DatasetCard","serverDatasetsError","DatasetSelectWrapper","SelectDatasetWrapper","onDatasetSelect","TwoPart","TwoPartChild","TwoPartVertical","TwoPartVerticalChild","StartTrainingButtonWrapper","StartTraining","datasetServer","networkServer","batch_size","splice","arrayUnique","startTraining","requestDataset","datasetSuccess","datasetError","fetchDataset","trainedNetwork","trainingProgress","startLearning","Datasets","serverDatasetsLoading","heigh","ButtonWrapper","onConfirm","StyledTable","StyledRow","StyledData","td","tint","StyledDataFlipped","StyledDataStart","StyledCenterData","TableContainer","TableMenuTop","TableMenuRestBottom","TableMenuLeft","TableRest","updateVar","statsCallback","setCm","normalizedCm","setNormalizedCm","setStats","loading","setLoading","instance","confusion","stats1","confusionMatrixStats","confusionMatrix","predictedCount","ChardCard","ChartWrapper","chartRef","chartInstance","update","legend","scales","xAxes","ticks","maxX","suggestedMin","suggestedMax","reference","TopBottom","TopBottomChild","TableWrapper","TableRow","TableColumn","Table","keyInner","TrainingProgressWrapper","TrainingProgress","serverName","trainingData","errArr","accuracyArr","ConfusionMatrix","paddingLeft","ButtonWithConfirmation","component","MdPhotoLibrary","MdSchool","TrainingIndicator","AppWrapper","SideAndScreens","ScreenSwitcher","localStorage","getItem","defaultState","savedServers_array","savedServers","datasetsLoading","datasetsError","combineReducers","action","property","servers_store","setItem","learningRateArr","serverCopy","Boolean","location","hostname","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","getDimension","a1","j1","inputs","filters","stride","F","D","H","W","filterZ","Infinity","sum1","index","dA","dOut","f_d","f_i","f_j","dOut_i","dOut_j","in_i1","in_j1","in_d","in_i","in_j","f_i1","f_j1","dOutM","coordinateMode","layer2d","outY","outX","outLayer","y1","x1","arr1","acc","val","arr","max1","outArr","module","exports"],"mappings":"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","file":"static/js/main.0eaa73cb.chunk.js","sourcesContent":["\"use strict\";\n\nimport {\n  matrixMultiply,\n  matrixDot,\n  transpose,\n  convolute,\n  doubleInverse,\n  correlate,\n  getDimension,\n  maxPool,\n  flattenDeep,\n  matrixAdd,\n  deepMap,\n  backPropagateCorrelation,\n  update2Dmatrix,\n  maxIndex,\n  sum,\n} from \"./math\";\n\nconst sigm = x => 1 / (1 + Math.exp(-x));\nconst ActivationFunctions = {\n  RELU: {norm: x => (x > 0 ? x : 0), derivative: x => (x > 0 ? 1 : 0)},\n  SIGMOID: {\n    norm: sigm,\n    derivative: x => sigm(x) * (1 - sigm(x)), //x => x * (1 - x) /*dSigmoidWithoutSigmoid*/,\n  },\n  TANH: {norm: Math.tanh, derivative: x => 1 - Math.pow(Math.tanh(x), 2)},\n};\n\n/**\n * Convolutional neural network, recieves a shape, give it data, train in and save it\n */\nclass CNN {\n  /**\n   * The constructor takes in the shape of the network and\n   * initalizes weights and filters corresponding to the shape\n   * @param {Array<Layer>} shape Array of Layer instances or a serialized network\n   */\n  constructor(shape) {\n    if (shape.shape) {\n      CNN.confirmShape(shape.shape);\n      this.initialShape = shape.initialShape.map(s => Object.assign({}, s));\n      this.shape = CNN.applyActivationFunctionToShape(shape.initialShape);\n\n      this.errorF = (expected, actual) => Math.pow(actual - expected, 2) / 2;\n      this.dErrorF = (expected, actual) => actual - expected;\n\n      this.learningRate = shape.learningRate;\n\n      this.layers = shape.layers;\n      this.dlayers = shape.dlayers;\n      this.weights = shape.weights;\n      this.biases = shape.biases;\n      this.serializeParams = shape.serializeParams;\n      if (shape.serializeParams) {\n        shape.serializeParams.forEach(p => {\n          this[p] = shape[p];\n        });\n      }\n    } else {\n      CNN.confirmShape(shape);\n      this.initialShape = shape.map(s => Object.assign({}, s));\n      this.shape = CNN.applyActivationFunctionToShape(shape);\n\n      const xavier = (fan_in, fan_out) =>\n        Math.random() * Math.sqrt(6 / (fan_in + fan_out));\n      const kaiming = (fan_in, fan_out) =>\n        (Math.random() * 2 - 1) * Math.sqrt(2 / fan_in);\n      const randomBiasF = () => 0;\n      this.errorF = (expected, actual) => Math.pow(actual - expected, 2) / 2;\n      this.dErrorF = (expected, actual) => actual - expected;\n\n      this.learningRate = -0.01;\n\n      this.layers = new Array(shape.length).fill(0).map((_, i) => {\n        if (\n          shape[i].type == LayerType.FC ||\n          shape[i].type == LayerType.FLATTEN\n        ) {\n          return new Array(shape[i].l).fill(0);\n        } else {\n          return new Array(shape[i].d)\n            .fill(0)\n            .map(() =>\n              new Array(shape[i].h)\n                .fill(0)\n                .map(() => new Array(shape[i].w).fill(0)),\n            );\n        }\n      });\n\n      this.dlayers = []; // dlayers are filled on the backpropagation step\n\n      this.weights = new Array(shape.length).fill(0).map((_, i) => {\n        if (i != 0) {\n          if (shape[i].type == LayerType.FC) {\n            // if layer is FC or FLATTEN, init a weight matrix\n            return new Array(shape[i - 1].l)\n              .fill(0)\n              .map(() =>\n                new Array(shape[i].l)\n                  .fill(0)\n                  .map(l => xavier(shape[i - 1].l, shape[i].l)),\n              );\n          } else if (shape[i].type == LayerType.CONV) {\n            // else initialize a new filter\n            return new Array(shape[i].k)\n              .fill(0)\n              .map(() =>\n                new Array(shape[i - 1].d)\n                  .fill(0)\n                  .map(() =>\n                    new Array(shape[i].f)\n                      .fill(0)\n                      .map(() =>\n                        new Array(shape[i].f)\n                          .fill(0)\n                          .map((_, l) =>\n                            kaiming(\n                              shape[i - 1].w * shape[i - 1].d * shape[i - 1].h,\n                            ),\n                          ),\n                      ),\n                  ),\n              );\n          }\n        }\n      });\n\n      // init biases as the same sizes of their layers\n      this.biases = new Array(shape.length).fill(0).map((_, i) => {\n        if (i != 0) {\n          if (shape[i].type == LayerType.FC) {\n            return new Array(this.shape[i].l).fill(0).map(randomBiasF);\n          } else {\n            return new Array(this.shape[i].d).fill(0).map(randomBiasF);\n          }\n        }\n      });\n    }\n  }\n\n  static applyActivationFunctionToShape(shape) {\n    return shape.map(s =>\n      s.afName\n        ? Object.assign(s, {\n            af: ActivationFunctions[s.afName].norm,\n            daf: ActivationFunctions[s.afName].derivative,\n          })\n        : s,\n    );\n  }\n\n  sgd({\n    dataset,\n    epochs,\n    learningRate = this.learningRate,\n    decay = 0,\n    onProgress,\n    onEnd,\n  }) {\n    this.learningRate = learningRate;\n\n    for (let epoch = 0; epoch < epochs; epoch++) {\n      let error = 0;\n      let correct = 0;\n      for (let example = 0; example < dataset.length; example++) {\n        let out = this.forwardPropagate(dataset[example].input);\n        this.backpropagate(dataset[example].output);\n        this.updateWeights();\n        const err = this.getError(dataset[example].output);\n        error += err;\n\n        if (maxIndex(out) === maxIndex(dataset[example].output)) {\n          correct++;\n        }\n      }\n\n      if (onProgress)\n        onProgress(\n          epoch,\n          correct / dataset.length,\n          error / dataset.length,\n          this.learningRate,\n        );\n      this.learningRate = learningRate / (1 + decay * epoch);\n    }\n\n    if (onEnd) onEnd();\n  }\n\n  confusionMatrix(dataset) {\n    const classCount = this.layers[this.layers.length - 1].length;\n    const out = new Array(classCount)\n      .fill(0)\n      .map(() => new Array(classCount).fill(0));\n    for (let i = 0; i < dataset.length; i++) {\n      const netOut = this.forwardPropagate(dataset[i].input);\n      if (dataset[i].output.length)\n        out[maxIndex(dataset[i].output)][maxIndex(netOut)]++;\n      else out[dataset[i].output][maxIndex(netOut)]++;\n    }\n    return out;\n  }\n\n  static confusionMatrixStats(cm) {\n    const classCount = cm.length;\n    const stats = {actual: []};\n    const avgSum = {precision: 0, recall: 0, f1Score: 0};\n    for (let i = 0; i < classCount; i++) {\n      const precision = cm[i][i] / sum(cm.map(k => k[i]));\n      const recall = cm[i][i] / sum(cm[i]);\n      stats.actual[i] = {\n        precision,\n        recall,\n        f1Score: (2 * (precision * recall)) / (precision + recall),\n      };\n      avgSum.precision += stats.actual[i].precision;\n      avgSum.recall += stats.actual[i].recall;\n      avgSum.f1Score += stats.actual[i].f1Score;\n    }\n\n    stats.avg = {\n      precision: avgSum.precision / classCount,\n      recall: avgSum.recall / classCount,\n      f1Score: avgSum.f1Score / classCount,\n    };\n\n    return stats;\n  }\n\n  /**\n   * Pass the data trough all layers and return the last one\n   * @param {Array<Array<Array<Number>>>} data\n   */\n  forwardPropagate(data) {\n    if (data.length != this.shape[0].d)\n      throw new Error(\n        `data depth (${data.length}) doesnt match required depth (${this.shape[0].d})`,\n      );\n\n    if (data[0].length != this.shape[0].h)\n      throw new Error(\n        `data height (${data[0].length}) doesnt match required height (${this.shape[0].h})`,\n      );\n\n    if (data[0][0].length != this.shape[0].w)\n      throw new Error(\n        `data width (${data[0][0].length}) doesnt match required width (${this.shape[0].w})`,\n      );\n\n    this.layers[0] = data;\n\n    for (let i = 1; i < this.shape.length; i++) {\n      switch (this.shape[i].type) {\n        case LayerType.CONV:\n          this.layers[i] = correlate(\n            this.layers[i - 1],\n            this.weights[i],\n            this.shape[i].s,\n            this.shape[i].p,\n            this.biases[i],\n          );\n          break;\n        case LayerType.POOL:\n          this.layers[i] = maxPool(\n            this.layers[i - 1],\n            this.shape[i].f,\n            this.shape[i].s,\n          );\n          break;\n        case LayerType.FLATTEN:\n          this.layers[i] = flattenDeep(this.layers[i - 1]);\n          break;\n        case LayerType.FC:\n          this.layers[i] = matrixAdd(\n            matrixDot([this.layers[i - 1]], this.weights[i])[0],\n            this.biases[i],\n          );\n          break;\n      }\n\n      // Check for NaN before and after activation\n      deepMap(this.layers[i], (x, i, v) => {\n        if (isNaN(x)) throw new Error(`[${i}] output NaN before activation`);\n        return x;\n      });\n\n      if (this.shape[i].af)\n        this.layers[i] = deepMap(this.layers[i], x => this.shape[i].af(x));\n\n      deepMap(this.layers[i], x => {\n        if (isNaN(x)) throw new Error(`[${i}] output NaN after activation`);\n        return x;\n      });\n\n      // console.log(i)\n    }\n\n    // return last layer\n    return this.layers[this.layers.length - 1];\n  }\n\n  /**\n   *\n   * @param {Array} exp expected output\n   * @param {boolean} returnArray does the function return the array?\n   */\n  getError(exp, returnArray = false) {\n    if (exp.length != this.shape[this.shape.length - 1].l)\n      throw new Error(\n        `expected array length (${\n          exp.length\n        }) doesn't equal last layer length (${\n          this.shape[this.shape.length - 1].l\n        })`,\n      );\n\n    let dout = this.layers[this.shape.length - 1].map((v, j) =>\n      this.errorF(exp[j], v),\n    );\n    this.error =\n      dout.reduce((a, b) => a + b, 0) /\n      this.layers[this.shape.length - 1].length;\n\n    if (returnArray) return dout;\n    else return this.error;\n  }\n\n  /**\n   *\n   * @param {Array} exp expected output\n   */\n  backpropagate(exp, updateWeights = false) {\n    if (exp.length != this.shape[this.shape.length - 1].l)\n      throw new Error(\n        `expected array length (${\n          exp.length\n        }) doesn't equal last layer length (${\n          this.shape[this.shape.length - 1].l\n        })`,\n      );\n\n    for (let i = this.shape.length - 1; i > 0; i--) {\n      if (this.shape[i].type == LayerType.FC) {\n        if (i == this.shape.length - 1) {\n          this.dlayers[i] = this.layers[i].map((v, j) =>\n            this.dErrorF(exp[j], v),\n          );\n        } else {\n          this.dlayers[i] = matrixDot(\n            [this.dlayers[i + 1]],\n            transpose(this.weights[i + 1]),\n          )[0];\n        }\n\n        if (this.shape[i].daf)\n          this.dlayers[i] = matrixMultiply(\n            this.dlayers[i],\n            deepMap(this.layers[i], v => this.shape[i].daf(v)),\n          );\n\n        if (updateWeights)\n          for (let y = 0; y < this.weights[i].length; y++)\n            for (let x = 0; x < this.weights[i][y].length; x++) {\n              this.weights[i][y][x] +=\n                this.layers[i - 1][y] * this.dlayers[i][x] * this.learningRate;\n            }\n\n        //TODO backpropagate for bias\n      } else if (this.shape[i].type == LayerType.FLATTEN) {\n        let darray;\n        if (i == this.shape.length - 1) {\n          darray = this.layers[i].map((v, j) => this.dErrorF(exp[j], v));\n          //TODO test if FLATTEN layer works as a last layer\n        } else {\n          darray = matrixDot(\n            [this.dlayers[i + 1]],\n            transpose(this.weights[i + 1]),\n          )[0];\n        }\n\n        if (this.shape[i + 1].daf)\n          darray = matrixMultiply(\n            darray,\n            deepMap(this.layers[i], v => this.shape[i + 1].daf(v)),\n          );\n\n        this.dlayers[i] = darray;\n\n        this.dlayers[i - 1] = new Array(this.shape[i].d)\n          .fill(0)\n          .map((_, i1) =>\n            new Array(this.shape[i].h)\n              .fill(0)\n              .map((_, j) =>\n                new Array(this.shape[i].w)\n                  .fill(0)\n                  .map(\n                    (_, k) =>\n                      darray[\n                        i1 * this.shape[i].h * this.shape[i].w +\n                          j * this.shape[i].h +\n                          k\n                      ],\n                  ),\n              ),\n          );\n      } else if (this.shape[i].type == LayerType.CONV) {\n        const temp = backPropagateCorrelation(\n          this.weights[i],\n          this.dlayers[i],\n          this.layers[i - 1],\n          this.shape[i].s,\n          this.shape[i].p,\n        );\n        const {dF, dI, dB} = temp;\n        this.dlayers[i - 1] = dI;\n        //console.log(dI.length, dI);\n\n        // pass the derivatives trough the derivative of the activation function\n        if (this.shape[i].daf)\n          this.dlayers[i - 1] = matrixMultiply(\n            this.dlayers[i - 1],\n            deepMap(this.layers[i - 1], v => this.shape[i].daf(v)),\n          );\n\n        //update weights\n        if (updateWeights)\n          this.weights[i] = update2Dmatrix(\n            this.weights[i],\n            dF,\n            this.learningRate,\n          );\n\n        //update biases\n        if (updateWeights)\n          this.biases[i] = this.biases[i].map(\n            (b, i) => b + dB[i] * this.learningRate,\n          );\n      } else if (this.shape[i].type == LayerType.POOL) {\n        let dIn = new Array(this.shape[i - 1].d)\n          .fill(0)\n          .map(() =>\n            new Array(this.shape[i - 1].h)\n              .fill(0)\n              .map(() => new Array(this.shape[i - 1].w).fill(0)),\n          );\n        let maxCoords = maxPool(\n          this.layers[i - 1],\n          this.shape[i].f,\n          this.shape[i].s,\n          true,\n        );\n\n        for (let z = 0; z < this.shape[i].d; z++) {\n          for (let y = 0; y < this.shape[i].h; y++) {\n            for (let x = 0; x < this.shape[i].w; x++) {\n              let coords = maxCoords[z][y][x];\n              dIn[z][coords.y][coords.x] = this.dlayers[i][z][y][x];\n            }\n          }\n        }\n\n        this.dlayers[i - 1] = dIn;\n\n        if (this.shape[i].daf)\n          this.dlayers[i - 1] = matrixMultiply(\n            this.dlayers[i - 1],\n            deepMap(this.layers[i - 1], v => this.shape[i].daf(v)),\n          );\n      }\n\n      deepMap(this.dlayers[i], x => {\n        if (isNaN(x)) throw new Error(`[${i}] output ${x} after derivation`);\n        return x;\n      });\n    }\n  }\n\n  updateWeights() {\n    for (let i = this.shape.length - 1; i > 0; i--) {\n      if (this.shape[i].type == LayerType.FC) {\n        for (let y = 0; y < this.weights[i].length; y++)\n          for (let x = 0; x < this.weights[i][y].length; x++) {\n            this.weights[i][y][x] +=\n              this.layers[i - 1][y] * this.dlayers[i][x] * this.learningRate;\n\n            this.dlayers[i][x] = 0;\n          }\n\n        //TODO update bias\n      } else if (this.shape[i].type == LayerType.CONV) {\n        const temp = backPropagateCorrelation(\n          this.weights[i],\n          this.dlayers[i],\n          this.layers[i - 1],\n          this.shape[i].s,\n          this.shape[i].p,\n        );\n        const {dF, dI, dB} = temp;\n        this.weights[i] = update2Dmatrix(\n          this.weights[i],\n          dF,\n          this.learningRate,\n        );\n\n        //update biases\n        this.biases[i] = this.biases[i].map(\n          (b, i) => b + dB[i] * this.learningRate,\n        );\n      }\n    }\n  }\n\n  static confirmShape(shape) {\n    if (shape[0].type != LayerType.INPUT)\n      throw new Error(\n        `the first layer isn't an input layer, instead is: ${shape[0].type}`,\n      );\n    for (let i = 1; i < shape.length; i++) {\n      if (shape[i].type == LayerType.CONV) {\n        if (\n          shape[i].w !=\n          (shape[i - 1].w - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\n        )\n          throw new Error(\n            `[${i}] CONV: outW doesn't equal to calculated outW expected: ${\n              (shape[i - 1].w - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\n            }, actual: ${shape[i].w}`,\n          );\n\n        if (\n          shape[i].h !=\n          (shape[i - 1].h - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\n        )\n          throw new Error(\n            `[${i}] CONV: outH doesn't equal to calculated outH expected: ${\n              (shape[i - 1].h - shape[i].f + 2 * shape[i].p) / shape[i].s + 1\n            }, actual: ${shape[i].h}`,\n          );\n\n        if (shape[i].d != shape[i].k)\n          throw new Error(\n            `[${i}] CONV: number of kernels doesn't equal outD kernels: ${shape[i].k}, outD: ${shape[i].d}`,\n          );\n      } else if (shape[i].type == LayerType.POOL) {\n        if (shape[i].w != (shape[i - 1].w - shape[i].f) / shape[i].s + 1)\n          throw new Error(\n            `[${i}] POOL: outW doesn't equal to calculated outW expected: ${\n              (shape[i - 1].w - shape[i].f) / shape[i].s + 1\n            }, actual: ${shape[i].w}`,\n          );\n\n        if (shape[i].h != (shape[i - 1].h - shape[i].f) / shape[i].s + 1)\n          throw new Error(\n            `[${i}] POOL: outH doesn't equal to calculated outH expected: ${\n              (shape[i - 1].h - shape[i].f) / shape[i].s + 1\n            }, actual: ${shape[i].h}`,\n          );\n\n        if (shape[i - 1].d != shape[i].d)\n          throw new Error(\n            `[${i}] POOL: outD doesn't equal inZ inZ: ${\n              shape[i - 1].d\n            }, outD: ${shape[i].d}`,\n          );\n      } else if (shape[i].type == LayerType.FC) {\n        if (\n          shape[i - 1].type != LayerType.FC &&\n          shape[i - 1].type != LayerType.FLATTEN\n        )\n          throw new Error(\n            `[${i}] FC: The previous layer should be type FC or FLATTEN`,\n          );\n      } else if (shape[i].type == LayerType.FLATTEN) {\n        if (\n          shape[i - 1].type == LayerType.FLATTEN ||\n          shape[i - 1].type == LayerType.FC\n        )\n          throw new Error(`[${i}] FLATTEN: The previous layer can't be flat`);\n      }\n    }\n\n    return true;\n  }\n}\n\nconst LayerType = {\n  CONV: 0,\n  POOL: 1,\n  FC: 2,\n  INPUT: 3,\n  FLATTEN: 4,\n};\n\nconst ActivationFunction = {\n  RELU: `RELU`,\n  SIGMOID: `SIGMOID`,\n  TANH: `TANH`,\n};\n\nconst Layer = {\n  /**\n   * The input layer of a network\n   * @param {Number} w width of the input\n   * @param {Number} h height of the input\n   * @param {Number} d depth of the input\n   */\n  INPUT: function (w, h, d) {\n    this.type = LayerType.INPUT;\n    this.w = w;\n    this.h = h;\n    this.d = d;\n  },\n  /**\n   * Convolution layer hyperparameters\n   * @param {Number} w width of the output\n   * @param {Number} h height of the output\n   * @param {Number} d depth of the output\n   * @param {Number} f filter size (x,y)\n   * @param {Number} k number of filters\n   * @param {Number} s stride\n   * @param {Number} p zero padding\n   * @param {function(Number):Number} afName activation function name\n   */\n  CONV: function (w, h, d, f, k, s, p, afName) {\n    this.type = LayerType.CONV;\n    this.w = w;\n    this.h = h;\n    this.d = d;\n    this.f = f;\n    this.k = k;\n    this.s = s;\n    this.p = p;\n    this.afName = afName;\n  },\n  /**\n   * Pooling layer hyperparameters\n   * @param {Number} w width of the output\n   * @param {Number} h height of the output\n   * @param {Number} d depth of the output\n   * @param {Number} f filter size\n   * @param {Number} s stride\n   * @param {function(Number):Number} afName activation function\n   */\n  POOL: function (w, h, d, f, s, afName) {\n    this.type = LayerType.POOL;\n    this.w = w;\n    this.h = h;\n    this.d = d;\n    this.f = f;\n    this.s = s;\n    this.afName = afName;\n  },\n  /**\n   * A fully connected layer\n   * @param {Number} l length of the layer\n   * @param {function(Number):Number} afName activation function name\n   */\n  FC: function (l, afName) {\n    this.type = LayerType.FC;\n    this.l = l;\n    this.afName = afName;\n  },\n  /**\n   * Convert a convolutional layerr to a fully connected layer\n   * @param {Number} w width of the input\n   * @param {Number} h height of the input\n   * @param {Number} d depth of the input\n   */\n  FLATTEN: function (w, h, d) {\n    this.type = LayerType.FLATTEN;\n    this.w = w;\n    this.h = h;\n    this.d = d;\n    this.l = w * h * d;\n  },\n};\n\nconst NetworkArchitectures = {\n  LeNet5: [\n    new Layer.INPUT(32, 32, 1),\n    new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\n    new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\n    new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\n    new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\n    new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\n    new Layer.FLATTEN(1, 1, 120),\n    //new Layer.FC(84, ActivationFunction.TANH),\n    new Layer.FC(10, ActivationFunction.TANH),\n  ],\n  LeNet5Color: [\n    new Layer.INPUT(32, 32, 3),\n    new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\n    new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\n    new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\n    new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\n    new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\n    new Layer.FLATTEN(1, 1, 120),\n    //new Layer.FC(84, ActivationFunction.TANH),\n    new Layer.FC(10, ActivationFunction.TANH),\n  ],\n  // CustomReducedLeNet5Color: [\n  //   new Layer.INPUT(32, 32, 3),\n  //   new Layer.CONV(28, 28, 6, 5, 6, 1, 0, ActivationFunction.TANH),\n  //   new Layer.POOL(14, 14, 6, 2, 2, ActivationFunction.TANH),\n  //   new Layer.CONV(10, 10, 16, 5, 16, 1, 0, ActivationFunction.TANH),\n  //   new Layer.POOL(5, 5, 16, 2, 2, ActivationFunction.TANH),\n  //   new Layer.CONV(1, 1, 120, 5, 120, 1, 0, ActivationFunction.TANH),\n  //   new Layer.FLATTEN(1, 1, 120),\n  //   new Layer.FC(10, ActivationFunction.TANH),\n  // ],\n};\n\nexport {CNN, ActivationFunction, Layer, NetworkArchitectures, LayerType};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// router\nimport { NavLink } from \"react-router-dom\";\n\nconst SidebarWrapper = styled.aside`\n  height: 100%;\n  width: ${(props) => props.sidebarwidth};\n  /*border-top-right-radius: 20px;*/\n  background: ${(props) =>\n    props.darkMode ? props.background : props.primarycolor};\n  flex-shrink: 0;\n`;\n\nconst SidebarInside = styled.div`\n  height: 100%;\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n`;\n\nconst SidebarItemLink = styled(NavLink).attrs({\n  activeClassName: `linkActive`,\n})`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  padding: 20px;\n  box-sizing: border-box;\n  text-decoration: none;\n  color: ${(props) => props.primarytextcolor};\n  border-radius: 8px;\n\n  &.linkActive {\n    font-weight: bold;\n    background: ${(props) => (props.darkMode ? props.primarycolor : `none`)};\n  }\n`;\n\nconst SidebarItemIcon = styled.img`\n  height: 1em;\n  width: 1em;\n`;\n\nconst CustomRightIcon = styled.div`\n  position: absolute;\n  right: 0;\n  transform: translateX(-100%);\n`;\n\nconst Sidebar = ({ colors, screens, structure }) => {\n  return (\n    <SidebarWrapper {...colors} {...structure}>\n      <SidebarInside>\n        {screens.map((screen) => {\n          const ScreenIcon = screen.icon;\n          if (screen.fullName)\n            return (\n              <>\n                <SidebarItemLink\n                  to={screen.path}\n                  {...colors}\n                  exact={screen.exactLink}\n                >\n                  <div style={{ paddingRight: `0.5em` }}>\n                    <ScreenIcon\n                      style={{\n                        height: `1.5em`,\n                        width: `1.5em`,\n                      }}\n                    />\n                  </div>\n                  {screen.fullName}\n                  {screen.customRightIcon && (\n                    <CustomRightIcon>{screen.customRightIcon}</CustomRightIcon>\n                  )}\n                </SidebarItemLink>\n              </>\n            );\n        })}\n      </SidebarInside>\n    </SidebarWrapper>\n  );\n};\n\nexport default connect((state) => state)(Sidebar);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// resources\nimport logo from \"../res/cnnjs-logo.svg\";\n\nconst Logo = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: center;\n`;\n\nconst LogoImg = styled.img`\n  height: 2em;\n  width: 2em;\n`;\n\nconst LogoText = styled.h2`\n  margin: 0;\n  color: ${props => props.textcolor};\n`;\n\nexport default ({ textcolor }) => (\n  <Logo>\n    <LogoImg src={logo} alt=\"logo\" />\n    <LogoText textcolor={textcolor}>CNNjs</LogoText>\n  </Logo>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// components\nimport Logo from \"./Logo\";\n\nconst TopBarStyled = styled.div`\n  height: ${(props) => props.topbarheight};\n  width: 100%;\n  flex-grow: 0;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: row;\n  box-shadow: ${(props) =>\n    props.darkMode\n      ? ``\n      : `0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2)`};\n  background: ${(props) => props.topbarbackground};\n`;\n\nconst AboveSidebar = styled.div`\n  width: ${(props) => props.sidebarwidth};\n  height: 100%;\n  padding-left: 30px;\n  box-sizing: border-box;\n  flex-grow: 0;\n`;\n\nconst AboveScreens = styled.div`\n  flex-grow: 1;\n  height: 100%;\n`;\n\nconst TopBar = ({ structure, colors }) => (\n  <TopBarStyled {...structure} {...colors}>\n    <AboveSidebar {...structure}>\n      <Logo />\n    </AboveSidebar>\n    <AboveScreens>{/*< />*/}</AboveScreens>\n  </TopBarStyled>\n);\n\nexport default connect((state) => state)(TopBar);\n","import React from \"react\";\nimport GridLoader from \"react-spinners/GridLoader\";\nimport { connect } from \"react-redux\";\n\nexport default connect((state) => state)((props) => {\n  const items = Object.keys(props.training)\n    .map((i) => {\n      return (\n        i !== \"trained\" &&\n        Object.keys(props.training[i]).map((j) => props.training[i][j])\n      );\n    })\n    .flat(1)\n    .filter((i) => !!i);\n  return items.length > 0 ? (\n    <GridLoader size={5} color={`white`} />\n  ) : (\n    <div></div>\n  );\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport gears from \"../res/gears.svg\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LoadingImage = styled.img`\n  width: 30%;\n  padding: 2em;\n`;\n\nexport default () => (\n  <Wrapper>\n    <LoadingImage src={gears} alt=\"spinning gears\" />\n    <div>This component is still under construction</div>\n  </Wrapper>\n);\n","const object =\n  \"\\u0006;+2Dbw}|£¨\\u0010\\u0000\\u00123Xx~tjeiqmpwmi}z|y{wz\\u0019\\u00101Snyqppji|zsx~vxm!&Wjsuriky}mqvuz|}y^2;f|yxrk}jl|ylbnuxywgWKCGTnwlz{ikolb^aSXfaXvxkXC# ao{zy|xkPDJeiA:?Nzl_`YBswlH3)HµÑ}D@R{prie~fw{yJ62,VËÙ¢dMKJLkw}{}~Z?>FOgye`VKeyPaZb¯flugxo£©¡±¡ÃÑ½}lyTXmeÕ²¿Ó½ÍÏÕ¿Ç¼¡|ZHQTk¥å·¿ïÛäáÖØÒÈ½®¡~PYi`À¹ËßòôîñãáëÛà×?BXq¶Ü¢ÎÄ÷ÿÿõìæ×çúñ}~|}~|@Tp£ßÎÄÌÜóõïêçÃÐúã£yrdlÒø¯¯ÜâæéàÉ¸µ¾ª³çß¢ur{~z]³îøª¹ñæ»´¦¸ØÔìì¦«íüå­©ÜÂ{¥ÊððÞwxpdcÛôÒÁ¦¿³¬­Ê¾Ædmwyl}{¦¼¶«¥Ã¾ooy³¯­½ÍÉ¨{|qlqÇ ©§³ÔËÏk[Tiv`f¾¢¯¾¦ÊàÅÀ´~sMO]~wq»¬£¦¸¦¸¨y½ÓÊ»z¦¡«×ºuØÁ¨~x~ËÎ|GÜÉº¬~~|~rº­8!ÐÉÆ¿·«xZ2 85´­ºÂÆÉ½­upzh:\\\"¸aS±¨³¼ÊÚÚÏ¿¯¦££¡¢¡pwx\\\\gªØ{>.06I[knuxgcspiajjaqpiilx}|\\u0014\\u0000\\b\\u001b3RYVWOFCFJFHOGEY\\\\UYROY[^`XSW\\u0018\\u0007\\u001b2H\\\\]RMNOKI\\\\W\\\\YUOU_`fZYY\\\\i^TTI\\u0019\\u00146?FJH>DTZKMi[TLLWQ\\\\cc]V[Z]ZWU>  AOMMNJHXYDGSNDAJPP]j_b\\\\TOOC9/*05IRXTTMFRQAHMJA>?8:DE6J`aPD6'\\n\\rEKUTXSJJS^OOG2+)38%$%3]DVjWD;?=/RLZaXQZYVY[F'\\u001a\\u0016\\u001ffL(&5M8Qg_LEB\\\\JdR[WQRUUPa^*\\u0019\\u001d\\u001d'jmZ:*+'#C`a[YSV_xprdYVV[aa<#!'25F@OK:60&?[\\\\]]]V\\\\zuulddffoW(5-8[TWIRU\\\\c=CZW[a_V]rmma\\\\^TJgS<VNtsdtayn§N?`_]_ZW\\\\sjiinY8=P9O{©¤¢¤ySMW[]][Y[wkf\\\\;,4/7j°ØÀ¼¼±®«©¢v_`Z\\\\bYasmli_/9D3Qe¢ÈããÜÛÅ¿ÑÎÐÀvY__aY\\\\tddd`*+2A¿^i¦êýüêÙÐÄÙñå_a\\\\[XXs_acW(;EyÌ¶Z¼âíéàÙµÁñØ{t_RoXcgY@Ihµów°ÅÏÚÔº£«§ÚÎtst{wfrKPZ[S:âóÖÚ© wt|ÃÆÝÔ}UQSViiRZ\\\\Y_ã÷Õy¶©Yb[rc~·äáÄuLKBAJyhPVUVfÄèÇ­hVfjl^q·«¯|HQX\\\\RwhLUQQuv¦sl_inffeenjoqdovtt¢fPYWZo[a laejnlhihf`g~z¸gWY`mjhhy{®¨±p`f^komeL<=cyq®kPXchmpu|¨Å¯¥jRapmJ+2Iutcy¥XUXZ^luxvny{m[UXTS\\\\ilpi\\\\fµkdOLXbjjcWRmycXWljZ_nqkpi]Z·V®zoXR^d_\\\\NWce^SR^lh_[gilmek§­]0¶xgdlibX\\\\feYRQXdheNUekpeW\\u001d\\u0013ª¡yk_W]b_c[YZfjgn^LTfgE\\u0018i\\u001f\\\"{¤vcaa\\\\][[_cb`]TPHQC\\u001f\\u0005^>5¨½¿µ£{rx|thgi_Z[`WCN¸v\\\\?-+*4?KPY]ML[VOGOL@NKEJMYdlfhlfg\\u0014\\u0000\\u0000\\b\\u0015+-,2,%#$#!%,!\\u001b..'/)%05:<729\\u0015\\u0000\\b\\u0017)67/+,.-&0/883+/67>3125D:22*\\u0011\\u0004\\u0019\\u001c!#%!!-5(&:/-()4+3:94,213220#\\u0015\\u000b\\\"'$$('\\\"13\\u001f!*'\\u001d\\u0017%1)2B:B3-)( \\u001b\\u0017\\u0019\\u001d\\u0018%&-*+%!,'\\u0019\\u001f\\u001f\\\"\\u001b\\u0015 &$*.$HO@-\\\"\\u0018\\u000f\\u0000\\u0004($+&,(\\u001e\\u001f.6\\\"'\\\"\\u000e\\u0011\\u0011\\u0015\\u0017\\u0010\\u0013\\u0012\\u001fSPOE1$\\u001d%&\\u001e1!/50(/.0..'\\u0013\\n\\u000e\\u0011EQ/\\u0017\\u0011\\u001e>7<=6'\\\"!;.D)30,+,,(65\\u0014\\u0010\\u0010\\u0012\\u000f8>G1\\u001b\\u0018\\u0018\\u0016$;:10+-8YMRA5204<D\\u001e\\t\\u0010\\u0014\\u001e\\u001a!%=9)!\\u0018\\u0015 55244-7^RRF@BDBQD\\r\\u0011\\u0011\\u001e916%.9Lj5\\u001a\\u0019)-397.9YIE79A7*F7\\u000e\\u0016\\u0017ME4I9RGq{^(\\u00194;893.8VED@JA\\\"!,\\u0017\\u0013;)bzcnsv[aXL2&3=<9408bRJA;$\\u0016\\u0018\\u0013\\u00192\\\\9g°xppnmrdL9B;8<0=OBDA>\\u0015 (\\u001a-qk3yªÄº¥£¤µN9><<28O6736\\u0015\\u001f\\\"%n©G?pÔèÛÅ´ª ÅåÃN1:41.6O1331\\u0015)%K¦8TnÐâ×ÉÀdØ­N<>7.\\u001e(L/=B<&+BÔsI¤³ÄÃ¦iiµ¡G+\\\"!&#)P%0980 ÔåhX±ÃsUOSnÅ°?\\u0010\\r\\r\\u0010\\u001b6H)3513nÍëÂdI7<0?J2OËÒ©@\\f\\u0010\\u000e\\u000f\\u00136B&1.-;¡Òº\\\\7`i/:;N6-Cp V\\u001a\\\"+2$2@ 0+'LUvcEcnB18:367<JADG%\\u001f#'-SA#.,2G4=hkvxqYA549==;;;<0'\\u001e\\u000e\\b\\n,fH,*4H@:9QWiJ78/=A?7&\\\"\\u0017\\u0019\\\"\\u0014\\u0004\\t?cJ%0;?>CN`kT¨k@(4B=\\u001d\\u000e\\u0019!/'\\u001f\\u0018*[KL\\u0012#0-1DSRdXKnVW\\\\G3++%$4B>4'',Wr:R\\u001a\\u0019\\\")158:?;,<M;34FA02?A?C6,.Fj[0W\\u0010\\u0013#\\\"#1553\\\")49603<E?5.9;>?69fi1\\u001a[\\u0016\\u0018\\u001c\\u001a\\u001e3KI9&/><3134<A<$)7=D;.bW\\t\\t`\\\"\\u001a\\u001b\\\" *41.9>79346:<=@.!':>(\\u000b<F\\u0007\\u0014`*\\u001e\\u0019\\\"$  &&184435:<<8+!&\\u001d'\\u001e\\u000b\\u00009^\\\"\\\"t^WCDLHFORV\\\\^\\\\TZ][SME7;:A;.9hTH\\t~if}¬´ojm{µÙÑ¦¤tf_ZH<8M^[WO}|®²n£ÀÚðõñîêâ`c_YPAT\\\\`MGsª²«ÀÛêåïôöèáëó±eeXg^ASZODCzµËÐÐË³©¤}²ðçÓÃÉ·y[^[MEaXL@Gº×Ê¤w^ll ñìëÓÃ}fbXPZ^EGDWx]bg`Vwa.uËäéìí¥~|\\\\XNWbLCQ[|XUWTKNE5(6AUu¯Õèï´sSJGVVZSMQ¢n?I:./\\u001f\\u000f\\u0013'?\\\\yXxÇëÑÀlecaIO^SJF%\\\"/UhI^}sx:Cl±¼éÐ·©qYTA8XQ?GJHQz¡]bhw6%KÀâèÇmÀhEKPXC81bi{rl_e}evB#M¾âèÓÂË®`Hfc]O;gYp{ylku}gtN)P½àéÕ¥¾¸Á¯{og\\\\_ThQYvqridhq}|H*Y¿Þæ×¿¿³¸¹fPVScGXicY^k£ jAY¼ÜãØ¡¼ËÅµ´Â¢VASgVu©¬¡¢ÉæèÜ´Îàá×©¥¾ÐÃÈ¼·½¦V´µÛóöéâãïûþí«ÃãÞßÜÖ¬¤¼ÒÄÈµ¹º»Åðçòðòøûúüú÷ûæÎ×ÚÙÙØÔ©¢¶ÏÆÊ¨ÄºÎüûûùúüúøøùóùåÚÖ××ÖØÔ¦¡¶ÐÍÒ³¯Ë¦ÛûñðéÞØÑÍÈÃ¹¯«¸ÅÕÝÚÚÖ³ ®ÎÎÐÁ§¦ÊµwkmfOL^ovkE7TWe¢ÃÕÀ±±ÉÌÑØÉÄÍÇFVU$CW40ViXrL8HÖÆÍÇÊÊÌÓÐÒÐÌ¢0\\\\^=7|çñæäàØÂ£­¾ ~´ÓÎÕÓÔÒÒ¢|n/WK>?w~g~¥µolHb¥®½ÂÌ:\\u001d\\u001f))%%28h\\\\IC)\\b<ªKG90&%058Ea°®_9=@BAGGa¨µ§U#;!\\u000b\\u0010U;JOYG4 \\u0018\\u0013, ¤¦¤§¢3\\t/!\\f\\n;ZX`jc7@1\\u0019'\\\"Y§f|}}¶yI=@%%\\r'TUT`[>G+\\u0019>8X®,+94,0O­Ù¦aO`KR}%+OIHTW^H+\\\"g_|¤sqtrqt| b(\\u00157lw.-EGEKOvVU\\u001fMD^¯¡ §¥£¤=(<QdA;>3,'+f7 \\u0017*=]¥^fl¶³}SX?+K:-#\\u0015\\u000e\\u000b\\u000e;16Qg{££+\\u0013\\u0014Jwnc=\\u001b\\u0012\\u0011\\u0019\\u001d\\u0010\\u0005\\u0006\\n\\u00193DZt±he¦¾Çxkhy¼âÓ§¥ ue_YF<9N`_ZQ }¡¤¼½oÀÛñöòïëãae`YQCV_cPIs¸½°ÃÚéíõôòçâëó±fgYg_CV]RFEyÁÞãßÛÂ¸º¶ìæÔÃÈ·{^a^PHd[NBIºÜØ¼²¢z4ïëìÓÂkh\\\\R]aIIFY¬ svxtlw;zÎçìððª}fWLVcMES]mingZ\\\\UH=PY^v²Ùìô¸yv\\\\GDUUZUOS¬}MRG97*!(?]}VwËðÑ±naa`HO`ULZ4'6[oZr¨7Fp´¿íËy ¤nWR?7[TBKb]W§ow¤}40RÂåí»Bp·hDIO[F;.zsqp{ zC7XÁåëÃ\\\\s·È¬_Fef`R:yqz |VBaÇæèÆg°­·©zqj]_X{iu}y®Q@jÊååËjt®¯¢¬³fOTYv\\\\r}op{§¾²pNeÆãåÐ|y©¸°£§¹Q=Utd§¯°¢£Ìëðà·¨×çæÓ¨º°·­©²S¸·ÜñðãÞàë÷ýî¬ÂèæçäÖ£¾¸¼¨«¬²¼íäóóô÷ûýýûöøçÐÖÝßàáÕ}¼¼¼t°­Çõ÷ûúûüûø÷ùöùèàÝÛÛÛÝÒ}º¸µ]µÖøñðéÝØÑÍÈÃ¹®¬¾ÍÚàÞßÒ{¸¸²{³§|mleNLauxfA5V[h¦ÈÏ¦µ¹¹º¨§¹¹Gc`&BU20^w\\\\tO<KÊ¥£¦·¸¸½¸º½½ ¶©3Z\\\\:8£ÛèáâáÝÇ¦°®zrZ À½ÅÂÀÁÂ¦2TH;?m{¨ ´iD>&Ox¡¬´¾?'\\\"&'#$49j]JB*\\n;¦1\\\"\\u001b\\u001b\\u001b\\u001c &-8Wªª_?ABECKPj±»¢T&A)\\u0013\\u0015Q7GMYA&\\u0012\\u000f\\r(¥¨ª©©£y0\\u0010<0\\u0019\\u0015Adcejb33%\\u0014(#[h~~vt¦mGCK32\\u0018.[ZSWU<= \\u0016C<Z¤.)3.%%E¬Ê\\\\PcNZ+.PJFNU]@\\\"!lb{wqlilp{d,\\u00178r~1,GJGLRyQN\\u001bMBX§ £­¥¢£C-BYmE<@5+$,l8\\u001a\\u000e\\\"5S¡X\\\\k±¯Y]E3S>/%\\u0016\\f\\u0006\\r@10H]ry \\t\\u000eD}ne]?\\u001f\\u0015\\u0014\\\"%\\u0014\\u0006\\u0006\\t\\u0016-@Zq»_c´ÒÖnbfu½åÓ¢gSLOE=6HTGGF©v­¯ÈÄfx»×îõïëåÜUTWVM<LPN>=¤p¢¾À¯½ÙîëòòñãÞèò²a\\\\RcV6FK@77y§ÆàæáÙÆÄ¾¹îâÏÄÌÀ|W\\\\XB7PF@5;¾ãßÃ¹©<õééÕÈedTBIJ2<9J¥¤µ­¡}{BÔèìíí«uzfR@FM79GQ¬¨x|wlj\\\\NBTai}µÛêî²fh_E8E@EHCGÀjcR<:.&+Ac\\\\w¢ËíÇyp]SO5<RG>fC8C\\\\t¬Â·>IwºÂíÁ^`EA/(LE3Elpn¯²©¼É°=8\\\\Ëëï·.\\\\¤R2;BI4)1¥¥³¦µÀ§QFgÊêïÅK[£L;\\\\TM?C±¦¡¢«¹¡kYxÍàëÉQasmXKOd³¬«¢²Ç©g[ÍÜèÌST¡U@Hgw¡¬½Ð¸¥hwÇÝæÏdZC4aw±º¼¬§Ïìïß¾¨°ÕãæÏn`EÃ¨ºÝóôäÚÛæôýé©ÇçâåâÐr_~z¼òæôôõúüüüúöøàÇÒØÜàßÏs^xtW{Çùöùùúûúø÷ùôöâÙ×ÛÝÝÞÐx]rwNqzÙþóïéÞØÓÑÌÆ¼¯­¼ÌàæàÜÌWf~efqqkTSi|pG;Z_r¨ÃÄeiV}q0L_<9czcxUAMÄ´ÙÁBikJAàéááß×Å«¹±bZDx¶­AcXKF{j{¢£Áp4/\\u00187\\\\fu}S7.340.9@r¤eRP0\\u0007:¬7!\\u001a\\u0017\\u001a\\u001e\\u0019\\u001c#(H ·tQOPRQ\\\\dÆÐµ^/O2\\u0011\\u0012`HY_hI%\\u000e\\r\\u000e,¡¥®³¶¸º¸»¸®¥ ;\\u0017I:\\u001b\\u0014Jw{y=3!\\u001553k¬¦{ ~¥SKYA9\\u001d;lkfmjH>\\u001e\\u001aUOkª8095,.K¨ÂlZk_m6Ad\\\\YbijC!%{o yusv|t8#J=<\\\\`\\\\`eWN\\u001dTI^¦ ª£¥«´º® ª¬Q;QfwNCME9/9z@\\u001d\\u000e$9[_hx³³_cK=^G4,\\u001e\\u0012\\t\\u0014M:4I`xxz} \\f\\u0013Fzkc[>\\u001e\\u0014\\u0015*0\\u001c\\u000b\\u000b\\f\\u0016*Cez\\tÿýýýýýýýýýýýýýýþõâôñúýüúýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿîÐÅ¶ñÿÿýÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýÿÖ¢¢èÿýüþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿýú¼°º¤Õÿýûÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþÿè¢­íýûþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþÍ{^rÀôþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþþÿÿþüÈnBGoÖüüþÿÿþÿÿÿÿÿÿÿþþþþýüýþÿÿüæx44Cx«éúýÿþüþþþÿÿÿÿÿÿþþûöüþÿþü÷´K+1T¼óüüýýúúûÿÿÿÿÿþÿûÖÍõüþþúõî2.6[ÑùïôúèáÞÿýþýüýþÞ{µöýûøñúâr.(3lÕ×ÌÑ¸©¡ÿýþìÝÞÆVHtàöùêÚúüÒU\\u001e!Gvu²¡ÿûûÝ m\\\\XP^£ÃÊ¯ªÑÅÊ~%\\u001f+QmnÔØÓÂcrnlC^mpicbgT#!+Zkn^LQMCè¾]x|49JUaixE\\u0019\\u001e<_cQHN2$xiñ¤>ibyp4]w¡¦¬3\\u001c(F\\\\Ucn3\\u001em_âNfc`G5³±oPcp·\\\"\\u001f,F?Ic92gUqIJO:?:;xqE:@P[M^XW`3\\u001f\\\"+*4LILvbcg24>@?<XygH8MD:=>6&(\\u001d\\u001e!\\u001e5X[Yzt`OPC;<CCWnT9,//3<5 \\u001d'\\u001e !\\u001e*J[YyzemiC>@:36C3S;+7/7-\\u0017\\u0019/&#&#(4FJpitzgC.@B/,(.*>0*A18)\\u001d\\u001c'$\\u001d$)5>AHpipiN*\\u001e.1%$\\u001b\\u001a #\\u001f ,,0.+(''&(.6=BJtkdR<&\\u001d&' \\\"&),+*-02420.+*,./6;>FhZOD=4--.058=@=<<;>>;761.154>EDMTOG>BB9;==<8?IJJGGHII?<:9:;:>ELTOOKELLCFDA>;BKQPMLLJLOJC@A@<:>EIbda\\\\YQMNLFDDGILMMMKFDGC>9;<;=@BCpnngYUTQNKGEEGJJJHFEB>977865?FHLqoi_TVYSKDEFHJHGHFEBA@>>=<97?HHHohcYNHFGJLNKJHIIKNNFBDGF?56>BDFNjc_YRNORTSNOLKNPQPOLH@@EB74:DNOPÿýýýýýýýýýýýýýüýòàòìöüýýýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿèÄ·©ëÿÿÿÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýþËÝýýþþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿþ÷®Äúüýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþÿå|xäüüþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþÉpLYmw°ðþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþþýþþþþüÅf55Vl{Èýþýüþÿþþþÿÿÿÿÿÿþýüüýþþþüås*+9Zdãÿúùüþýýýÿÿÿÿþþýûúöüþþþýö±C\\\"'<\\\\g¤ñûûýþýýýÿþÿÿýýýúÖÍöýþþüöì(\\u001f'FXgÀûûûüòìèÿýýüùûüß~¹øÿþüóùßi \\\"+GPxÓêÚØÊ½µÿýþìÛÞÉaOyæûþïßûûÎN\\u001f +CL¼°¦§¢ ÿûüÞ¡ynlZf¬ÌÓ·±ÕÈÌ*\\u001d\\u001b1@M¢ÖÚÔÄnyMhvztmjlZ\\u001e\\u001b\\u001e.<Pega\\\\R æÃh²BCJYju¡­F\\u001a\\u0019\\u001e38?LU8*jï©GsnqDg|w¦«±5\\u0019\\u0017$29Yp5 qbâVh`V<>º®rDSd~y~µ\\\"\\u0015\\u0014(,Eh>6j[tMLH)'%=|nI-/BL=MJQ_6\\u001d\\u0016\\u001b\\\"6SQT|lhb,,0+##VriF4IA3+./%+ \\u001c\\u001c\\u001e<bedvP8:1-,-?R_N=25560*\\u001a\\u001c)\\\"$$#1TgeyKFH1;A*/,*#U@/;15)\\u0015\\u0017/**.*/?QWzscD&!CK(* \\u0019\\u001a=1*B2<- \\u001d(*&/2<ILS{stfE\\\"\\u001b05&&\\u001c\\u0018\\u001e(%%12963/.225:BGLT|rjX?'\\u001e')%'+.24369;=;9757:<=CEHPoaUJ@70026<?DHFEEDFGD@?;;?CBKPNW\\\\VMDHH?BDFEBHRTSQQRRRHEDFHIHKOV^WUQKTULONMJGNW[ZWVVSUXSMNONJGHOSjjgcd\\\\XYWTRRUVWWWWUOLPLHFIJIJJLMxutndaa^[YWTTVVTTSPOKGBBDFDDLPQUxvpg_bd^WSUVWYUTTSQNLKJJKJGFKQPPvojaXSRRUZ^ZYWWWY\\\\\\\\TPRUTMCDLNKLTqjf`\\\\ZZ]_a]^[Y\\\\^_^\\\\ZVNNSPEBHPUUVÿýýýýýýýýýýýýýýþôàñéóúüýýýýýýýýýÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿå¾¯¤çûþÿÿÿÿÿÿÿÿÿÿþþþþþþþþþþþþþýüÄvØùüþþþþþþþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿüò¥½öüþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþûßtzlàûýþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿýøÃkIU`m«ðÿÿÿÿÿÿÿÿÿÿýþþÿÿÿÿþüýÿÿþô¾c77MbuÄúþÿÿÿÿýýýÿüýýÿÿÿþýøúþÿþõÞq.07T\\\\Ûýýþÿþýýýÿþþþÿÿþýúòøýÿþøò±I*-<V` ðüýþþüüýÿÿÿÿþýýùÔÉòûþþûöî2,,CXlÂøôö÷èáÞÿþþýùùúÛy³õüûûôûâp+'+LZ|ÎÞÏÌ°¡ÿûýêØÙÃYIsßó÷íÝùøÌM\\u001f\\\"4OP|®¡|{øõõÖ~na_T_¢¿Æ±«Í½½o !&;CJ~{ÉÎÈ¸cvwsF]fih`XXnsH!$$/<KSQYUKÞ¿c£<68CXVYgz9\\u0017\\u0018\\u001c484=Q8-m\\\\é©Elbvr=Xgufhsizz+\\u0015\\u0016&43Oi1 ^SÚSd[R>6ªX=CDbcd{¦~!\\u0019\\u001a,*<]60UHeHIG**'6mY2.+3@5>>I\\\\7$ $%1GEIdUWW'+00*(Q~dYH5E=2'*-&/*'%#:XZWsodG6<4025?O\\\\I?57881+\\u001d /,-+&1O_[upfDHK3<D5524*XE6B79-\\u001b\\u001e7201*/?OPhbe^H,$EN34+('D:5L:A2&$10*01=KNQmhneK*\\\"6;12'$*0./;;>;854657=CIMUrlgWD.%.0.158<<;>ABB@><9:=?@EFIQf[RJD<557=DGKOMLKKMLIED@?BFEMQNXSPJDIJACFIJFMVXWUUVWWMJHIKLKNQW_MOOJSSJMMNKIPX]\\\\YXXXZ]XRQRQMIIPT`edbaXTVTRQQTUVWWWVSRUQMILMLLKMNnoql`[[XVVTQQSTSSRPRPLGFGIGFNQRVpojaZ]_YROPRSUTSSRQPNMLLLKHGLPOOnhbYSOMNQVYUTSVWY\\\\\\\\TPRUTMCDLNIKRib^XWVVY[\\\\XYVU[^_^\\\\ZVNNSPEBHOSST\\u0004\\u001c%&*,((\\u0018 +\\u001e )4C2,+&&)/>W<1?;0LQU!\\\" '#&&(60\\u001c(8BO/*2@/7QTm\\\\;EOG_`U'(9.,()BZ90HJL]BAPZCX`SikVY]V]k_6>T>F7NUcT_Z`g]_^d^W\\\\Y``SL_haec[JHNU_MgbP]c]eiTTVWPWP[]JQMYRTNHTLDEJNQYZOBQ[WVZUQRNUW[SPW[bJ;GH^MJIFCT^bRHKKQW[RZU_gh[NO__[GAUPPOLUMSQ^z^R]Ve[[f_]dogb]NZ]SGJYM843>JKWyacsySc_W\\\\_geeVJTioJ]^[K-\\u001b%7<SqmaflY_ohpqmuhoMJ`aeSjXPXC)66?\\\\pc[h}Rmkfzttx]Y\\\\P]d`nlGE`OR[]EX{`^ihMm_]pdrr\\\\\\\\jeivywVHKS[fkzfUPLSpnUE__\\\\`[^hnohd`hd]SQQWwt~;9IXoeEK[futrh^be^\\\\YTRv{8:KX¢½ÕÑÃrlsqotcbSOXdn~}zB<ah±¸¤ª³µ¶ÐãÓ¤~qtamNV^~r_5fÆÉ½ÃÍÐµ­¾ÏØ®~|otPO]yt\\\\(\\\\¢ÏÛØÓÐÓÉ³¥¯~zxhoy~yjKl¼ÛéáÞÐÛØ±ase`tgw~zty{ÁßæáåÜâá¶^SaZ`|najyupz}mt²ÚÞãêÛâÛÀF?LR]hgghqMglhzmibk´ºØåÓØÔÇ6\\u00101CVwquhWUV[]0RNko_[^aatrq¿ÆG\\u0019\\u001e/Hi^TVNOMEY,?M]`]PRQ^xDOHHN­T1\\u001e02d[MC?<I?N=MUKTOIMSXb<VkfXvV=2@4DgUGC5ZRK0;UQJUPQXYXBbfb`t{R91V:bV;9AfON:8NROXUW\\\\\\\\UCl_hSd^P<`PUO=IVX;:BDELUY[[jbVGcbcMKvqgfeQbbVdbXNMHHRORXVUT]TWO]XNS`vljpo^iyaeZOVWWSWT\\\\PSYbhf]nfmrqlruzzurx|hgdccZQXZ]^RQ_^`hlpnl|wikut|sotkmj`PLRa^]a`^`ON]ikbcjwhhjzkp\\\\P`MUTC6?H\\u0019\\\"#%'%&\\u0017\\u0019\\u001b\\u0014\\u001e%0?.##\\u001d\\u001e\\\"'2G0*83(CHL\\u001c\\u001e\\u001b!\\u001d!\\\"$/\\\"\\u0012#/9E%\\\"*8'0II_P3=H>RRH !2)&\\\"!<Q-&@<=N47FQ:QWI^`LPUKLYM.7M:A0DKZJUOOULNSZTMSPWWHAU`VPNFB@ERZDYTFTZOSWBCKMGNEQTBGBOII;5@B9:GJGIIC;GKHGJFEGCJKPKINOV?/78NB?>D?HKMCB@9EKPFMGQYZNEJVQL93IDCD@JKODIbOKQD]SS]QNV`WTTIQND7;OD//.9HEGblQU_ikEURGJHOPUI@FV\\\\7LRO?+\\u0019$44@XXRQRlGM^W`]SWO\\\\><OMQ?WJCK=#004IWNJRya@\\\\[Wlb\\\\^EELBMRN]]<:UDFPS6EcKKRjK;\\\\ONbT^^FHYVZgigI@CKJTZjTA:8>VO73MNLRLMWYZVTRZVOGJJPb`pqhi(&3=NF07HSdo~]^WNSVOOPKIafshkp&(3;mipl¦À¿¬m]Zb`]bSUGBDOY``d3*HJyµÎ»ujpqlp[cQ\\\\;DK`^\\\\P$Ld¤¥¢¬¯ ·¿kmuupdh[_><HZb]J\\u0013@«µ¶²¯²¤tfftu|yhimaRW^he`R.J²ÀÂÀ±½¼yP^OJs|rzxnjp^T`dob[_^c¶¾ÂÆ½ÄÂQFMFIu}tqgjdcWOUb_[dfSX³·ÂÈºÁ¸98;?GkouiTTST[>TWUhZVMRmµÁ¯´®(\\r\\\"/A`\\\\bYKJJKJ$C=Z^NJLNIoRdsNN8\\u001a\\u0012\\u001c4TMGMFIG;H#4>NRNACAJ]%.&&.t~C2\\u0013 \\u001fPKC<:8F9B6DI@IC=BHGK!;PK>XmB<)2\\\"1WJ@>3XNE,4KIBLGJPLC*NRON\\\\adL1&F)SJ22<bMO73FKGOLQVPA.]PXCR[kTF0P?EB3BPS9;@A@DKOQTeWE5WSQ:;VRSSUBNPL[ZPHHDCMJJNLKNXIE=RI:>P\\\\LRY^PTfX]PFPQPIMJRFIP[bZK[[]^\\\\\\\\YXbcdecj_^ZZ]TKHJMRHGUWY[X\\\\b\\\\ibYU[h^ke\\\\bad`WJFLNKKUVTVGENTVUSWbXUUcU`Q>NCLK9/8A\\n\\u0013\\u0014\\u0017\\u0019\\u0016\\u0017\\t\\u000f\\u0013\\n\\u0011\\u0017\\\"2 \\u0019\\u0019\\u0014\\u0014\\u0017\\u0019!2\\u001b\\u0018)(\\u0019'+/\\r\\u000e\\f\\u0012\\u000e\\u0011\\u0012\\u0013\\u001e\\u0013\\u0004\\u0013 *7\\u0019\\u0012\\u0019(\\u0017\\u001f54F: *4(78-\\u000f\\u0011!\\u0017\\u0015\\u0011\\u0011(;\\u0018\\u0013+-.?&\\\"1;$8=.AI998/4B6\\u001c$:'.\\u001e36@0;7=D;<:@:362880-:=5;91/-2=F1H>*7=5>C--01*1&05$/-3'(% +-%&03363'\\u001e+1/.1,)+'.+0..67=#\\u0014##:,)(+'278*&% )/4*2-7?<0+2>96% 510.+426/6N718,>44?97>H<9<5;50(-;/\\u001a\\u001f\\u001e)437HO77@LK$2.*237:<//4>F$9;8'\\u001d\\u000b\\u0016#'2:6620L*.;2@E>>;D\\\"+?59'?3+3*\\u0011\\u001d\\u001d%8:026ZC)C>7KIFC/,0/::6DE'%@-/9=$1G289M/)H72@8E>+-=ADLOM0-080;@R=*!#/@2\\u001b#;92//25:<:<8=92-88>FCTWNP\\u0011\\u0014$'/'\\u001e#17@Raf]>B<25704=86DHVLMQ\\u0013\\u0019$\\\"H]QVabG¢LA;A@=C6>0,(3=C>C \\u001c5,cifkpqU|¨hZJNRMP=I7B!)0B:9=\\u00166Atrrv~mnpgHIWXRGJ=B&#/;<:4\\u0006(Yu}zqqUsbMANU][JJMA>@FGA@6\\u001d1ixnd>MA5NSNXWOLQ=@JLN@=DJIo~p=8B<:UVPOGMHD6<@J?:GM>=f}}t$,39<RLRI69:7:,?@7I?=77Edfz~tv\\u0015\\u0005\\u001e-;M=A9.040)\\u0012/&>B5471#H/@P,+dr\\\"\\u0010\\u000e\\u001c0E2)0,22!*\\u0011 (488..%&>\\u0010\\u001a\\u0015\\u0013\\u0016EY'$\\f\\u001d\\u001bC3(#$#/ (%04'1.+-+&1\\u0012*>:*0J#)\\u001d+\\u001d#A4,,\\u001f=5/\\u001b 61+9653-.\\u001a6:649@B6 \\u0019>\\u0019>8\\\"$)C3<%\\u001f141<;;93.\\u001d</8$1;I9/\\u001eC,00\\\"4=3\\u001f+++*-38;<K<-\\u001b458#\\u001d83224%381<?:.//-7414324?.*\\u001f0,%,3?/.48.6M;91.8984849-07AH?/=:BHHA=:@@ADHRC<=CF=4348:/.<==?;=DARL>:>G=KGBMFDDB517855==;=,(158:9>J>:7C6B5';*,0&\\u001c%.\\u0001ª¨±·µ±µ¸½½¼·¶¸¸´±±±°¯¯­ª©¨¦££¢¨¬«¦«®±³´±©¯¬ ¢®­«¬«ª«©§¦¤£ ¡eht{ztrhqqd^¤­«©©©§§¥££ ¢¡`TVMEJMJB?JS[XMLj ©¨¥£¤¤££ ¡ POPQORXPF56=ILQIGK[x¡¤££ GLLKJPYJAB5/6<IL>ADKVo¥ >@AIHOWH6><2.2;A>AHJIG[h897??HNF:9?>4044;AGEACCADYs~441/3<@??CCC@<:57=@=::9:66:AKSZ_-.,++*/29>?=<:0*,1650/1132443334#'''\\u001e$<EGJI:1PC294740-,251110.\\u001b\\u001b #4B99AMc[URU_`[YQG/*/3615310 \\u0014\\b 2D) \\u0019\\u001a;c32<K(4@\\u001f\\u001c,8$-A7'-\\u001f(;$\\u0014\\t\\\"J3$$\\\"\\u001eZR-0>;\\u001b&-.\\u0011\\u00110>.6%\\u0017\\u0014\\u0005\\u000e5 \\f\\u000b4^:6=9O|Q=9TV02!@$\\u0013\\u001e2J/\\u001d\\u001c\\u0016\\b\\u0007 \\u001c\\u000e\\u000bS°}y{la}yJI>C;\\u0019\\u0012\\u0019=I-\\u0017\\f\\b\\u0015$\\u001f\\t\\baéæÙÔÏËÂ¹¯£¨xw\\\\7C%%:UjX1\\u001b&&\\u0017\\n\\rUÍéôøöèØëàÖË¾¾³«ab\\\\YjrmiW6\\u0012\\f\\u000feÀÐäóþöëøúùõÌáëáÚËÂ¸§v^LDM]fQ#\\u000e~Á¾¡pÄßãææêêóúùùôçÞµ¨{R#\\u0016*TW&P}Y1lhµÆÎÒÉÞèââãÞßºD0g³²lA?>cH;UX:oé|j¢±ÆÊÐÒÆÀQ\\u001a!\\u0016°z[WLbgVSP@è8]gnnu&^(J¥f,1H_kROUKzÑ\\u001c7?:9@KNW_]?&®èp\\u001ftqU&0>=G>9=<I§T\\u001711\\u0018\\u0010\\u0016\\u001b\\u001c!&#\\u0017)ÂÛ\\r.&\\u0013\\b\\f\\u000f 6;:1($7\\u0018\\u000b\\r\\f\\t\\u0004\\u0005\\b\\t\\n\\t\\n\\n ¯Éz\\u0006\\u000e\\u000f\\n\\u0007\\u000b\\u0015+,MMD=?/+'#!\\u001d\\u001a\\u0015\\u0013\\u0010\\t\\u0007\\u0007\\t\\u0010tµO\\u0003\\b\\u000b\\b\\u0002\\u0004\\u000b\\u000e\\u0011JHHKOPPNPLJGED@4-(%\\u001e(H\\u0014\\u0004\\u0005\\u0004\\u0001\\u0000\\u0000\\u0000\\u0002\\nKMNNTTSWWVWSPPRSNMJH=04'\\u001d\\u001d\\u0019\\u0016\\u0015\\u0017\\u0019\\u001bJLNORWWXZZ]\\\\WTTSQMMOQXVMHFGFDGD=DEHMMUVVVW\\\\a[^^^]YTRNNKCDDCBHLGGCDEHOPMRPTTXWY[\\\\]^\\\\]ZXSMKGJHGKGI´²¹ÁÄÃÃÀ¾½ÁÂÂ¿¾¹»¼¼»º»¹¹¹¸¶³³³²±µ¹·²½ÂÁÀ¿¶®¶¶­®¹»¹ºº¹¹··¶´³°±±°®ª¥u}w|~xr¶¾¼ººº¸·µ³³°²²±®rgg`]cababhiprge ´¾¼¹·µ´³³°°±°¬feefgiiii_]^hlnbbft¤µ·´³³²°¯¯®ª`eeccfe`di[U\\\\bhead`dpª°¶±¯¯®­¬©Y[\\\\ddggaYb`VU]cecddefdv~ª±±­««¨XXV^^ehc]\\\\`_Y]bacddcced]_t¡£¢WWTRV_abbb``_adb`a]]``_^ZZ[aksy~RSQPOOUVZ[ZXVURRTUTVXWZ[\\\\\\\\ZXVSLMJLJH=CZWW`bQEfaPYTTUTSVVYTRSL<! FELURSNJ`ieY[tusrp[POOMHKKMC\\\"\\u0010\\u0004BLV=C@(;gOMBM>V]7BguVJI=05-=F\\\"\\u0011\\u0006?XGJWX;mm`a[M6LNE9Rw}S8!\\u0016\\u0012\\t\\u001a7\\u0018\\b\\bMdFR\\\\W^hgbsoQ^I[KOf}7\\u0018\\u0019\\u0013\\u0007\\n\\u001a\\u000e\\u000b\\be®|u|wmdl][ZDK_vb2\\u0018\\u0007\\u0005\\u0012\\u001a\\u0012\\u0004\\u0004hàÙÏÎÊÀ¸²« ¥~|dCT?Igh6\\u001e\\u001f\\u0018\\u000f\\u0002\\u0007V¿ÚèòóßÏáØÏÃ·º¯¦]rtx\\\\0\\r\\b\\f_¬½ÕëøîàêíïêÀÕßÓÆ¹µ±§|heob(\\u0010q¦¦c~½ÒÏÓÕÙÚâèåàÝÔÑ¬yZMTbyf-@^qF!bb¥­¶»³ÆÍÆÆÉÉÎ¯:$\\\\±ªuqad[yT0EH-dàtXsy¤¨®¯¬°G\\u0012\\u0017\\u000e¨|tmqasoPPK8á%@IRRV`int|s\\u001eV\\\"Ed?JXjpPNRFuË|\\r!(##(/3;CF1\\u001d§ái\\u001bldM,<FGN@<>:G¤N\\r%#\\n\\u0003\\u0007\\n\\n\\u0010\\u0015\\u0014\\f ºÓ\\n&\\u001a\\u0007\\b\\u0011\\u0010'>A?5)%7\\u0013\\u0007\\n\\b\\u0005\\u0000\\u0000\\u0000\\u0000\\u0001\\u0002\\u0002\\u0001\\u0017§Às\\u0003\\u0006\\u0002\\u0000\\b\\u0011\\u0015.3TTH@A0(%#\\\"\\u001d\\u0019\\u0014\\u000f\\f\\u0005\\u0004\\u0003\\u0002\\tm®I\\u0000\\u0001\\u0001\\u0001\\u0005\\n\\u000b\\u000f\\u0016TROOSRNLOIFCA@;0)$ \\u0019\\\"C\\u0010\\u0002\\u0002\\u0001\\u0000\\u0001\\u0002\\u0002\\u0004\\u000eUWURXWSVWSSNLKNOJIFD9,0%\\u001c\\u001c\\u001b\\u001a\\u0018\\u001b\\u001d\\u001fTUUSV[[\\\\][][VSTRPMLNQWUOJHKJHKHALMOQQZ^^^\\\\^d^aaa`\\\\VUQQNJKKHFLPKKKLKLSUW][[Y]\\\\^`abcab_]YWTQPLKOKMÆÄËÓÚÜßßßÞàßßÞãâßßßÞÝÝÜÝÝÜÚ×××ÖÔÆÉÈÆÔÝàáàÚÑØÖÊÑàÝÚÛÛÚÚÙÚÚØ×ÔÕÔÓÑºµ¢¨¯¯ª¦¡¸×ßÝÛÚÛÙÚÙ××ÔÖÖÔÑuzyy¿ÓÝÜÙ×ÙØ××ÔÔÕÓÏxvy~}~±ÄÕØ×ÖÖÖÕÔÓÒÎvz{yyx¬ÎÕÛÖÖØÖÕÕÒnpqyysyv}§ÃÔÝÞÚÚÜÙlljrrz{sxwy}|~ºÇÏÒÔÑjjfeirttt|~}||}zz|zwvvv{yx}¢dedc`_dfkrusppljmnomjjmnnnpqnh\\\\]\\\\^b`IHdfgqp]Ov{lwqnljimiefhj_B \\\"XXgqd^[]s{vgfzjda[NX`dR\\\"\\t\\u0002R_kSZV7MxabYaUy~Teu\\\\P@*69NO\\u001d\\t\\u0004MkUTgjExvkoj]Lie\\\\Y££m=\\u001e\\u000b\\r\\u000e#8\\u000f\\u0002\\u0005ZxTYhflsqkzv_oQmgu¬¥E\\u0014\\f\\f\\b\\r\\u0016\\u0005\\u0004\\u0005lº ynvbjp`k¨6\\u0013\\u0006\\u0003\\u000b\\r\\u0005\\u0001\\u0002dØÕÎÐÏÆ¿º·®²¤qSiYn´¢L%\\u0014\\t\\b\\u0003\\u0006S¬ÍäñõáÐãÞØÍÁÆ»²l¦¡¡¬·ÃÄ­vA\\u001b\\u0010\\u000e^ªÎèøîÜãëñëÃÛäÙÍÃÂÂ¿¶¤·¾¯7\\u0016m_|ºÉ¿ÈÎÒÔàæãßÞÙÚº¡¶¨sw|78Nc;\\u001b^]¥¯¥»Æ¿¿ÁÃË¯>,hÅ½}a.9;\\\"[ÙoK^aol~£¡@\\u0011\\u0017\\u0013»~RE=.vØ\\u001c-4=>COY_hob\\u0016T\\\"L¥wQZj{}ODG=lÃz\\t\\u0017 \\u001d\\u001d!&)1;<%\\u0017¥ßg\\u001akeV6CNMS<463@M\\u000b #\\f\\u0004\\b\\b\\b\\r\\u0011\\u000f\\u0006\\u001d¸Ñ\\u0005!\\u0016\\n\\f\\u0013\\u0014)A::0$ 3\\u0014\\b\\u000b\\n\\u0007\\u0002\\u0001\\u0003\\u0004\\u0005\\u0001\\u0001\\u0000\\u0016¥¾q\\u0001\\u0005\\u0002\\u0002\\f\\u0013\\u001a5>LOD<>.*)(\\\"\\u001b\\u0017\\u0014\\u0013\\u0010\\n\\u0004\\u0002\\u0003\\bj«H\\u0001\\u0004\\u0005\\u0007\\n\\u000e\\u0012\\u0018%JJJNRRONQGA?==9-& \\u001d\\u0016\\u001f@\\u000e\\u0006\\u0007\\u0006\\u0005\\u0005\\u0006\\u0006\\t\\u0013MOPQWWSVWQOKIHKKGEC@6)/*! \\u001f\\u001d\\u001b\\u001e !PQRRUZZ[\\\\Z\\\\[VSSRPLLNPVURNLNMKNKDMNNPPY\\\\[[\\\\afaccdc_YWSTQLMMKIOSNNNOLKRTTYW\\\\]a`bceffefca\\\\XURSONRNP\\u0001¸M=@AFXfËÇ³¸LLSbhb^^e[JL[¸dVVWMIL_ºµ¶USiwkkrzVmcii]¤e<;<D??GO¶ZZµ¥u~£]dQReiU.-*-114@Ntº´rµÙ©wdv¤Ukjzk§\\\\83.&*3:Xr`ÓÁÛX ÷¶cTHiq´Ã±Q6g~\\\\?A@`«`¬©ÁL|ì«MFk«e¢¯¦È¿lYÉ¿«¡¢Ê´¨§©ZDaÖáÊ\\\\ejSºz½Ë·ÖÀÅØßÜßäæãÜÙ×ÔÔ·lvÈñî|dI¢ÈÎÁ´ÖÛåèéãÜßäçèãâÞÛÎÃ½ºÐçç½«¼Á¿µ½ÎÓ×ÙàáØÙÞÝÜàíåßßÙÕÉÆÎÜª¤®}¤ ¦¿»ÓàÝÙÙãÛÒÙÜÙàáãáââßÔÄÌ·¥~e¡l¾ÂÚäÚÍÊÞßÝØ×ÏæÜÜÜÜÕÚìÛÉÇÆn¦Å´¢ÊÃºÄ»¼´ªØÛÒØÔÎÉÎÐÕÚÊÚ¹t­¡Ê$K¹Ã¹² ~xÈÂÎÓÓÕÀÆÅ´¿ÙÒÎ¥Ê£º =®¨§bpz¡Ä×ÌÉ¿µ´®¯¹Ã¼ÄÅ·±¾;Y¤¥{sr°²²´«¡ ª ª¯Ã¡²ÂÆ{dq¤ªs©¢£¤³G¾Ë¯b­»©l]|#>Â¶Ä[¦}vkucVX?A3hÒwBNÃ¿X{}|P08>CD<150øÙRY·§[kwc[hsqqx4\\u001d5HUT@58añëÍM`®¡Z^wlVZ{~QnP4=9=UZ`e°òìæºrR¤·]Vsd]iyaskVWXZqy{qÓñëìä¥g ËeM{uux}pwuqkdb¬ôïèèóÖÆkE}|}ysstuxzyo_ZX]SYÁüõòìðð¿®]9uzvxmcgecdd\\\\ZOGGOV^ÒòõóðèíÝ¨Z)anop^FHKKMR;, ;KRm ÃÜëõìïéìé² M\\u001a'8FQL8014:D;0*9ET| ·ÎÝòëðïîìÈ:\\u0016\\u0012\\u0019#-43238762/09CVz£¾Ïôðñññëá?$\\u001c\\u001e\\u001f\\\"$$'(*)().4BOa³ÈöóóóóïíÑS?70.,)+,..15>HUbu¢²ÀöóôôðíìêÐw`OG@<;=@AFJU\\\\cq¦­¶f[_|g.'*+2GPn©¤¢~>BGLPKFEHG?:KHL^U~aB99:356H xEETv`WKMQioEC:;IJ_E,%&.*,5?s~|JHwjRchpHF<9M[T8$&#&&!&4Dh£zajÁfa]_s<GFF^]]9%1-&&+2Qma}Â«ÍGï¦QKG|wPR_^dUe?*awS584S¤[¶vB}í¢AIfLbN>mg=4quZKEMvporhN>_ÚÓ²X]^GOb\\\\=f~QCLNLMHINPL`\\\\NQCA^ÂëÞ{l`=e\\\\OQYOeRIB@@BHHJLYVONSLMx¢ÈÖ£B>APE<?JE>>?FKKLo_^}yqab^no6+)BS<BB4.BhdPNGZaq~kkFPbrZDu.!\\u0013@pdV<((NtNA\\\\hd}{ªtNXZGzK*\\u0018:qY91(\\\"3UUptp¡uYg_H^utQe0);sE\\n\\u001d%$((=NNt¤XVZ\\\\?<DQx}}«b/->o<\\t\\\"*)+*;8:WYtjqQH<+(0BJJR|a-/Aj4\\u001eC76>:9KGB0FPI5,($!*9'($KyX)+8T'Ho@AFE9KQ.#PV,\\u001f\\u001b\\u0018\\u001b\\u001d\\u001f'1+!0iM\\u001a-6>\\\"{92676/A?+[O\\u001c\\u0019\\u001c\\u001b(17JJ5%A?\\u0007\\u00151;&¤6(-,.(/3.HnW$-9.B<8E-5 3^-\\f\\u0011327!+./*$\\u001c\\u0011\\u001e%%.*%#,4/('9%Dxh4\\r\\u00132xx5\\u001b+-,).(\\u001d-'\\u0014,\\\"\\u001f$7B9)+'$7rpZ)\\u000e\\u001bpv3\\u0013$,*'5-;fd\\u001d$3,02/9=?- GunjJ#\\u0013s9\\u000f\\u0017\\u001f$$\\u001e\\u001b\\u001f6G\\u001e\\u001c/,;@4=>8 #etlh\\\\<\\u001cj¦E\\r\\u0011\\u0011\\u0014\\u0015\\u0017\\u0017\\r\\u0017\\u001e\\u001e\\u001f&)+8/*# \\u0019Culd`Y/SP\\u000e\\u0010\\u000e\\f\\t\\n\\u000f\\r\\u0013\\u001a\\u001c\\u0018\\u0017\\u0014\\u000f\\u0017\\u001e%.$\\u001fa~}mhpJCG\\f\\u0010\\f\\u000b\\b\\n\\u000e\\r\\f\\f\\u000e\\f\\u0010\\f\\n\\u0016 *+\\\"6gtvovcGzE\\b\\r\\u000f\\u000e\\f\\n\\b\\t\\b\\b\\b\\b\\n\\n\\b\\u0018\\u001b\\u0018\\u001c9V^d~utqpnUe-\\u000b\\u000b\\f\\r\\r\\f\\u0006\\u0006\\u0006\\b\\u000b\\u000b\\u000b\\f\\f\\u0013\\u0015\\u0015$4ESZ|svxom`8\\u0013\\f\\f\\b\\u0005\\u0006\\t\\f\\u000e\\u000f\\u0013\\u0012\\u000f\\u000b\\u000b\\r\\u000e\\u0011\\u0015$(3GQ{z}ujm=\\u000b\\t\\n\\t\\t\\u0007\\b\\t\\b\\b\\u000b\\n\\u000b\\u000b\\f\\u0010\\u0011\\u0013\\u0016!$*;Izlnh3\\u0015\\u000e\\f\\f\\f\\f\\n\\n\\u000b\\r\\r\\u000e\\r\\u000f\\u0012\\u0016\\u0018\\u001c\\\"$,8A~lkrb8!\\u0016\\u0012\\u0010\\u000f\\r\\u000e\\u0011\\u0014\\u0014\\u0012\\u0010\\u0013\\u0014\\u0017\\u001b %*/39e_azX(#%&.BDY~p79;@=897>877DBAZUwQ<76701.;mb67EiNA5::G]=K<4PV`5$ !)&(/9kznb77hsS9S\\\\PiGL9-TgX.\\u001f\\u001c\\u0019\\u001c\\u001e\\u001d!.=agR_¶wO]nT\\\\H:52]ZV-#&!\\u001a\\u001e',Gd\\\\vµÀyAéB\\\\lud>PTeIP# UkG,1)DV®rC~ì;h¨ C[J9aV#\\u001f`jN=17uqfchaG<b×Î³cvzWK^W.RkD9DGBB>9>C<GEBN<<Y¸ÞÖ~xpEZUJHJ=SC:2113:8<>?@?@HGMp¸Å¢342>80-1+)148==>accthb^a]izy#\\u001b\\u0017/C+24&!=aUGHATeqs`jFR_xlPi\\u001b\\u000f\\u0004,YPL7\\u001c\\u001aF|rTCO{SUnr¢mJUaOo7\\u001c\\u000f+^K/\\\"\\u0013\\u000e+UTol^oKQPE\\\\r||cPN#\\u001d2_8\\u0004\\u0010\\u001b\\u0013\\u001f+:IHbVELU;:DKgozt =\\u0014\\u00181V7\\b\\u0019%\\u0017\\u001b$0/7HId^]BA7\\\"!(7BAFq;\\u000f\\u0019-P5\\u001d:1$)-)==0&>D?$ \\\"\\u0017\\u0011\\u0019)\\u001b\\u001c\\u0018BhE\\u001e\\u0016\\u001d7$>c<435*<E\\u001d\\u001fPK+\\u0012\\u0011\\u0014\\u0010\\u0012\\u0015\\u001c)\\\"\\u001b+Z@\\u001a\\u0016\\u0017\\u001f\\u0015f6,'*+$61\\\"VK\\u0015\\u0014\\u001b\\u0015(36GJ8$5&\\u0003\\t\\u001d\\u001a\\u00110&#!' $(!>\\\\N!+8-?74>2=\\u001e&1\\u000f\\u0005\\u000e\\u0019\\u0018-\\u001e\\\"#)\\\"\\u0018\\u0014\\f\\u001b \\\"/(\\\"\\\"$()\\\"/B\\u001f65-\\u0012\\u0006\\t#ln+\\u0014!%$ $ \\u0018($\\u0016-\\u001f\\u001e#0;3 %%%1+,&\\u0010\\u0001\\u0012cg-\\r\\u001a%#\\u001f,$/WW\\u0018&4.,'&237(\\u001c5/(.\\u001f\\b\\bd7\\f\\r\\u0017 \\u001f\\u0017\\u0013\\u001a->\\u001a\\u001c10571<<9\\u001b\\u0011=0%'#\\u0014\\r\\\\F\\u000b\\u0007\\b\\u000f\\u0012\\u0012\\u0012\\u000b\\u0012\\u0017\\u0018\\u0016\\\"+&73,\\\"\\\"\\u0010&R2(#$(\\u0016CO\\r\\t\\u0004\\u0005\\u0006\\b\\t\\u0005\\b\\u000e\\u000f\\u000b\\u000e\\u0013\\r\\u0016\\u001c\\u001c!\\u001b\\u000e>X=<0-7 ,pA\\u000b\\u000b\\u0003\\u0001\\u0005\\t\\n\\u0007\\u0006\\u0006\\u0007\\u0006\\b\\n\\t\\u000f\\u0013\\u001a\\u001b\\u0014\\u001b=H@E<76*&e;\\u0005\\t\\u0006\\u0002\\u0006\\t\\u0007\\t\\n\\n\\n\\r\\b\\u0007\\u0007\\u0010\\u0010\\r\\u0015,517B;<825/O%\\u0007\\u0004\\u0004\\u0007\\b\\b\\u0006\\u0006\\u0006\\b\\u000b\\u000e\\u000b\\t\\b\\f\\r\\n\\u0011\\u001e*/2A:=>355#\\u000e\\u000b\\b\\u0002\\u0002\\u0002\\u0004\\n\\f\\r\\u0012\\u0010\\u000b\\b\\u0006\\u0006\\b\\n\\t\\f\\u000e\\u001a'+FAAE;/9 \\u0005\\u0006\\b\\u0004\\u0002\\u0000\\u0002\\u0005\\u0004\\u0005\\u0007\\u0006\\u0004\\u0004\\u0007\\u000b\\r\\r\\n\\f\\u000b\\u000f\\u001a$JHFJ@03:\\u001a\\u0006\\u0004\\u0003\\u0003\\u0004\\u0006\\u0005\\u0003\\u0004\\u0006\\u0006\\u0006\\u0006\\u000b\\u0010\\u0011\\u000f\\r\\u000e\\n\\u000e\\u0016\\u001bRNMQE40:5\\u0018\\n\\u0005\\u0006\\t\\t\\u0005\\u0005\\b\\u000b\\u000b\\n\\n\\u000f\\u0012\\u0010\\f\\r\\u0010\\u000e\\u000e\\u0011\\u0013\\u0002¤iv¦·Ç®­²©±´²¯ÀÇË¼©¡{ml[§tHer~³¿±¨ ¥°¯³ÁËÆ½¯roiiYwn]x£¡«¹Æ¿ÅÅ®epzqhhTNfvkvPL¥³Ë¿¨µ©Mntl[JKIexphu^yws®¿¾ª°§zsOxkgbOFNEU`gxgmv`£«¢¬0.Q{pehZNRSLPqVYX «¦ry¦«±¦n\\u000e\\b/G`ii\\\\XRX?M^^RM_n{vlu¨¯·­l\\u000e1YfwmgOLUX@ORiaGQQUhw~¤­­ªª©^\\u001cqxq[GF[X4CPdcPS`]_^µµ««¨<-£¬§mUNW^\\\\7:7I_[L`oZ]|¡£§\\u001f8«°£|dono89LO[YFL_ez§§¬§x`N\\u001bE¢¬¹¸¹¬¦£8?X]YZP=Ir¤¨rY[L-k¥­³ÊÍ¿¸ÃFNWhd`N@Pr¦£qbkb4«¦´Ä½«¾IKR^TY\\\\U[}£¦¤¥¤oEÉ ¬»¸GGEXZ\\\\[Sq¡¡~K²¬´­°¯£ª¯±qnkxftzqyynkhvcCs ±´®ËÐ¡£³¶¹eSXagf[W]SFRO7^hm}ÀÌÃÂ¿ÃÆÇJ8EAKanb\\\\N:>@+RmCRlq|«ÍÉÆÆÄÌ32Z68LecC8.12+Qk|f]fytvÏÈÁ½»Â/@S+'39<3*\\u001d  <gu{}ÆÀ¸µ±·v1DC\\u0017\\u0011#/+)\\u001f\\u0015\\u0016\\u001aPsw¡Ã¾À»¯¥pV9,*')4\\u001e\\u0016::'`j´¶¦½¾Á»´­syys>*=\\u0014#hG:zªº·»¼Á±qLqh{@?F\\r2c:U{]bx~{u§£¿µ¿·¢z~WW^Kr`DC\\u0011Ia8_Z <`easf^¤»®¨ªye}j\\\\cQV}M<&wMJUIW_bIVP@¯wtsulqqs[/'e^dGBA_fgB0;a}x|}sdxH&\\\\_j^F?_guc-7Sevg[atvhziggui.DQYa~£~msuc\\\\rcivx psl]`^Ub·°uuunvycQf|xoennjn^[zÎª¹ÃÒ¾©ÄßæÛãäáÞìóóåÎÂ»»©Õ m­ÄØÛãáØÕâàãïõêßÌ¦­²£¿Á£¯¯s¬ÈÖçâÈÌÛêóîñæÈ¦r³¢xs»Ê¥jf§ÕØÅÄÊÌáùêÁÌÚÛ­[¿±~mp{¬§°{¢ª¬À¿ËÞëëÓ»ÏÔÌ¿q¯sist²¹µ¢²ÎÎÜÙÜÊÉÕÊyxwtvuuzÀÖÜÒ¬¡»ÁÀÍÞÜÜØ®=0Ma~uwdx¥²ÉÌ­¦³ÈÛàäæà©;]~rlrrb|v§´¹ÀÇÙââßÚßI¢¢ºÁ|d`tpUq}¡¸ÉÄÊäéáÞât`ÕÕÒÇsgowv\\\\ibm}±±½¾ÇÐÛÎÂÆYuáÙÌÀª{[aofzu¡²ÅÕÐÓÖÐ·RÍÎÒÚÛ×Ã¿À¹V_ult}p~ ÅÉÊÊÍÇ¦tQÃÇÉÔÝëåÚÕÙepy|y}nbt¼À¼Á¾­wAËÍÃÃÂÛæÜÇÒ^fonbhidpµ³¸¹¶º½º¨zEáÉÄÅ¾Òçâ¿·HQS\\\\ab^Z~¨¢¢¦¶¶PØáÞÖÓÓÕÚÑÌdns{p}zSÅÖÈÊÓÙÒÜéé¢®¶½½xnr~qpvj]ecNyÀ»¡Á½ÍáèÁÆÊÍÊÓ[S_ZasupbMKIAw¾½q¥°¸¼ÓÐÎÏÔÓß6BkDEVqqRH>;:B|¦µº·±ª¼ÓÍÉÌÒÒz*KV.,9AH?6,.1[­´µµ²¬»´¶·ÍÄ¾½¹¹k1VB\\u0015\\u0014)993*'-6w»¨»½²ÃÅÑ©¾ÅËÃÄ½©¤~wmD8949G*$T]N¼½¼ÉÞà×¹Á«ÅÃÂº±¹wS?T!3sj«ÍÇÃ¹ÈÊÚÍÂ¹£¿·»¾¿¶{KQP]\\u001cGf¨³¶®«¾ÆÎÆ·Ä³½»¤psF?_WzmVW\\\"e\\\\Jt¢¥ÏâÂ¿¬©X]G6G>TkQ;¥po{su~wk·Ü®³bSYS[Vm«zD;mgl¦ nOT«Ëµ¦¡¢}wv{rM·`6ukj¦°JJr¨¼©¨£ªb4S ¬¿Á¦¡®Q]p°¤¤­¾­nb[9Rz ¬ÇÁ¹¤¨¡²¶q\\\\^W]iGi©ÀË±¢ªT=esw|²Á£th]SCIYUHdnaZ^myx_XIE9T1+]fi{¨§xQAGNMO[\\\\c{yZkt\\\\bUOH9ABOzXPq~mE27=QP\\\\xseyIVlaTPT:14Im[OYADicC\\u001f)CMbyt}£Y\\\\nkURG211@PA<abSaN@D7;UvzxxÁÔq_RNF8.56:?>N]iGM_FUT>Mbqqxy »ºcQOA9=>;3R;3(N_lyVAH;/Hhqzyn_Q[WOGF@J/.9:/%-08U[6\\u001e\\u001c*@LTcw_PIOZU86@I00)?>*5/##4=:>WZURPerIUXXK/,BF#%)5+#2?+\\u0016\\u001dH]\\\\hrla]inbcL>6=BD% \\u0018 \\u001f&\\\"+.\\u001d)KS^xniZNmwhl|]VKUOO!\\u001d,(-1$ !(C_ux~lT3\\u001cNtJT~¤{\\u0019\\u001e30-)+\\u001f Eflzk6\\u0015\\u0012SvBRjx»ª£¶#,4<5*!\\u001e(Jz§¢_HMn^tni^QBj´\\\"(/4)(+.<i´ÄÆÃÁ¼¯¦ChhoYNgXaiz!&'5<:48l¦¸À¹³»»ÈË¤MW_ayest6CqT[`tea£©°¦¡ªWBAJAGgh<V±¡¬¶½Âwqw{Q/OJ\\u0018\\u001b0?*F£ÉÑÌÁÉÌddpkwyc_Y4+BA/\\f\\u000e\\u001b\\u0016\\u001d:nØÚÑ½¿Âv:EpQZpi[OLA$)%0K8,  \\u001e+KØÖËµ®©c#DY45LY\\\\OA.2*(7763QlA%.JKÐÍÂ¬V$HK\\u0018\\u0010+DG=(\\u0012\\u0017\\u0016/XAA*?~[3\\\"akÑÍÏ·faP5\\u001f\\u001a!8R.\\u0013$#\\u00108]BM0No=5kbÏÑÓ»sVeSLN1=_\\\"\\u0018C\\u001c\\u0011Pvw`FSThLNh[ÌÇÆ²£J&N60N)Wj (=\\b\\u001dH?=:A>+E`npfÇ½ÀpCO.\\u001e\\u001f\\u0017@3Pf&%1\\u000e$#\\u0007\\u000b\\r &*\\\"3py]ª¡¡q1!L1\\u000e\\u001c\\u0013\\u001a9@T#%9,\\u001a'#\\u0019\\u0010$\\u001b\\u001f\\u0017\\u0013G]/ynK( (+\\u001c(+5ABD&(%A\\\"\\u001c\\u0016\\u0016\\u0011%\\u0019\\u0011\\u001948F,yd\\\\L2#\\u0016(H0!UTN<%+\\u001e84 \\u0011\\u0010\\u000e,6\\u0019!-&(8QJHPL/%6>&\\u0018/3?F<52@XU1\\u0013\\u00152<\\u0019\\u001f \\u001c\\u00181URZ\\\\S</#/9()979MI6*Bq^8+:=9(\\u001e\\u0013\\u001b0ftdMFK9+6GCBQA*/>9C8SjbG0:@0)\\u001d\\u001a,\\u0007\\u001c\\u001e!>?\\u001f\\u001d*7C\\\\L9KE9JbVG;>9*3.)&%+4.\\u001b\\u001b\\u0015&<')/0HxgBKn}mLRUR[cpus\\\"!\\u0018&R4+7Aqll¹³²´¸¶±«¥¦¨¥§©¯±°-1.7S>,-6[ldw±Â¿ÆÎÍÈÈÁÀÂÂËÇÀ¿½»MTP5,.%&/:=9MfÇÚäëåÙÓ¼®¨³µ½¾¾ÀQ8\\\"\\u001f(7BUeeehk|¼èöñæÓ´£¸½»ÁBK4 AeinÌâÞÜØ»~nx±»¸ÐGW: Gx~«±ÂÉÅÇÇ¿¦ln½º²Ù:I>\\u001fC~y~±º¿º²¥¯·¡kfj¨¾¯Ù?YS!<qu¤¬¸·´¨¤»a\\\\T¼³ËPaS\\u001f2`~¥²°¸¯¯¢«pPH@m¶±ÉbS>3DHn±¶£{®¬¤¢{ydA:3e²®Í\\\\E5o^Z¥«ª¡t{xzwd4-)h¯¯ÔQ4N©Ñ­eyghy}ud|[+%\\u001bk¹¶ÊJNÍ×Ø©mkliiUg}rurcYS5\\u001e\\u001c\\u0014yÅ³®d_µ×ØÑËÕFLGET~l\\\\^cV[6\\u001d1\\u0017\\u0010{·«Æ`ÙÖÒËËÛ¨:>06u¤sT=@COD\\u001cB\\n`²¬ÖÄÊÔÖÔÔÓ×Â`D/9ot^F1#%1zÇX\\u0012\\u001c0 ¸ËÏÍÓ×ÐÏÏÍÒ­U::\\\\pR?5,By²Èr\\u0010g´C\\u0010¿ÇÉÉÑÓÏÎÉÈÉÊ^+,yÇ®¢Àº·\\u0014E¿w\\u0012{¼ÈÅÉÏÇÆÆÃÈÃÌj\\u0013\\\"ÖÏÒÍÁ¿Â»¾¢!KÉ¦#yÅ¿ÂËË½´¶¶Á¾Åz\\u000f$¡ÑÉËÌÁ¹º¹Á®2dÆ¹AxÉ·¹½¸¹º·µ¹±¹\\u0012)¨ÊÅÃÇ¿¸µ«²)n²®Lm¿¬¨¬¬ÁÀ¿¶¨®\\u0014\\u0019¹¼»¹¬¤£§~\\u001ap¤¦CH°¥¯¥®Â»±¬¨­\\u0017\\t>·´°¢ e\\u0014t?)¨°¶·¾¹ª¡­§£\\\"H(2q¨¡A\\u0014qH.­²¾½½·±°¹¬¤\\u001ekn# fu41dWJ©©¶ÀÅÀ½¼µª¦\\u0019YZ\\\"E~hYiwsvum|¤°º··º²¥l0jyIOry}nyv¤yiy{¡~wx|z}}ujbvypjhe#\\\",ST1/>MSl`PcR;HgcPCC<.?<7538@:\\u001e\\u001c\\u001f:N56<<QuR\\\\{¡oPbjky$!\\u001e6_<09Cx©}¬ÌÅÇÊÏÉ¾³«°ºÀÊÏÐÑÐ42/=Y@($.^uo¡ÆÜÜâèåÚÒÄ½ºÁ×àáâàß_WJ/+*\\u001a\\u0016\\u001d*0/FbÔíôõèÔÄ¤§¸ÎÞàá¯F(\\u001a\\u0017\\u0017 %-:>AGSoµÝâÓ¿¡yaZL\\\\oÒÜÙß¦52#\\u0016&667HQQYdYi®¦ wQO=8G_¾Þ×î78!\\u0015%CJLFBKVemq~cUD10T¿àÖô&)\\\"\\u0011!>MP?GW]Zbry}vk^ioUL/)6¢ßÔï&86\\u0014\\u001e6CJ:\\\\o\\\\U^lwtk]KZoPA($\\\"|ÛÙÜx0>7\\u0018\\u001f/DKEk{_GUpwleW?@aR4 \\u001b\\u0016aÔØÖk<.%7B&<HWu~mAJnka[I21IV2\\u001c\\u001a\\u0014_ÒÓÖl3! |¦K0Kdoqj:>\\\\ZXL:366Y<\\u001a\\u0018\\u0015iÓÔÕ0!K¼å°WGYPKO34SSO?694,S?\\u001a\\u0018\\u0011vÞÝÇ9O¦ãîì´O6/+1(9\\\\N?995,.8$\\u0017\\u0016\\u0011éÝ´[\\\\Âìðéãç+%\\u001e\\u001d%R]H70051A%\\u00175\\u0019\\u0011ØÔ×gñðíææó¯1&\\u0013\\u0017EshG-#&*B? N\\u000foÑÒðØáóóðïîñÎZ-\\u0010\\u0018IP@+\\u001c\\u001d .Õ]\\u001b  #;¼Üéêêòõìëëéå­B\\u001d\\u001dKfL;69NËå~\\u0019|ÇJ\\u0018àåçæíñìêæèêÛZ\\u0019\\u001dØÁ« ¡ºØÜÜ\\u001bVÑ|\\u0018Ûåâæëçææâêìët\\u000e\\u001d¥øòóêâßáàã²)[Þ²+âßâêëàØÚÚåæè\\u0011\\\"·õòïêäÝÞÞãÀ=vàÐNãÚÝâÝÞßÛÙÞØÜ\\u0017*¼ëíæäáÝÙÐÒ®7ÎÉ[~ÙÔÏÔÇÒåäãÛÎÑ\\u001d\\u001eÕÞÛÖÎÈÇÂÇ*ÂÁSZËÈÍØÍÓæßÕÐÍÑ%\\u0015Q®ÐÐÍÄ¸´ºÀz&¾¸Q<¸Ï×ÝÞâÝÍÄÐËÇ4Z=C¯ÆÃ»¸´«W(¼²]D¯ÏÔàààÚÔÓÜÏÈ¥40'v¹»¶·³KG¦¨pb¤ÉÉ×áæâßÞÖÉÅ/p®l-W¨·²¤u¿»ÅÑÚ×ÖÙÐÀ´D©dh±­«¤«¥§¢ ¨°°¸¼º²µ½Ã¶°£®«­­³±³ª¥ ©¯©¯¨¯°´º±«£³Á½À¶©¶´²ª±µ¬°«¢§·´ªª¢««« ¥£§´½º·¶·¸®§£¢¡§ª',/HH.2?GJbUDXO<Id\\\\I>B?094/,)-5/&)'7B0;B=GufCLgw~xkoZ=KNHPVaed*+(:V87DGkhg¡.03BV@202OaZp©¡¡¤£ECB2/3(\\u001f\\u001d#'%;Sª¹¸·®{jb]zl4'$&%$!-<?BEFW±´ªbMD4@O`{*4/\\u001d#0-1DOQZ[IP~a99*'5B¢h5=+\\u0015\\u001e;>>;:GRZ]\\\\ficlobB;2##>©e%-&\\u0017*@>@3<OUNR]__UQGMN<<% &t¥e':5\\u001b.=3:-OaNHNW]VKD6?P83\\\"\\u001f\\u0019WT4A5\\u0018%05;6YgK9E[]OJB.*E9&\\u001b\\u0019\\u0012CJA3$).\\u00181:FaeS1:YQEE:(\\\"1<\\\"\\u0017\\u0018\\u0013FN:'\\u001f^w-(?RYUN+/G@=;2/-#?+\\u0015\\u0017\\u0016Rq7\\u001d3¢{83JD=?,*@=9/.61!>7 \\u001e\\u0012Y7:r¡¥{.(,*-%-F9--10($)#\\u001e\\u001d\\u0013h~DF¬£¤X\\u0016!\\u001e\\u001a\\u001b@E2+220!+\\u0018\\u0011'\\u0012\\u0015n~>m°¤¨}\\u0017 \\u0017\\u0019<bV<-0- #e/\\u0015k2\\u0013Y¬ £  ¡<'\\u0019\\\"DC4(\\\"%\\u001c\\u0017TD\\u0012qp\\u001f-~¦¡ ¢ ¢¢7%(>M4+,(3]V\\u0017P8\\u0011e¡¤¨ ¥E\\u001c!_¥|wsh\\\"5\\\\\\u0013_¢¨U\\u000f\\u001dp±««¥{*@\\u001d_¡  f\\u0014$­¦/Z0`r\\u0017-«%c?]n\\u0018\\u001f¢{f\\u0017e>B j\\u001a\\u000e@uqvS\\u0014i<(}j$L'-c}zvp3\\u0014e|>,~r kc$(Zy}z|w]+2XlpBBt¡o\\u0019XX->amylSNfi^a]_iz\\\\-hzmBDai{xvovrrl]fenvv~uy~}i`}xlv{}vniryswpw|}vjl|u}}zngimr~wwo{||rxuu|y{xvow|fvuYSknaqudc`\\by|||}}~~~y{}}~~~~~~~zz}|~~z{|}|w}}{~~y|~{|~~~~~~~^afghoqvt|~~}}~~~}{,,.37;@E=Ssypmpvuxqrtmjnwyxt---,-**4/Hr´·£gCDDELQKLMFACKMLR,+,****07JZp{tdU9+-,0023220//../))*(()*,=RFRTJRPD305420/..-++++*+,,+*++-:YFDONYJOP0+0110//.-,++*+++*****2UEIfo¯º½@.12-,--,,))*&(*))))(/Zy¨¾¼ÂßáÝÁr+-.10///,+**%'))('('2]z¡¬¹m7/...++)'++*(''&%$%%3@5P_]MHLo58GT[\\\\UL=((+)/+$#$$49\\\";]ZYQLok¤¶¿ÇËÈÄ£?&12A7\\\"$##:9&YufT;XµÁÖæèòôîÞ<'<?/%\\u001f\\\"##<9XxcJG»ÇÁÃÖæîíÑ_6').+%$%%$&?`»¬]x¯ÀÉÐØàæÓ¨k0\\u001f1'%'(')*)%*)V±×±²¬ÆÔÎÕ×Æ§q<\\u0018\\u000b\\b\\u0019((**)(*0?847rØÏ²½ÑÓÚ×Áp?\\u001c\\u000f\\f\\n\\r\\u0013&'%''00VyyÒÈ¿ÉÒÞÍR)\\u0015\\u000f\\f\\f\\f\\r\\u0010\\u0018')('&o¢­¼·®ª£ÒÈÉÎÆÆ'\\u0013\\u0011\\u000f\\r\\u000e\\r\\u000e\\u0014\\u001a\\u001e')&'&ÅË¬svÔ¸­pSO9&#\\u001f\\u0018\\u0014\\u001d\\u001f\\u0017\\u0017#&%$%\\\"¼³8Wjy£¸`;..p¡©rd>\\u0017\\u0015\\u001b!  \\\"#\\u001f}dBE6P¢ÍÓË©¡·ÇÖÝèíáÏ¶x5\\u001b\\u001a\\u0017\\u0014\\u001d\\u001f \\u001esoeHBNlÄÚÜáâèêëìééçãÙÍ¯3\\u0015\\u0012\\u000e\\u0016\\u001a\\u001c\\u001dlNT©ÖÕÓÐÖããçéììéâØÍ¿¦U\\u0018\\u0011\\u0011\\u0015\\u001a\\u001b\\u001b®«xsÄÐÓÒÐÔâæêëìëéâÖËÆ´y2\\u0016\\u0015\\u0017\\u001b\\u001d\\u001cÂ½ÆÌÒØÝáâæèëíïîêáÑÊÉ¿§r,\\u0016\\u0019\\u001e\\u001e\\u001eÁµ¨­ÇÐÒÕØßâäççéêéæáÖÅ¼¹°¤?\\u0019\\u001c\\u001f  º¸¶¶¸»¹³µ­·Ã¿º»»º¹¹¹¹¹¹¸¸·¶¶¶µµ¶½ºº³³¶¸µ³­¶»¼¼¾¾¼¼¼¼¼¼¼¼¾¾¹····¸¹¶¶µ±±±´°³¹¶»¿¿½»»»ºº»¹º½¼¹¶¶µµ´¸µµµ²±´³±¬³·»¿¿½¼¼»»»»¹¸¹¹¸¶¶¶¶µ¸´´´³­´µ³®¸Á·½½½¼»»»»»¹¸¸¸·¶¶¶¶µ¹µµ¶·´´ºº¶µµÁÁ¿½½»ººº¹¸·¶¶µµµµ´£¦«©­±´°¯³·¸»¼»»¼º¹¹¸·¶¶··¶¶¶zy{||¦®½µ³ª¤ ¥««¯§§¨¢£«¬¬® ¸ÊÍ¾~|}}}~~~¨¦~zz|zy{{|~~}}~~}|}~}|}~~}~~~}|||||}|||{|y¡µËÓÑ­~~}}{{|yyzyyzy{}ÄÒÑÓèæâÔ¤~|{{{vwyyxwwy¹ÈÒ¾«°­~zx{{zvvwvutuv}~l[¶©¢yyuuyxtstt}vkZ¥~}¾«·ÊÏÖÚØÑ¹}uz|ssssu©iLf¡ÊÕáëìô÷ñå´xsysprsr~|¶¯}\\\\ZÒÜÕÖàìóïÔ wquwrrttttsÒÇ¸£qÄÖÚÛãéëØ°w:>xsrstquxuuvrÉâÄÈ¿®ÕäÞáàÍ­yG$\\u0018\\u0018Ouorrtqtz~yâÚÁÌàáçáÊ¦{L*\\u001d\\u0019\\u0016\\u0015(dqmoowwª¼°¤ ÚÓÎÕÞéØ]5\\\"\\u001e\\u001c\\u0019\\u0019\\u0019\\u001f;jopon¥¯ÄÁÅÀ»°¦ÜÔÔ×ÊÄ9#!!\\u001f\\u001b\\u0019\\u001e%+QnmmnmÚáÈ ¡zÜ¹¨lXbT<683).-#3bkiijgÙÖ¯Ycot¬ÃjNFJ²´º¤W$ Leabghd¿·cYKX¨ÙâÜÂ¼Î×àèðòëáÑUBOST^dec­©d[]×éëîïðïïïîíììçàË£aGEJW^`a¼¹ªo]l¿äåäâæììëîðñïíæßÙÆ|FCLV]^^ÐÎ½~³ÚßââáäëîîðððîíäÝÝÐZHPW^`^Ý×Äª¾ààåæéììíïðòôòðìãßßÙÇ^OX_`_ÙÐÉÎßâåæåèëìììîïïìéãÛÔÓÏÊ¶oPY^^^ßÜÚÚÜâãÚÚÐ×ßßâãàáââââââáßÞÝÞÞÞÞßäààÜÝáãÞÚÒØ×ÝäæääåååååååæãàààààáâßßßÝÜÛÝØÙàÜßâåâáâãããäâãåâßßßÞÞÝáÞÞÞÛÚÝÜÙÐÓÛßâãâáâãäääâáââáßßßßÞàÝÝÝÜ×ÝÞÙÐÔÛÕßââáàãäääâáááàßßßßßàÝÞÞßÜÜáßØÔÎµáääããääääâáàßßßßßÞÝÂÀÃÈÊÐÍÏÓÔÑÔÕÚÜâáßáãâáââáààáâäãÞ©¦¨ª«°¯¯¯½ËÏÚÒÕÍÅÁÇÎÍÑÊËÌÆÂÇÐÔÔÔ¹¸¸¸¸·³²­µÄÏÛÞÓÃ¸»·¶»¾¶¶¶°«­¶¹··²±²±²³±¯ª±»ÀÅÈÃ¿··¹¸º¹¸¶¶¶´³³³²²®­®¬«­®­§±±¶¸·¸¹´±¸º·¸¶´´µ´²²±°°¯¯°¯®¯¯°©¯¸¶¹·¼··¸²´µ·¶³³´´²±®®®°®¯®®®­®§ª¶¿ÁÕßááÉµ¶¶·²²´³³²®®®««­¬¬­¬­§¢ÞâäçìéìàÆ¶³±´¶·µ±®®­®©ª¬¬«ª«ª¯¯±ÏÚâÖÆ¬ÍÎÁ´´µµ±¯®©§¨¨¬ª©ª©¨§¨§¯´¯²¿¾µkÍ´¿Á°°´´·ºµ¬©­­©¨­«§¦¦¨¬°­°´´ }i´ÑÉÎÛÚàäâÛË«¨­ª´³¦¦¦¨®±«´Ä´z]u®²ÛæëòðöøóéÁ£¦·¶¥¤£¥¦¦«ªºÌÈ´kl©êñëëìò÷òÖ§¢§©§¦§§§¦¦ªµåÝÍ¸×èïìó÷óÞ·DT ¥¢£¦¤¥§§©ª§°×ëÙÚÐºãõîìçÓ°~O-\\u001f\\\"r¨¢¤¦¥ ¤«±²®§²èåÒÝïëòìÔ°V4&\\\"\\u001f\\u001f9¤¡¢ª¥»ÐØÍÂº©åáÜçïóÝ iF5.,%!#-W¢ ÏÎÜÙÕÐÇ·«çàÞæÕÇK6671)#(27rðïÚ¥«ª~¤ã½®ubzlRNNH;<9.FôìÍrpyu³Ïªx^\\\\c¤ÆÆÍ·£n4+kãÜÀrcZf²âïìÑÍÜàêòúüõïç®mZjuuÒÒ»xjbçôö÷øøöõöõóñôôóâ¾{\\\\aizÝÚËx~Éóòññóóóô÷÷÷ôõôóïß\\\\^l{ëåØÈçîïïïðóõ÷ø÷öôõòñòç²rdtôïáËÙîðôôôôõôõ÷úûú÷÷ñòõîÛ±}uíæãéñîñóóòòóòòôöøõôòêèìéàÐt\\u0003}nfjj¯¯jJGIP`n|¦³¼ÄÌÏÍËÊÊÊÈÊ°Á»¼»³»·vXCGPMRZ^foª·ÀÃÆÌ´ºÁ¹¿±°ÅÎ³©¯¬A>@?BHKPT^mzÅ±¨¶½Å¼³ÄÊÂ­«³¼ÈÀv039>@BCA?>>AHªµ½·­ÅÌÇ¾ºÁº+\\u001f)3:;:876654pu©¿¶©»ÇÂQ\\\\©ÀÀ±m^QE:1,+,28Bi\\\\ly²Åº´Ä]SL°¶ÁÅÇ¾´©rMXt¢yRd^b_aNJH¯±µ¿ÆÇÍÕ¯¦²¶´¼U`]J'&(,AAE8K°®¯ºÎÌÅ§lLf{z~~ yYXXO0$\\\"&30?2C´¨¶¸º¯T2'+0.03/½zF=YQ2%!$/:1$;WjwbQ1 \\u001d\\u001c\\u001c\\u0019\\u0018\\u0017\\u0016\\u0018ÇA9RA-*&#+95(4+\\u0018\\\"('\\u001e\\u001c\\u001b\\u001e\\u001d\\u001c\\u001b\\u001b\\u001b\\u001b\\u001a\\u001a¿®M8@5))$!%(.)+\\u001f\\u0011\\u0014\\u0017\\u0016\\u0017\\u0019\\u0017\\u0019\\u001b\\u001b\\u0018\\u0018\\u0018\\u0018\\u0017\\u0018¸²^II6/&\\\"%&*&(+\\u0019\\u0011\\u0013\\u0015\\u0014\\u0014\\u0014\\u0014\\u0016\\u0017\\u0019\\u0019\\u0019\\u0019\\u0018\\u0017\\u0017®gYR8D>5/).-('\\u0016\\u0011\\u0012\\u0013\\u0013\\u0013\\u0012\\u0013\\u0015\\u0017\\u0019\\u0019\\u0019\\u0019\\u0017\\u0016\\u0016x]bNRD`Q@>-0,\\u001f\\\"\\u0016\\u0011\\u0012\\u0014\\u0014\\u0014\\u0012\\u0013\\u0014\\u0017\\u0019\\u001a\\u0019\\u0018\\u0017\\u0016\\u0015UCeUM>eRC3,7,\\u001e\\u001c\\u0014\\u0011\\u0012\\u0013\\u0014\\u0015\\u0013\\u0013\\u0014\\u0017\\u0019\\u001a\\u0019\\u0017\\u0017\\u0016\\u0017A?e^?JXW;*3('(\\u001a\\u0012\\u0013\\u0013\\u0012\\u0014\\u0016\\u0013\\u0013\\u0013\\u0017\\u001b\\u001a\\u0018\\u0017\\u0017\\u0017\\u00183=W[IOQ]3).'&$\\u0016\\u0012\\u0014\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0013\\u0016\\u001e\\u001c\\u0017\\u0017\\u0017\\u0017\\u0016*6EZdlZI139D,\\u001b\\u0012\\u0012\\u0015\\u0014\\u0014\\u0015\\u0014\\u0013\\u0013\\u0013\\u0015\\u001b\\u001d\\u0018\\u0015\\u0017\\u0017\\u0017&4E[h9KTJ?(\\u0019\\u0014\\u0013\\u0015\\u0015\\u0016\\u0016\\u0013\\u0012\\u0013\\u0013\\u0014\\u0019\\u001d\\u0018\\u0017\\u0019\\u0018\\u0017DWgldoVkg:& \\u001a\\u0015\\u0014\\u0015\\u0015\\u0015\\u0015\\u0014\\u0013\\u0014\\u0014\\u0015\\u0019\\u001e\\u0018\\u0019\\u001c\\u0018\\u0017gqvWD:ZnY7\\u001c\\u001c\\u001b\\u0019\\u0016\\u0015\\u0015\\u0015\\u0015\\u0014\\u0016\\u0015\\u0015\\u0016\\u0016\\u0017\\u001d\\u0018\\u0019\\u001c\\u0018\\u0017rtlUHCMO-\\u001b\\u0017\\u0017\\u0018\\u0017\\u0016\\u0014\\u0013\\u0014\\u0014\\u0014\\u0015\\u0019\\u0017\\u0016\\u0014\\u0015\\u0018\\u0015\\u0017\\u001b\\u0016\\u0016cDA;334&\\u0019\\u001b\\u0019\\u0017\\u0015\\u0015\\u0014\\u0012\\u0012\\u0013\\u0017\\u0015\\u0018\\u0018\\u0016\\u0017\\u0015\\u0014\\u0013\\u0016\\u001c\\u0017\\u0017zG(\\\"\\\"\\u001e(,#\\u0018\\u001d\\u001a\\u0015\\u0014\\u0015\\u0016\\u0014\\u0012\\u0014\\u0018\\u0015\\u0015\\u0018\\u0017\\u001d\\u001c\\u001b\\u0019\\u0017\\u001a\\u0019\\u001bqB*\\u001f\\u001f\\\"+0)!\\u001b\\u001a\\u0015\\u0014\\u0016\\u0018\\u0014\\u0012\\u0016\\u0019\\u0018\\u001a\\u001c\\u001f(,-)%%%(i>+\\\"\\u001f#*40(\\u001d\\u0017\\u0014\\u0014\\u0013\\u0014\\u0013\\u0012\\u0015\\u0017\\u0019$.<FHLNMNRWgPB;:?EKH90,&\\\" \\u001d\\u001c\\u001d &5L[cefimnoruheecehhfdV[]VPMLKMS\\\\hruxz}~~~}himrwwvsmgtrsstuuvxz{|}~ils{~{rw|xy|~}eZacª©X68=FSbq«·ÁÊÐÐÐÒÒÏÍÐ¬¾¿ÃÂºÁµ~lM56<6:BIVcv§¶ÂÉÍÓ¹¹Â»Á´³ÉÐ²£§¡s0$&'.428?J]oÆ¶§´¼Äº²ÆÌÁ«¨³»Å¾r! #%%\\\"$%%&)+2¬¶¾¹®ÄÊÆ¼µ¾»%\\u0014\\u0018\\u001b\\u001f#$$%%#\\\"!ieªÀ¹¬»ÇÀAL¼À±eUG9.%  !%*4_Gcw²Ç½´ÄQ>8¬¶ÀÂÄ¼²¥hDOk~p=Z[`_\\\\C:5«°µ¿ÇÇÍÓ§zª²°¸xAUYF%&),>9;,9­®¯ºÏÌÅ¦fF`uu}}¬sDLRJ,\\\"!%.&6*2~°¨µµ·¬Q/#',+.1-Éw53SK.#!$(/)\\u001e,Lhw\\\\L,\\u001c\\u001b\\u0019\\u001a\\u0017\\u0015\\u0013\\u0012\\u0014Ì>7M=-,)!&20\\\"+'\\u0019\\\"&%\\u001c\\u001b\\u001a\\u001d\\u001c\\u001b\\u001a\\u001a\\u001a\\u0019\\u0018\\u0018¿®N7<2)+&\\u001e!$*$$\\u001d\\u0014\\u0015\\u0015\\u0016\\u0018\\u0019\\u0017\\u0019\\u001a\\u001a\\u0017\\u0017\\u0017\\u0017\\u0016\\u0017·±\\\\FE3-% !\\\"&\\\"#$\\u0017\\u0014\\u0014\\u0013\\u0014\\u0014\\u0014\\u0014\\u0016\\u0016\\u0018\\u0018\\u0018\\u0018\\u0017\\u0015\\u0016­dTO5@:0+%*)$ \\u0015\\u0013\\u0013\\u0011\\u0012\\u0013\\u0012\\u0013\\u0014\\u0016\\u0018\\u0018\\u0018\\u0018\\u0016\\u0015\\u0015xZ^HPAZH79),)\\u001b\\u001b\\u0014\\u0013\\u0013\\u0012\\u0013\\u0014\\u0012\\u0013\\u0014\\u0016\\u0018\\u0019\\u0018\\u0017\\u0016\\u0015\\u0014Q=_QK;^H8/+4)\\u0018\\u0016\\u0013\\u0013\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0014\\u0016\\u0018\\u0019\\u0018\\u0016\\u0016\\u0015\\u001652][<DRN0)3%!!\\u0018\\u0012\\u0013\\u0013\\u0012\\u0014\\u0016\\u0013\\u0013\\u0013\\u0016\\u001a\\u0019\\u0017\\u0016\\u0016\\u0016\\u0017,1MVEIJT(!(! \\u001f\\u0015\\u0012\\u0014\\u0013\\u0012\\u0014\\u0015\\u0013\\u0013\\u0013\\u0015\\u001c\\u001b\\u0016\\u0016\\u0016\\u0016\\u0015&,9P_fS?%#*;'\\u0019\\u0012\\u0012\\u0015\\u0014\\u0014\\u0015\\u0014\\u0013\\u0013\\u0013\\u0014\\u001a\\u001c\\u0017\\u0014\\u0016\\u0016\\u0016\\u001d&6Ocz0>C;6%\\u0019\\u0014\\u0013\\u0015\\u0015\\u0016\\u0016\\u0013\\u0012\\u0013\\u0013\\u0014\\u0018\\u001c\\u0017\\u0016\\u0018\\u0017\\u00161CT^`kK_\\\\1!\\u001f\\u001b\\u0015\\u0014\\u0015\\u0015\\u0015\\u0015\\u0014\\u0013\\u0014\\u0014\\u0014\\u0018\\u001d\\u0017\\u0018\\u001b\\u0017\\u0016N[fL?4RfQ1\\u0019\\u001a\\u001b\\u0019\\u0016\\u0015\\u0015\\u0015\\u0015\\u0014\\u0016\\u0016\\u0014\\u0015\\u0016\\u0017\\u001c\\u0017\\u0018\\u001c\\u0017\\u0017]dcO@;GM-\\u001b\\u0017\\u0017\\u0017\\u0016\\u0016\\u0014\\u0013\\u0014\\u0014\\u0015\\u0017\\u0019\\u0016\\u0014\\u0015\\u0017\\u0019\\u0016\\u0018\\u001c\\u0017\\u0017qX?@7.05(\\u001a\\u001b\\u0018\\u0016\\u0014\\u0015\\u0014\\u0012\\u0012\\u0013\\u0017\\u0016\\u0019\\u001b\\u0018\\u0019\\u0016\\u0016\\u0015\\u0017\\u001d\\u0018\\u0019m>&$\\\"\\u001c',#\\u0018\\u001d\\u0019\\u0014\\u0014\\u0015\\u0016\\u0014\\u0012\\u0014\\u0017\\u0015\\u0016\\u001b\\u001a\\u001a\\u0019\\u0018\\u0016\\u0014\\u0017\\u0016\\u0019b9'\\u001f\\u001f\\u001f&+#\\u001f\\u001b\\u0019\\u0014\\u0013\\u0015\\u0018\\u0014\\u0012\\u0016\\u0017\\u0015\\u0016\\u0018\\u001a\\u001e\\\"#\\u001e\\u001b\\u001b\\u001b\\u001eV0$\\u001f\\u001c\\u001d!($&\\u001e\\u0017\\u0014\\u0013\\u0013\\u0014\\u0013\\u0012\\u0015\\u0016\\u0015\\u001a\\u001f)36:<;<?ER>40.15751+& \\u001b\\u0019\\u0017\\u0016\\u0016\\u0019\\u001d(:CIMNQUVX[^RPQOOQQOMCJLD=;:9;@FPY\\\\^aceeeggeQTX]``_\\\\VO]\\\\\\\\\\\\^__`aabcdehjlmoqqpSW^fiigdZ[`]_aceefedeghikmnpruttt[S^`¦¥S115?M\\\\k|®¸ÂÍÖ××××ÖÔÖª¾ÃÉÈ¿Å¶~lK,,1'*;CNZo¨¶ÃÍÑ×·¹Ã½Ã¶µÎÖ¶¦¨¡l\\\"\\u0019\\u001a\\u001b!'(.5>UqÄ·¢±ºÂ¸²ÏÖÇ­§°ÀÐÂk\\u0014\\u0013\\u0018\\u001b\\u001b\\u0016\\u0017\\u0018\\u0016\\u0019#&-«·¿º±ÎÕË»z·ÊÂ\\u001d\\f\\u0011\\u0016\\u001a\\u001d\\u001d\\u001d\\u001d\\u001b\\u0016\\u0015\\u0014^\\\\{§À¼±ÁÎÄ4?ÀÄ²hTB2'\\u001e\\u0019\\u0018\\u001a\\u001f$.R;Wm¯ÉÁ·ÇK1+}­¹ÃÉÊ¿²£c?Jg~d2MOVYX;.)}¬´¸ÃÌÍÕÚ¨z«µ³»n6GJ9\\u001c!&*:22!-®±±¾ÔÒÍ¬fD_stªk9=A: \\u001a\\u001c\\\"&\\u001b+ &w²«¹¼½°P)\\u001d!%&,/+Êp*#A;\\\"\\u001a\\u001a\\u001e\\u001f#\\u001e\\u0017\\\"EhyaL'\\u0014\\u0011\\u0010\\u0010\\r\\r\\u000e\\r\\u000fÒ1%@3#\\\" \\u0019\\u001e*(\\u001b$ \\u0015!%&\\u001c\\u0019\\u0017\\u0019\\u0017\\u0016\\u0015\\u0014\\u0015\\u0014\\u0013\\u0014È­C(1*\\u001f \\u001b\\u0015\\u0018\\u001c!\\u001c\\u001e\\u0016\\u000e\\u0012\\u0014\\u0014\\u0016\\u0017\\u0015\\u0017\\u0016\\u0016\\u0013\\u0013\\u0013\\u0013\\u0012\\u0013¿±T::(\\\"\\u001a\\u0015\\u0016\\u0018\\u001b\\u0017\\u0019\\u001d\\u0010\\u000e\\u0011\\u0011\\u0012\\u0012\\u0012\\u0012\\u0014\\u0013\\u0014\\u0014\\u0014\\u0014\\u0013\\u0011\\u0012®ZGB(4.$\\u001f\\u001a\\u001e\\u001d\\u0019\\u001a\\u000e\\r\\u0010\\u0010\\u0010\\u0011\\u0010\\u0011\\u0012\\u0013\\u0014\\u0014\\u0014\\u0014\\u0012\\u0011\\u0011oNM7@4M=++\\u001b\\u001e\\u001b\\u000e\\u0014\\r\\r\\u0010\\u0010\\u0011\\u0012\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0014\\u0013\\u0012\\u0011\\u0010C/N?<,O:,#\\u001e'\\u001a\\u000b\\u0010\\r\\u000e\\u0010\\u0010\\u0012\\u0013\\u0011\\u0011\\u0012\\u0013\\u0014\\u0015\\u0014\\u0012\\u0012\\u0011\\u0012()RO38>;$#,\\u001b\\u0015\\u0016\\u0013\\u000f\\u0010\\u0011\\u0010\\u0012\\u0014\\u0011\\u0011\\u0011\\u0012\\u0016\\u0015\\u0013\\u0012\\u0012\\u0012\\u0013 (BJ;;7B\\u001b\\u0016\\u001d\\u0015\\u0015\\u0015\\u0011\\u0010\\u0012\\u0011\\u0010\\u0012\\u0013\\u0011\\u0011\\u0011\\u0011\\u0018\\u0017\\u0012\\u0012\\u0012\\u0012\\u0011\\u001b\\u001c(@QWC0\\u0016\\u0011\\u0019-\\u001e\\u0012\\u000f\\u0010\\u0013\\u0012\\u0012\\u0013\\u0012\\u0011\\u0011\\u0011\\u0010\\u0016\\u0018\\u0013\\u0010\\u0012\\u0012\\u0012\\f\\u000e\\u001e<Oon$00**\\u001d\\u0014\\u0011\\u0011\\u0013\\u0013\\u0014\\u0014\\u0011\\u0010\\u0011\\u0010\\u0010\\u0014\\u0018\\u0013\\u0012\\u0014\\u0013\\u0012\\u0016 7JIY|BRM$\\u0017\\u0017\\u0016\\u0013\\u0012\\u0013\\u0013\\u0013\\u0013\\u0012\\u0012\\u0012\\u0012\\u0010\\u0015\\u0019\\u0013\\u0014\\u0017\\u0013\\u0012*6G6(\\\"G[C&\\u000f\\u0012\\u0015\\u0014\\u0014\\u0013\\u0013\\u0013\\u0013\\u0012\\u0013\\u0012\\u0010\\u0010\\u0011\\u0012\\u0017\\u0012\\u0014\\u0017\\u0013\\u00125FI8.+8=\\u001c\\u000e\\r\\u0010\\u0013\\u0012\\u0014\\u0012\\u0011\\u0012\\u0012\\u0011\\u0012\\u0013\\u000f\\r\\u000e\\u0010\\u0013\\u0010\\u0012\\u0018\\u0012\\u0011M@+,(\\\"#'\\u0019\\u000e\\u0011\\u0012\\u0011\\u0011\\u0012\\u0012\\u0010\\u0010\\u0010\\u0012\\u0010\\u0014\\u0016\\u0014\\u0015\\u0012\\u0012\\u0011\\u0014\\u001c\\u0016\\u0013M*\\u0015\\u0014\\u0016\\u0012\\u001d!\\u0018\\r\\u0013\\u0013\\u0010\\u0010\\u0013\\u0015\\u0012\\u0011\\u0011\\u0011\\u000f\\u0011\\u0017\\u0016\\u0018\\u0016\\u0015\\u0013\\u0012\\u0015\\u0013\\u0012C%\\u0017\\u0011\\u0012\\u0014\\u001c!\\u0019\\u0014\\u0011\\u0012\\u000f\\u000f\\u0013\\u0016\\u0012\\u0011\\u0012\\u0010\\f\\u000e\\u000f\\u0010\\u0014\\u0017\\u0019\\u0014\\u0011\\u0010\\u000e\\u000f6\\u001c\\u0015\\u0010\\r\\u0010\\u0015\\u001d\\u0019\\u001c\\u0015\\u0011\\u0010\\u0010\\u0011\\u0012\\u0012\\u0011\\u0013\\u0011\\f\\f\\r\\u0014\\u001c\\u001f#%##%'.!\\u001a\\u0015\\u0016\\u001b #\\\"\\u001e\\u0019\\u0016\\u0014\\u0013\\u0013\\u0011\\u0010\\u0011\\u0012\\u000e\\u0014#'*,-16769;)'&#*..,*$)*''%$#&(#*4689=BDCCED()+.5652..825854567778:;@CHLMNPQ*-27<=;809:/056788888;<>CFKOQRTV\";\n\nexport default {\n  id: `testDataset`,\n  name: `cifar-10`,\n  imageSize: 32,\n  colorDepth: 3,\n  data: object,\n  vectorize: true,\n  normalizeMax: 255,\n};\n","import {vectorize, deepNormalize} from \"./math\";\n\nconst openDatasetFromBuffer = (buffer, imageColorDepth = 3, imageSize = 32) => {\n  const datasetArray = new Uint8Array(buffer);\n  const imageChannelPixelCount = imageSize * imageSize;\n  const imagePixelCount = imageChannelPixelCount * imageColorDepth;\n  const rowCount = imagePixelCount + 1;\n  const output = [];\n  console.log(datasetArray.length / rowCount, imageColorDepth, imageSize);\n  for (let n = 0; n < datasetArray.length / rowCount; n++) {\n    output[n] = {};\n    output[n].input = [];\n    output[n].label = datasetArray[n * rowCount];\n    for (let i = 0; i < imageColorDepth; i++) {\n      output[n].input[i] = [];\n\n      for (let j = 0; j < imageSize; j++) {\n        output[n].input[i][j] = [];\n        for (let k = 0; k < imageSize; k++) {\n          output[n].input[i][j][k] =\n            datasetArray[\n              n * (imagePixelCount + 1) +\n                i * imageChannelPixelCount +\n                j * imageSize +\n                k +\n                1\n            ];\n        }\n      }\n    }\n  }\n  return output;\n};\n\nconst vectorizeDatasetLabels = (dataset, outLength) => {\n  dataset.forEach(c => {\n    c.output = vectorize(c.label, outLength);\n  });\n  return dataset;\n};\n\nconst uint8ArrayToString = buf => {\n  const arr = new Uint8Array(buf);\n  if (arr.length > 60000) {\n    let outStr = \"\";\n    for (let i = 0; i <= arr.length - 1; i += 60000) {\n      outStr += String.fromCharCode.apply(null, arr.subarray(i, i + 60000));\n    }\n    return outStr;\n  } else return String.fromCharCode.apply(null, arr);\n};\n\nconst stringToUint8Array = str => {\n  var buf = new ArrayBuffer(str.length);\n  var bufView = new Uint8Array(buf);\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return bufView;\n};\n\nconst datasetToUint8Array = dataset => {\n  const imageSize = dataset[0].input[0].length;\n  const imageColorDepth = dataset[0].input.length;\n  const imageChannelPixelCount = imageSize * imageSize;\n  const imagePixelCount = imageChannelPixelCount * imageColorDepth;\n  const rowCount = imagePixelCount + 1;\n\n  const out = new Uint8Array(dataset.length * rowCount);\n  for (let n = 0; n < dataset.length; n++) {\n    out[n * rowCount] = dataset[n].label;\n    for (let i = 0; i < imageColorDepth; i++) {\n      for (let j = 0; j < imageSize; j++) {\n        for (let k = 0; k < imageSize; k++) {\n          out[\n            n * (imagePixelCount + 1) +\n              i * imageChannelPixelCount +\n              j * imageSize +\n              k +\n              1\n          ] = dataset[n].input[i][j][k];\n        }\n      }\n    }\n  }\n\n  return out;\n};\n\nconst normalizeInputData = (dataset, max) => {\n  dataset.forEach((data, i) => {\n    dataset[i].input = deepNormalize(dataset[i].input, max);\n  });\n  return dataset;\n};\n\nexport {\n  openDatasetFromBuffer,\n  datasetToUint8Array,\n  vectorizeDatasetLabels,\n  stringToUint8Array,\n  uint8ArrayToString,\n  normalizeInputData,\n};\n","import testDataset from \"./testDataset\";\nimport {\n  stringToUint8Array,\n  uint8ArrayToString,\n} from \"../CNN-js/datasetProcessor\";\nimport { CNN, NetworkArchitectures } from \"../CNN-js/cnn\";\n\n//init database\nconst openDb = () => {\n  return new Promise((resolve, reject) => {\n    const promiseDb = window.indexedDB.open(\"CNNjs-localStore\", 1);\n\n    promiseDb.onupgradeneeded = (event) => {\n      const db = event.target.result;\n      if (!db.objectStoreNames.contains(\"networks\")) {\n        db.createObjectStore(\"networks\", { keyPath: \"id\" });\n      }\n      if (!db.objectStoreNames.contains(\"datasets\")) {\n        db.createObjectStore(\"datasets\", { keyPath: \"id\" });\n      }\n    };\n\n    promiseDb.onsuccess = (db) => {\n      resolve(promiseDb.result);\n    };\n    promiseDb.onerror = (e) => reject(e);\n  });\n};\n\nconst addRecord = (store_name, data) => {\n  return new Promise((resolve, reject) => {\n    openDb().then((db) => {\n      const tx = db\n        .transaction(store_name, \"readwrite\")\n        .objectStore(store_name)\n        .put(data);\n\n      tx.onsuccess = () => {\n        resolve();\n      };\n      tx.onerror = (e) => {\n        reject(e);\n      };\n    });\n  });\n};\n\nconst getRecord = (store_name, id) => {\n  return new Promise((resolve, reject) => {\n    openDb().then((db) => {\n      const tx = db.transaction(store_name).objectStore(store_name).get(id);\n\n      tx.onsuccess = (event) => {\n        resolve(tx.result);\n      };\n      tx.onerror = (e) => {\n        reject(e);\n      };\n    });\n  });\n};\n\nconst getAllRecordsAsObject = (store_name, keyProp) => {\n  return new Promise((resolve, reject) => {\n    openDb().then((db) => {\n      const out = {};\n      db\n        .transaction(store_name, \"readonly\")\n        .objectStore(store_name)\n        .openCursor().onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          out[cursor.value[keyProp]] = cursor.value;\n          cursor.continue();\n        } else {\n          resolve(out);\n        }\n      };\n    });\n  });\n};\n\nexport function getNetworks(server) {\n  return new Promise(async (resolve, reject) => {\n    if (server.url === `local`) {\n      let localExisting = await getAllRecordsAsObject(`networks`, `id`);\n      if (!localExisting) {\n        localExisting = {};\n      }\n\n      const deserialized = {};\n\n      Object.keys(localExisting).forEach((stringCNNIndex) => {\n        const o = new CNN(localExisting[stringCNNIndex]);\n        o.name = localExisting[stringCNNIndex].name;\n        o.id = localExisting[stringCNNIndex].id;\n        deserialized[stringCNNIndex] = o;\n      });\n\n      resolve(deserialized);\n    } else {\n      fetch(`${server.url}/getNetworks`, {\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${server.apiToken}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.err) throw json.err;\n          resolve(json);\n        })\n        .catch(reject);\n    }\n  });\n}\n\nexport function createNetwork(name, shape, server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      const neuralNet = new CNN(shape || NetworkArchitectures.LeNet5);\n      neuralNet.serializeParams = [\"id\", \"name\"];\n      const net_id = new Date().getTime();\n      neuralNet.name = name || net_id;\n      neuralNet.id = net_id;\n      addRecord(\"networks\", JSON.parse(JSON.stringify(neuralNet)))\n        .then(() => {\n          resolve();\n        })\n        .catch((e) => reject(e));\n    } else {\n      fetch(\n        `${server.url}/createCnn?name=${name}&shape=${JSON.stringify(shape)}`,\n        {\n          method: `POST`,\n          headers: {\n            Authorization: `Bearer ${server.apiToken}`,\n          },\n        }\n      )\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.err) throw json.err;\n          resolve(json);\n        })\n        .catch(reject);\n    }\n  });\n}\n\nexport function getNetwork(id, server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      getRecord(`networks`, parseInt(id))\n        .then((saved) => {\n          console.log(saved);\n          if (saved) {\n            resolve(\n              Object.assign(new CNN(saved), {\n                name: saved.name,\n                id: saved.id,\n              })\n            );\n          } else {\n            reject(`Network doesn't exist`);\n          }\n        })\n        .catch(() => reject(`Local database error`));\n    } else {\n      fetch(`${server.url}/getNetwork/${id}`, {\n        headers: {\n          Authorization: `Bearer ${server.apiToken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          if (json.err) throw json.err;\n          else resolve(json);\n        })\n        .catch(reject);\n    }\n  });\n}\n\nexport function login(user, pass, server) {\n  return new Promise((resolve, reject) => {\n    fetch(`${server.url}/login`, {\n      method: `POST`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user,\n        pass,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.err) throw json.err;\n        else resolve(json.token);\n      })\n      .catch(reject);\n  });\n}\n\nexport function getDatasets(server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      getAllRecordsAsObject(`datasets`, `id`)\n        .then((localExisting) => {\n          if (!localExisting) {\n            localExisting = { testDataset: testDataset };\n          }\n\n          Object.keys(localExisting).forEach((id) => {\n            if (typeof localExisting[id].data === \"string\") {\n              localExisting[id].data = stringToUint8Array(\n                localExisting[id].data\n              );\n            }\n            localExisting[id].full = true;\n          });\n          resolve(localExisting);\n        })\n        .catch((e) => reject(e));\n    } else {\n      fetch(`${server.url}/getDatasets`, {\n        method: `GET`,\n        headers: {\n          Authorization: `Bearer ${server.apiToken}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          if (json.err) throw json.err;\n          //TODO: parse string data to uint8Array\n          resolve(json);\n        })\n        .catch(reject);\n    }\n  });\n}\n\nexport function getDataset(id, server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      getRecord(`datasets`, id)\n        .then((dataset) => {\n          resolve(dataset);\n        })\n        .catch((e) => reject(e));\n    } else {\n      fetch(`${server.url}/getDataset/${id}`, {\n        headers: {\n          Authorization: `Bearer ${server.apiToken}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((json) => {\n          if (json.err) throw json.err;\n          else resolve(json);\n        })\n        .catch(reject);\n    }\n  });\n}\n\nexport function newDataset(dataset, server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      addRecord(`datasets`, dataset)\n        .then(() => resolve())\n        .catch((e) => reject(e));\n    } else {\n      //TODO: newDataset on server\n    }\n  });\n}\n\nexport function setNetwork(network, server) {\n  return new Promise((resolve, reject) => {\n    if (server.url === `local`) {\n      addRecord(`networks`, JSON.parse(JSON.stringify(network)))\n        .then(() => resolve())\n        .catch((e) => reject(e));\n    } else {\n      //TODO: newDataset on server\n    }\n  });\n}\n","import {\n  getNetworks,\n  createNetwork,\n  getNetwork,\n  setNetwork as setNetworkApi,\n} from \"../../other/api\";\n\nimport { CNN } from \"../../CNN-js/cnn\";\n\nexport const FETCH_NETWORKS_REQUEST = `FETCH_NETWORKS_REQUEST`;\nexport const FETCH_NETWORKS_SUCCESS = `FETCH_NETWORKS_SUCCESS`;\nexport const FETCH_NETWORKS_ERROR = `FETCH_NETWORKS_ERROR`;\nexport const UNLOAD_NETWORKS = `UNLOAD_NETWORKS`;\n\nexport const NEW_NETWORK_REQUEST = `NEW_NETWORK_REQUEST`;\nexport const NEW_NETWORK_SUCCESS = `NEW_NETWORK_SUCCESS`;\nexport const NEW_NETWORK_ERROR = `NEW_NETWORK_ERROR`;\n\nexport const FETCH_NETWORK_REQUEST = `FETCH_NETWORK_REQUEST`;\nexport const FETCH_NETWORK_SUCCESS = `FETCH_NETWORK_SUCCESS`;\nexport const FETCH_NETWORK_ERROR = `FETCH_NETWORK_ERROR`;\n\nexport const SET_NETWORK_REQUEST = `SET_NETWORK_REQUEST`;\nexport const SET_NETWORK_SUCCESS = `SET_NETWORK_SUCCESS`;\nexport const SET_NETWORK_ERROR = `SET_NETWORK_ERROR`;\n\nexport const setNetworkRequest = ({ server, network }) => ({\n  type: SET_NETWORK_REQUEST,\n  server,\n  network,\n});\n\nexport const setNetworkSuccess = ({ server, network }) => ({\n  type: SET_NETWORK_SUCCESS,\n  server,\n  network,\n});\n\nexport const setNetworkError = ({ server, network, err }) => ({\n  type: SET_NETWORK_ERROR,\n  server,\n  network,\n  err,\n});\n\nexport const newNetworkRequest = () => ({\n  type: NEW_NETWORK_REQUEST,\n});\nexport const newNetworksSuccess = () => ({\n  type: NEW_NETWORK_SUCCESS,\n});\nexport const newNetworkError = ({ error }) => ({\n  type: NEW_NETWORK_ERROR,\n  error,\n});\n\nexport const requestNetworks = ({ server }) => ({\n  type: FETCH_NETWORKS_REQUEST,\n  server,\n});\nexport const networksSuccess = ({ networks, server }) => ({\n  type: FETCH_NETWORKS_SUCCESS,\n  networks,\n  server,\n});\nexport const networksError = ({ err, server }) => ({\n  type: FETCH_NETWORKS_ERROR,\n  error: err,\n  server,\n});\n\nexport const unloadNetworks = ({ server }) => ({\n  type: UNLOAD_NETWORKS,\n  server,\n});\n\nexport const requestNetwork = ({ server, networkId }) => ({\n  type: FETCH_NETWORK_REQUEST,\n  networkId: networkId,\n  server,\n});\nexport const networkSuccess = ({ server, network }) => ({\n  type: FETCH_NETWORK_SUCCESS,\n  network,\n  networkId: network.id,\n  server,\n});\nexport const networkError = ({ server, networkId, err }) => ({\n  type: FETCH_NETWORK_ERROR,\n  error: err,\n  networkId: networkId,\n  server,\n});\n\nexport const fetchNetworks = (server, dispatch) => {\n  dispatch(requestNetworks({ server }));\n  getNetworks(server)\n    .then((networks) => {\n      Object.keys(networks).forEach((n) => (networks[n].reduced = true));\n      dispatch(networksSuccess({ networks, server }));\n    })\n    .catch((err) => dispatch(networksError({ err, server })));\n};\n\nexport const newNetwork = (name, shape, server, dispatch) => {\n  dispatch(newNetworkRequest());\n  createNetwork(name, shape, server)\n    .then(() => {\n      console.log(`complete`);\n      fetchNetworks(server, dispatch)\n        .then(() => {\n          dispatch(newNetworksSuccess());\n        })\n        .catch((err) => {\n          throw err;\n        });\n    })\n    .catch((err) => {\n      dispatch(newNetworkError({ error: err }));\n    });\n};\n\nexport const fetchNetwork = (networkId, server, dispatch) => {\n  dispatch(requestNetwork({ server, networkId }));\n  getNetwork(networkId, server)\n    .then((net) => {\n      dispatch(networkSuccess({ server, network: net }));\n    })\n    .catch((err) => {\n      dispatch(networkError({ server, networkId, err }));\n    });\n};\n\nexport const setNetwork = (\n  server,\n  network,\n  dispatch\n  //fetchNetworksAfter = true\n) => {\n  if (!(network instanceof CNN)) {\n    network = Object.assign(new CNN(network), {\n      id: network.id,\n      name: network.name,\n    });\n  }\n\n  dispatch(setNetworkRequest({ server, network }));\n  setNetworkApi(network, server)\n    .then(() => {\n      //if (fetchNetworksAfter) fetchNetworks(server, dispatch);\n      dispatch(setNetworkSuccess({ server, network }));\n    })\n    .catch((err) => dispatch(setNetworkError({ server, network, err })));\n};\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\n//redux\nimport { connect } from \"react-redux\";\n\n//res\nimport { TiPlus } from \"react-icons/ti\";\n\n// router\nimport { Link } from \"react-router-dom\";\n\nconst cardWrapperCss = css`\n  width: 13em;\n  height: 15em;\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  margin: 0.7em;\n  flex-grow: 0;\n  flex-shrink: 0;\n\n  transform: scale(1);\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n\n  background: ${(props) => props.backgroundbyelevation(1)};\n  text-decoration: none;\n  color: ${(props) => props.accenttextcolor};\n  display: block;\n`;\n\nconst CardWrapper = styled(Link)`\n  ${cardWrapperCss}\n`;\n\nconst CardWrapperNoLink = styled.div`\n  ${cardWrapperCss}\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst BottomWrapper = styled.div`\n  height: 30%;\n  width: 100%;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n`;\n\nconst NetworkTitle = styled.h4`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  margin: 0;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n`;\n\nconst NetworkImage = styled.img`\n  width: 100%;\n  display: block;\n  flex-grow: 0;\n`;\n\nconst NetworkImageDiv = styled.div`\n  height: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n`;\n\nexport default connect((state) => state)(\n  ({ colors, network, server, draggable, onClick, getRef }) => {\n    /*\n    // draggable too buggy\n    const [dragging, setDragging] = useState(false);\n    const [cardPosition, setCardPosition] = useState();\n\n    const cardRef = React.createRef();\n    const replacementCardRef = React.createRef();*/\n\n    const Wrapper = onClick ? CardWrapperNoLink : CardWrapper;\n\n    return (\n      <Wrapper\n        to={onClick ? \"\" : `/networks/${server}/${network.id}`}\n        onClick={onClick}\n        {...colors}\n        ref={getRef && ((ref) => getRef(ref))}\n        /*\n        // draggable too buggy\n        \n        ref={cardRef}\n        onMouseDown={\n          draggable\n            ? function(e) {\n                var draggingElement = cardRef.current;\n                var clientRect = draggingElement.getBoundingClientRect();\n                e.preventDefault();\n                var dragStart = { x: e.clientX, y: e.clientY };\n                var localDragging = false;\n                var draggingOffset = {\n                  x: e.clientX - clientRect.left,\n                  y: e.clientY - clientRect.top\n                };\n\n                const dragHandler = e1 => {\n                  if (!localDragging) {\n                    if (\n                      Math.abs(e1.clientX - dragStart.x) > 10 ||\n                      Math.abs(e1.clientY - dragStart.y) > 10\n                    ) {\n                      setDragging(true);\n                      localDragging = true;\n                    }\n                  } else {\n                    draggingElement.style.position = `absolute`;\n                    draggingElement.style.left =\n                      e1.clientX - draggingOffset.x + `px`;\n                    draggingElement.style.top =\n                      e1.clientY - draggingOffset.y + `px`;\n                  }\n                };\n\n                const mouseUpHandler = () => {\n                  localDragging = false;\n                  document.removeEventListener(\"mousemove\", dragHandler);\n                  document.removeEventListener(\"mousemove\", mouseUpHandler);\n                };\n\n                document.addEventListener(\"mousemove\", dragHandler);\n                document.addEventListener(\"mouseup\", mouseUpHandler);\n              }\n            : undefined\n        }\n        onClick={\n          dragging\n            ? e => {\n                e.preventDefault();\n                setDragging(false);\n              }\n            : undefined\n        }*/\n      >\n        <NetworkImageDiv>\n          <NetworkImage\n            src=\"https://cdn3.iconfinder.com/data/icons/various-networks/64/backpropagation_neural_network-512.png\"\n            alt=\"neural network icon\"\n          />\n        </NetworkImageDiv>\n        <BottomWrapper>\n          <NetworkTitle>{network.name}</NetworkTitle>\n        </BottomWrapper>\n      </Wrapper>\n    );\n  }\n);\n\nconst AddNetworkWrapper = styled.div`\n  ${cardWrapperCss}\n  border:2px ${(props) => props.color} dashed;\n  display:flex;\n  justify-content:center;\n  flex-direction:row;\n  align-items:center;\n  background:${(props) => props.backgroundbyelevation(1)};\n  box-sizing:border-box;\n  font-size: 1em;\n  position:relative;\n\n  /* &:hover{\n    cursor:pointer;\n  } */\n\n  ${(props) =>\n    props.nohover &&\n    css`\n      &:hover {\n        transform: scale(1);\n      }\n    `}\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledSubmit = styled.input`\n  position: absolute;\n  bottom: 1em;\n  width: calc(100% - 2em);\n  box-sizing: border-box;\n`;\n\nconst InputRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledInput = styled.input`\n  padding: 5px;\n  box-sizing: border-box;\n  border-radius: 5px;\n  border: none;\n  width: calc(100% - 5em);\n  margin: 1em;\n`;\n\nexport const AddNetworkCard = connect((state) => state)(\n  ({ colors, onclick, networks }) => {\n    const [name, setName] = useState(``);\n    const [networkShapeIndex, setNetworkShapeIndex] = useState(0);\n    const [show, setShow] = useState(false);\n\n    return (\n      <AddNetworkWrapper\n        color={colors.primaryColor}\n        backgroundbyelevation={colors.backgroundbyelevation}\n        onClick={() => setShow(true)}\n        nohover={show}\n      >\n        {show && (\n          <StyledForm\n            onSubmit={(e) => {\n              e.preventDefault();\n              if (name) {\n                onclick(\n                  name,\n                  networks.networkArchitectures[\n                    Object.keys(networks.networkArchitectures)[\n                      networkShapeIndex\n                    ]\n                  ]\n                );\n              }\n            }}\n          >\n            <StyledInput\n              type=\"text\"\n              value={name}\n              onChange={(evt) => setName(evt.target.value)}\n              placeholder={`Network name`}\n            />\n            <select\n              onChange={(e) => setNetworkShapeIndex(JSON.parse(e.target.value))}\n              value={networkShapeIndex}\n            >\n              {Object.keys(networks.networkArchitectures).map((name, i) => {\n                return <option value={i}>{name}</option>;\n              })}\n            </select>\n            <StyledSubmit type=\"submit\" />\n          </StyledForm>\n        )}\n        {!show && <TiPlus color={colors.primaryColor} />}\n      </AddNetworkWrapper>\n    );\n  }\n);\n\nconst NetworkCardParentWrapper = styled.div`\n  padding: 1em;\n  /* padding-right: 0; */\n  padding-bottom: 0;\n\n  width: 100%;\n  box-sizing: border-box;\n\n  transition: 0.5s padding;\n\n  ${(props) =>\n    props.small &&\n    css`\n      padding-right: 1em;\n    `}\n`;\n\nconst Title = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n\n  ${(props) =>\n    props.cardMode &&\n    css`\n      box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14),\n        0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);\n      margin: 0;\n      padding: 0.5em;\n      border-radius: 5px;\n    `}\n\n  transition: .5s;\n`;\n\nconst NetworkCards = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n  box-sizing: border-box;\n  padding: 1em;\n  padding-right: 0;\n  box-sizing: border-box;\n  height: auto;\n\n  ${CardWrapper}:first-child {\n    margin-left: 0;\n  }\n\n  transition: 0.5s height, 0.5s padding;\n  ${(props) =>\n    props.small &&\n    css`\n      height: 0;\n      padding: 0;\n    `}\n`;\n\nconst NetworkScreenTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst FlexCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const NetworkCardParent = ({\n  children,\n  title,\n  small,\n  customRightButton,\n}) => (\n  <NetworkCardParentWrapper small={small}>\n    <div>\n      {!customRightButton && <Title cardMode={small}>{title}</Title>}\n      {customRightButton && (\n        <NetworkScreenTitleWrapper>\n          <Title cardMode={small}>{title}</Title>\n          <FlexCenter>{customRightButton}</FlexCenter>\n        </NetworkScreenTitleWrapper>\n      )}\n    </div>\n    <NetworkCards small={small}>{children}</NetworkCards>\n  </NetworkCardParentWrapper>\n);\n","import { login } from \"../../other/api\";\n\nexport const FETCH_SERVER_LOGIN_REQUEST = `FETCH_SERVER_LOGIN_REQUEST`;\nexport const FETCH_SERVER_LOGIN_SUCCESS = `FETCH_SERVER_LOGIN_SUCCESS`;\nexport const FETCH_SERVER_LOGIN_ERROR = `FETCH_SERVER_LOGIN_ERROR`;\n\nexport const requestLogin = ({ server }) => ({\n  type: FETCH_SERVER_LOGIN_REQUEST,\n  server\n});\n\nexport const loginSuccess = ({ server, apiToken }) => ({\n  type: FETCH_SERVER_LOGIN_SUCCESS,\n  server,\n  apiToken\n});\n\nexport const loginError = ({ err, server }) => ({\n  type: FETCH_SERVER_LOGIN_ERROR,\n  error: err,\n  server\n});\n\nexport const loginToServer = (user, pass, server, dispatch) => {\n  dispatch(requestLogin({ server }));\n  login(user, pass, server)\n    .then(apiToken => {\n      dispatch(loginSuccess({ apiToken, server }));\n    })\n    .catch(err => dispatch(loginError({ err, server })));\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { loginToServer } from \"../redux/actions/servers\";\nimport { connect } from \"react-redux\";\n\nimport { unloadNetworks } from \"../redux/actions/networks\";\n\nconst ServerLoginWrapper = styled.div`\n  background: ${props => props.backgroundbyelevation(1)};\n  height: 2em;\n  padding: 10px;\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledInput = styled.input`\n  padding: 5px;\n  &:not(:first-child) {\n    margin-left: 1em;\n  }\n  height: 100%;\n  box-sizing: border-box;\n  border-radius: 5px;\n  border: none;\n  background: none;\n  color: ${props => props.subaccenttextcolor};\n`;\n\nconst StyledInputButton = styled.input`\n  box-sizing: border-box;\n  margin-left: 1em;\n  border-radius: 5px;\n  height: 100%;\n  background: white;\n  border-width: 1px;\n  border-style: solid;\n  border-color: rgba(0, 0, 0, 0.16) rgb(0, 0, 0, 0.18) rgb(0, 0, 0, 0.27);\n  background: none;\n  color: ${props => props.textcolor};\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ErrorDiv = styled.div`\n  background: ${props => props.errorcolor};\n  border-radius: 5px;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  margin: 10px;\n  color: white;\n`;\n\nexport default connect(\n  state => state,\n  dispatch => ({\n    loginServer: (user, pass, server) =>\n      loginToServer(user, pass, server, dispatch),\n    unload: server => dispatch(unloadNetworks({ server }))\n  })\n)(({ server, loginServer, colors, unload }) => {\n  const [user, setUser] = useState(``);\n  const [pass, setPass] = useState(``);\n\n  return (\n    <>\n      <ServerLoginWrapper {...colors}>\n        <form\n          onSubmit={evt => {\n            evt.preventDefault();\n            unload(server);\n            loginServer(user, pass, server);\n          }}\n        >\n          <StyledInput\n            type=\"text\"\n            value={user}\n            onChange={event => setUser(event.target.value)}\n            placeholder={`username`}\n            {...colors}\n          />\n          <StyledInput\n            type=\"password\"\n            value={pass}\n            onChange={event => setPass(event.target.value)}\n            placeholder={`password`}\n            {...colors}\n          />\n          <StyledInputButton type=\"submit\" value={`Login`} {...colors} />\n        </form>\n      </ServerLoginWrapper>\n      {server.error && <ErrorDiv {...colors}>{server.error}</ErrorDiv>}\n    </>\n  );\n});\n","import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { MdReplay } from \"react-icons/md\";\n\nconst ErrorDiv = styled.div`\n  background: ${(props) => props.errorcolor};\n  padding: 10px;\n  border-radius: 5px;\n  color: white;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const translateError = (error) => {\n  let strError = `${error}`;\n  console.error(error);\n  console.error(error.stack);\n  return `Server unavailable`;\n};\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(-360deg);\n  }\n`;\n\nconst StyledReplay = styled(MdReplay)`\n  margin-left: 5px;\n  animation: ${(props) => (props.spinning ? rotate : `none`)} 2s linear infinite;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport default connect((state) => state)(({ error, colors, retryFunction }) => {\n  const [animation, setAnimation] = useState(false);\n  console.log(error);\n  if (!(error instanceof String)) error = error.toString() || error;\n  return (\n    <ErrorDiv errorcolor={colors.errorcolor}>\n      {error}\n      {retryFunction && (\n        <StyledReplay\n          spinning={animation}\n          onClick={(props) => {\n            setAnimation(true);\n            retryFunction(props);\n          }}\n        />\n      )}\n    </ErrorDiv>\n  );\n});\n","import React, { useState } from \"react\";\n\nimport { useSpring, animated, config } from \"react-spring\";\n\nimport styled from \"styled-components\";\n\nimport { connect } from \"react-redux\";\n\nconst Wrapper = styled(animated.div)`\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst AnimatedCard = styled(animated.div)`\n  background: ${(props) => props.backgroundbyelevation(1)};\n  position: absolute;\n  z-index: 2000;\n`;\n\nconst AnimFSC = ({\n  startFromElement,\n  contentFunction,\n  colors,\n  fullscreen,\n  onCloseCallback,\n}) => {\n  const [innerDivRef, setInnerDivRef] = useState();\n  const [wrapperRef, setWrapperRef] = useState();\n  const [resizeUpdater, setResizeUpdater] = useState(0);\n  const [closing, setClosing] = useState(false);\n  const [closed, setClosed] = useState(false);\n  const prevStyle = startFromElement.getBoundingClientRect();\n  const startComputedStyle = window.getComputedStyle(startFromElement);\n\n  if (startFromElement.style) {\n    startFromElement.style.opacity = `0`;\n  } else {\n    startFromElement.style = `opacity:0`;\n  }\n\n  if (closed) {\n    if (onCloseCallback) onCloseCallback();\n  }\n\n  const wrapperDivStyle = (wrapperRef &&\n    wrapperRef.getBoundingClientRect()) || {\n    top: 0,\n    left: 0,\n    height: 0,\n    width: 0,\n  };\n\n  const innerDivStyle = (!fullscreen &&\n    innerDivRef &&\n    innerDivRef.getBoundingClientRect()) || {\n    top: 0,\n    left: 0,\n    height: Math.max(0, wrapperDivStyle.height - 50),\n    width: Math.max(0, wrapperDivStyle.width - 50),\n  };\n\n  const startAnimatedProps = {\n    top: prevStyle.top + `px`,\n    left: prevStyle.left + `px`,\n    width: prevStyle.width + `px`,\n    height: prevStyle.height + `px`,\n    boxShadow: startComputedStyle.boxShadow,\n    borderWidth:\n      startComputedStyle.borderWidth || startComputedStyle[\"border-top-width\"],\n  };\n\n  const cardProps = useSpring({\n    from: startAnimatedProps,\n    to: closing\n      ? startAnimatedProps\n      : {\n          width: innerDivStyle.width + `px`,\n          height: innerDivStyle.height + `px`,\n          top:\n            parseInt((wrapperDivStyle.height - innerDivStyle.height) / 2) +\n            `px`,\n          left:\n            parseInt((wrapperDivStyle.width - innerDivStyle.width) / 2) + `px`,\n          borderRadius: startComputedStyle[\"border-top-left-radius\"],\n          borderColor:\n            startComputedStyle.borderColor ||\n            startComputedStyle[\"border-top-color\"],\n          borderStyle:\n            startComputedStyle.borderStyle ||\n            startComputedStyle[\"border-top-style\"],\n          borderWidth: `0px`,\n          opacity: 1,\n        },\n    config: closing ? { ...config.gentle, clamp: true } : config.gentle,\n    onRest: () => {\n      if (closing) {\n        setClosed(true);\n        setClosing(false);\n        startFromElement.style.opacity = 1;\n      }\n    },\n  });\n\n  const wrapperProps = useSpring({\n    to: {\n      background: closing ? `rgba(0, 0, 0, 0)` : `rgba(0, 0, 0, 0.2)`,\n    },\n    from: {\n      background: `rgba(0, 0, 0, 0)`,\n    },\n  });\n\n  const resizeHandler = () => setResizeUpdater(Math.random());\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", resizeHandler);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler);\n    };\n  }, []);\n\n  return (\n    <Wrapper\n      ref={(ref) => setWrapperRef(ref)}\n      onClick={(e) => (e.target === wrapperRef ? setClosing(true) : false)}\n      style={wrapperProps}\n    >\n      <AnimatedCard {...colors} style={cardProps}>\n        <div\n          ref={(ref) => setInnerDivRef(ref)}\n          style={\n            fullscreen\n              ? { height: `100%`, width: `100%`, boxSizing: `border-box` }\n              : {}\n          }\n        >\n          {contentFunction(() => setClosing(true))}\n        </div>\n      </AnimatedCard>\n    </Wrapper>\n  );\n};\n\nexport default connect((state) => state)(AnimFSC);\n","import React, { Component } from \"react\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport {\n  fetchNetworks,\n  newNetwork,\n  setNetwork,\n} from \"../redux/actions/networks\";\n\n// components\nimport NetworkCard, {\n  NetworkCardParent,\n  AddNetworkCard,\n} from \"../components/NetworkCard\";\nimport ServerLogin from \"../components/ServerLogin\";\nimport Error, { translateError } from \"../components/Error\";\n\nimport { NetworkArchitectures, CNN } from \"../CNN-js/cnn\";\nimport { SyncLoader } from \"react-spinners\";\n\nimport styled from \"styled-components\";\nimport AnimatedFullScreenCard from \"../components/AnimatedFullScreenCard\";\nimport Dropzone from \"react-dropzone\";\n\nconst DownloadButton = styled.div`\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  background: ${(props) => props.primarycolor};\n  color: ${(props) => props.primarytextcolor};\n  border: none;\n  text-decoration: none;\n  border-radius: 5px;\n  box-sizing: content-box;\n  padding: 1em;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst InnerNetworkSelect = styled.div`\n  border-radius: 5px;\n  padding: 1em;\n  overflow: hidden;\n`;\n\nconst Title = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst FileSelect = styled.div`\n  padding: 1em;\n  border-radius: 5px;\n  margin-top: 1em;\n  border: 1px solid gray;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ConfirmButton = styled.div`\n  background: ${(props) => props.primarycolor};\n  color: ${(props) => props.primarytextcolor};\n  padding: 1em;\n  border-radius: 5px;\n  margin-top: 1em;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nclass Networks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      networkGroupsSmall: false,\n      downloadRef: {},\n      importServer: undefined,\n      importNetworkName: undefined,\n    };\n  }\n\n  componentWillMount() {\n    this.props.servers.servers.map((server) => {\n      this.props.getNetworks(server);\n    });\n  }\n  componentWillUpdate() {\n    this.props.servers.servers.map((server) => {\n      if (\n        !this.props.networks.networks[server.uniqueName] &&\n        !this.props.networks.isLoading[server.uniqueName] &&\n        !this.props.networks.error[server.uniqueName]\n      )\n        this.props.getNetworks(server);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          {this.props.servers.servers.map((server) => {\n            return (\n              <NetworkCardParent\n                title={server.uniqueName}\n                customRightButton={\n                  <DownloadButton\n                    ref={(r) =>\n                      !this.state.downloadRef[server.uniqueName] &&\n                      this.setState((prevState) => ({\n                        downloadRef: Object.assign({}, prevState.downloadRef, {\n                          [server.uniqueName]: r,\n                        }),\n                      }))\n                    }\n                    onClick={() => {\n                      this.setState({ importServer: server });\n                    }}\n                    {...this.props.colors}\n                  >\n                    Import\n                  </DownloadButton>\n                }\n                small={this.props.networkGroupsSmall}\n                key={`${server.uniqueName}_network_display_group`}\n              >\n                {!this.props.networks.isLoading[server.uniqueName] &&\n                  !this.props.networks.error[server.uniqueName] &&\n                  this.props.networks.networks[server.uniqueName] && (\n                    <>\n                      {Object.keys(\n                        this.props.networks.networks[server.uniqueName]\n                      ).map((id) => {\n                        return (\n                          <NetworkCard\n                            network={\n                              this.props.networks.networks[server.uniqueName][\n                                id\n                              ]\n                            }\n                            draggable={true}\n                            server={server.uniqueName}\n                          />\n                        );\n                      })}\n                      <AddNetworkCard\n                        onclick={(name, shape) => {\n                          this.props.createNewNetwork(name, shape, server);\n                        }}\n                      />\n                    </>\n                  )}\n\n                {this.props.networks.isLoading[server.uniqueName] && (\n                  <div>\n                    <SyncLoader />\n                  </div>\n                )}\n                {this.props.networks.error[server.uniqueName] &&\n                  this.props.networks.error[server.uniqueName] !==\n                    `Unauthorized` && (\n                    <div>\n                      <Error\n                        error={translateError(\n                          this.props.networks.error[server.uniqueName]\n                        )}\n                        retryFunction={() => this.props.getNetworks(server)}\n                      />\n                    </div>\n                  )}\n                {this.props.networks.error[server.uniqueName] ===\n                  `Unauthorized` && <ServerLogin server={server} />}\n              </NetworkCardParent>\n            );\n          })}\n        </div>\n        {this.state.importServer && (\n          <AnimatedFullScreenCard\n            startFromElement={\n              this.state.downloadRef[this.state.importServer.uniqueName]\n            }\n            fullscreen={true}\n            onCloseCallback={() => this.setState({ importServer: undefined })}\n            contentFunction={(close) => (\n              <InnerNetworkSelect {...this.props.colors}>\n                <Title>Upload network file</Title>\n                <Dropzone\n                  onDrop={(acceptedFiles) => {\n                    const file = acceptedFiles[0];\n\n                    const reader = new FileReader();\n\n                    reader.onabort = () =>\n                      console.log(\"file reading was aborted\");\n                    reader.onerror = () =>\n                      console.log(\"file reading has failed\");\n                    reader.onload = () => {\n                      const networkJSON = JSON.parse(reader.result);\n                      this.setState({\n                        importNetworkName: networkJSON.name,\n                        networkJSON,\n                      });\n                    };\n                    reader.readAsText(file);\n                  }}\n                >\n                  {({ getRootProps, getInputProps }) => (\n                    <section>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <FileSelect>\n                          {this.state.importNetworkName ||\n                            `Drag 'n' drop some file here, or click to select files`}\n                        </FileSelect>\n                      </div>\n                    </section>\n                  )}\n                </Dropzone>\n                <ConfirmButton\n                  {...this.props.colors}\n                  onClick={() => {\n                    this.props.setNetwork(\n                      this.state.importServer,\n                      this.state.networkJSON\n                    );\n                    close();\n                  }}\n                >\n                  Confirm\n                </ConfirmButton>\n              </InnerNetworkSelect>\n            )}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    getNetworks: (server) => fetchNetworks(server, dispatch),\n    createNewNetwork: (name, shape, server) =>\n      newNetwork(name, shape, server, dispatch),\n    setNetwork: (server, network) => setNetwork(server, network, dispatch),\n  })\n)(Networks);\n","/**\n * Computes the maximum of each property\n * @param {Array<Object>} dataArray array of data objects\n */\nconst maxProperties = (dataArray) => {\n  const max = Object.assign({}, dataArray[0]);\n  dataArray.forEach((d) => {\n    Object.keys(d).forEach((key) => {\n      if (d[key] > max[key] || max[key] == undefined) {\n        max[key] = d[key];\n      }\n    });\n  });\n  return max;\n};\n\n/**\n * Computes the minimum of each property\n * @param {Array<Object>} dataArray array of data objects\n */\nexport const minProperties = (dataArray) => {\n  const min = Object.assign({}, dataArray[0]);\n  dataArray.forEach((d) => {\n    Object.keys(d).forEach((key) => {\n      if (d[key] < min[key] || min[key] == undefined) {\n        min[key] = d[key];\n      }\n    });\n  });\n  return min;\n};\n\n/**\n * Normalizes all properties min-max -> 0-1\n * @param {Array<Object>} dataArray\n * @param {Number} nanValue (optional) if all props are the same, normalization returns NaN. Instead of NaN, this function returns `nanValue`\n */\nexport const normalizeData = (dataArray, nanValue = NaN) => {\n  const max = maxProperties(dataArray);\n  const min = minProperties(dataArray);\n  const normalized = dataArray.map((data) => {\n    const normalizedRecord = {};\n    Object.keys(min).forEach((key) => {\n      normalizedRecord[key] =\n        data[key] === min[key]\n          ? nanValue\n          : (data[key] - min[key]) / (max[key] - min[key]);\n    });\n    return normalizedRecord;\n  });\n  return normalized;\n};\n\nexport const exportText = (data, fileName) => {\n  var a = window.document.createElement(\"a\");\n  a.href = window.URL.createObjectURL(new Blob([data], { type: \"text/plain\" }));\n  a.download = fileName;\n\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useState } from \"react\";\nimport { deepMap } from \"../CNN-js/math\";\n\nexport default ({ style, array, slice, width, height }) => {\n  const [ref, setRef] = useState(null);\n\n  if (ref) {\n    let imageData = [];\n    let width, height;\n    if (array) {\n      for (let i = 0; i < array[0].length; i++) {\n        imageData = imageData.concat(\n          array[0][i].reduce(\n            (prev, d, j) =>\n              prev.concat([\n                array[0][i][j],\n                (array[1] && array[1][i][j]) || array[0][i][j],\n                (array[2] && array[2][i][j]) || array[0][i][j],\n                255,\n              ]),\n            []\n          )\n        );\n      }\n      width = array[0][0].length;\n      height = array[0].length;\n    } else if (slice) {\n      const positiveSlice = deepMap(slice, (x) => Math.max(0, x));\n      const negativeSlice = deepMap(slice, (x) => Math.min(0, x));\n\n      for (let i = 0; i < slice.length; i++) {\n        imageData = imageData.concat(\n          slice[i].reduce(\n            (prev, d, j) =>\n              prev.concat([\n                negativeSlice[i][j] * 255,\n                positiveSlice[i][j] * 255,\n                0,\n                255,\n              ]),\n            []\n          )\n        );\n      }\n\n      width = slice[0].length;\n      height = slice.length;\n    }\n    ref\n      .getContext(\"2d\")\n      .putImageData(\n        new ImageData(new Uint8ClampedArray(imageData), width, height),\n        0,\n        0\n      );\n  }\n\n  return (\n    <canvas\n      style={height && width ? { width, height, ...style } : style}\n      height={array ? array[0].length : slice.length}\n      width={array ? array[0][0].length : slice[0].length}\n      ref={(r) => setRef(r)}\n    ></canvas>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\n\n//utils\nimport { normalizeData } from \"../other/utils\";\n\n// components\nimport Error from \"./Error\";\nimport { IoIosArrowRoundForward } from \"react-icons/io\";\nimport { connect } from \"react-redux\";\nimport LayerCanvas from \"./LayerCanvas\";\n\nimport { LayerType } from \"../CNN-js/cnn\";\n\nconst WrapperCard = styled.div`\n  width: 100%;\n`;\n\nconst NetworkVisualWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow-x: auto;\n  padding: 2em;\n  box-sizing: border-box;\n`;\n\nconst NetworkLayer = styled.div`\n  width: 7em;\n  height: 7em;\n  margin: 1em;\n  overflow-y: auto;\n  overflow-x: hidden;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst FilterLayer = styled.div`\n  width: 16em;\n  height: 7em;\n  margin: 1em;\n  overflow-y: auto;\n  overflow-x: hidden;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst NetworkFilterAndInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst NetworkLayerWrapper = styled.div`\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  padding: 10px;\n  background: ${(props) => props.backgroundbyelevation(1)};\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst LayerTypeTitle = styled.h5`\n  width: 100%;\n  text-align: center;\n`;\n\nconst LayerSpacer = styled.div`\n  width: 1em;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: ${0.83 + 1.67 + 1.3}em;\n  padding: 10px;\n`;\n\n//NETWORK LAYERS\nconst minCONVSize = 1;\nconst maxCONVSize = 5;\n\nconst getSliceSize = (\n  normalizedLayer,\n  min = minCONVSize,\n  max = maxCONVSize\n) => ({\n  w: min + normalizedLayer.w * (max - min),\n  h: min + normalizedLayer.h * (max - min),\n});\n\nconst getFilterSliceSize = (sliceSize, filterSize) =>\n  Math.min(sliceSize.w, sliceSize.h) * filterSize;\n\nconst LAYER_STACK_slice = styled(animated.div)`\n  width: ${(props) => getSliceSize(props).w}em;\n  height: ${(props) => getSliceSize(props).h}em;\n  margin: 1em;\n  background: ${(props) => props.backgroundbyelevation(3)};\n  border: 1px solid ${(props) => (props.darkMode ? `gray` : props.primarycolor)};\n  border-radius: 3px;\n  position: absolute;\n  z-index: ${(props) => 300 - props.i};\n  overflow: hidden;\n`;\nconst LAYER_STACK_filter_wrapper = styled(animated.div)`\n  width: ${(props) => getSliceSize(props).w}em;\n  height: ${(props) => getSliceSize(props).h}em;\n  margin: 1em;\n\n  position: absolute;\n  z-index: ${(props) => 300 - props.i};\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst LAYER_STACK_FILTER_inner = styled(animated.div)`\n  width: ${(props) => {\n    return getFilterSliceSize(getSliceSize(props), props.f);\n  }}em;\n  height: ${(props) => {\n    return getFilterSliceSize(getSliceSize(props), props.f);\n  }}em;\n  box-sizing: border-box;\n  max-height: 100%;\n  max-width: 100%;\n  background: ${(props) => props.backgroundbyelevation(3)};\n  border: 1px solid ${(props) => (props.darkMode ? `gray` : props.primarycolor)};\n  border-radius: 3px;\n  overflow: hidden;\n  position: relative;\n`;\nconst LAYER_STACK_wrapper = styled(animated.div)`\n  position: relative;\n`;\nconst LAYER_STACK_slice_component = connect((state) => ({\n  colors: state.colors,\n}))(\n  ({\n    layer,\n    i,\n    withData,\n    layerNormalized,\n    extended,\n    filter,\n    colors,\n    layerData,\n    filterData,\n  }) => {\n    const { w: slicewidth, h: sliceheight } = getSliceSize(layerNormalized);\n    const layerSliceProps = useSpring({\n      top: extended ? `${(sliceheight + 2) * i}em` : `-${i / 5}em`,\n      //                                ^ don't forget the margin\n      left: extended ? `0em` : `${i / 5}em`,\n      opacity: extended ? `1` : `${Math.max(1 - i / 10, 0)}`,\n      from:\n        i < 10\n          ? {\n              left: `${i / 5}em`,\n              top: `-${i / 5}em`,\n              opacity: `${Math.max(1 - i / 10, 0)}`,\n            }\n          : {},\n    });\n\n    const filterProps = useSpring({\n      boxShadow: extended\n        ? `0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.20)`\n        : `0 0px 0px 0 rgba(0,0,0,0.14), 0 0px 0px 0 rgba(0,0,0,0.12), 0 0px 0px 0px rgba(0,0,0,0.20)`,\n      from: {\n        boxShadow: `0 0px 0px 0 rgba(0,0,0,0.14), 0 0px 0px 0 rgba(0,0,0,0.12), 0 0px 0px 0px rgba(0,0,0,0.20)`,\n      },\n    });\n\n    const sliceSizeProps = getSliceSize(layerNormalized);\n\n    if (filter) {\n      return (\n        <LAYER_STACK_filter_wrapper\n          style={layerSliceProps}\n          key={`LAYER_STACK_layer_filter_${i}`}\n          w={layerNormalized.w}\n          h={layerNormalized.h}\n          i={i}\n        >\n          <LAYER_STACK_FILTER_inner\n            {...colors}\n            style={filterProps}\n            f={layerNormalized.f}\n            w={layerNormalized.w}\n            h={layerNormalized.h}\n          >\n            {withData && (\n              <LayerCanvas\n                slice={layerData}\n                style={{ position: `absolute`, top: 0 }}\n                width={\n                  getFilterSliceSize(sliceSizeProps, layerNormalized.f) + `em`\n                }\n                height={\n                  getFilterSliceSize(sliceSizeProps, layerNormalized.f) + `em`\n                }\n              />\n            )}\n          </LAYER_STACK_FILTER_inner>\n        </LAYER_STACK_filter_wrapper>\n      );\n    } else {\n      return (\n        <LAYER_STACK_slice\n          {...colors}\n          style={Object.assign({}, layerSliceProps, filterProps)}\n          key={`LAYER_STACK_layer_${i}`}\n          w={layerNormalized.w}\n          h={layerNormalized.h}\n          i={i}\n        >\n          {withData && (\n            <LayerCanvas\n              style={{ position: `absolute`, top: 0 }}\n              slice={layerData}\n              width={sliceSizeProps.w + `em`}\n              height={sliceSizeProps.h + `em`}\n            />\n          )}\n        </LAYER_STACK_slice>\n      );\n    }\n  }\n);\n\nconst LAYER_STACK = ({\n  layer,\n  withData,\n  layerNormalized,\n  layerData,\n  filterData,\n  extended,\n  withFilter,\n}) => {\n  const { w: sliceWidth, h: sliceHeight } = getSliceSize(layerNormalized);\n  const emPadding = 1 * 2;\n  const wrapperStyle = useSpring({\n    height: extended\n      ? `${(sliceHeight + emPadding) * layer.d}em`\n      : `${sliceHeight + emPadding}em`,\n    width: `${sliceWidth + emPadding}em`,\n    marginTop: `-${(sliceHeight + emPadding) / 2}em`,\n\n    from: {\n      height: `${sliceHeight + emPadding}em`,\n      width: `${sliceWidth + emPadding}em`,\n      marginTop: `-${(sliceHeight + emPadding) / 2}em`,\n      marginLeft: `-${(sliceWidth + emPadding) / 2}em`,\n    },\n  });\n  return (\n    <>\n      {withFilter && (\n        <div\n          style={{\n            height: 0,\n            width: 0,\n          }}\n        >\n          <LAYER_STACK_wrapper style={wrapperStyle}>\n            {new Array(layer.d)\n              .fill(0)\n              .map(\n                (_, i) =>\n                  (extended || i < 10) && (\n                    <LAYER_STACK_slice_component\n                      layer={layer}\n                      i={i}\n                      withData={withData}\n                      layerData={layerData && layerData[i]}\n                      filterData={filterData && filterData[i]}\n                      layerNormalized={layerNormalized}\n                      extended={extended}\n                      filter={true}\n                    />\n                  )\n              )}\n          </LAYER_STACK_wrapper>\n        </div>\n      )}\n      <div\n        style={{\n          height: 0,\n          width: 0,\n          marginLeft: withFilter ? `${sliceHeight + emPadding}em` : ``,\n        }}\n      >\n        <LAYER_STACK_wrapper style={wrapperStyle}>\n          {new Array(layer.d)\n            .fill(0)\n            .map(\n              (_, i) =>\n                (extended || i < 10) && (\n                  <LAYER_STACK_slice_component\n                    layer={layer}\n                    i={i}\n                    withData={withData}\n                    layerData={layerData && layerData[i]}\n                    filterData={filterData && filterData[i]}\n                    layerNormalized={layerNormalized}\n                    extended={extended}\n                  />\n                )\n            )}\n        </LAYER_STACK_wrapper>\n      </div>\n    </>\n  );\n};\n\n//NETWORK LAYERS\n\n//normalize layers, normalize f as percentage of width and height minimum\nconst normalizeLayers = (shape) => {\n  const out = normalizeData(shape, 0);\n  shape.forEach((s, i) => {\n    if (s.f) {\n      out[i].f = s.f / Math.min(shape[i - 1].w, shape[i - 1].h);\n    }\n  });\n  return out;\n};\n\nexport default connect((state) => ({\n  colors: state.colors,\n}))(({ colors, network, small, withData }) => {\n  const [extended, setExtended] = useState(\n    new Array(network.shape.length).fill(false)\n  );\n  const [layersNormalized] = useState(\n    network && network.shape ? normalizeLayers(network.shape) : undefined\n  );\n\n  return (\n    <WrapperCard>\n      {network && network.shape && (\n        <NetworkVisualWrapper>\n          {network.shape.map((layerShape, i) => {\n            return (\n              <>\n                <div key={`network_layer_${i}`}>\n                  <NetworkLayerWrapper\n                    {...colors}\n                    onClick={() => {\n                      setExtended(\n                        extended.map((_, i1) =>\n                          i1 === i ? !extended[i1] : extended[i1]\n                        )\n                      );\n                    }}\n                  >\n                    <NetworkFilterAndInput>\n                      {layerShape.type === LayerType.CONV && (\n                        <FilterLayer>\n                          <LAYER_STACK\n                            layerData={network.layers[i]}\n                            filterData={network.weights[i]}\n                            layer={layerShape}\n                            layerNormalized={layersNormalized[i]}\n                            withData={withData}\n                            extended={extended[i]}\n                            withFilter={true}\n                          />\n                        </FilterLayer>\n                      )}\n                      {layerShape.type !== LayerType.CONV && (\n                        <NetworkLayer>\n                          {layerShape.type === LayerType.INPUT && (\n                            <LAYER_STACK\n                              layerData={network.layers[i]}\n                              layer={layerShape}\n                              layerNormalized={layersNormalized[i]}\n                              withData={withData ? { layer: i } : null}\n                              extended={extended[i]}\n                            />\n                          )}\n                          {layerShape.type === LayerType.POOL && (\n                            <LAYER_STACK\n                              layerData={network.layers[i]}\n                              layer={layerShape}\n                              layerNormalized={layersNormalized[i]}\n                              withData={withData ? { layer: i } : null}\n                              extended={extended[i]}\n                            />\n                          )}\n                          {layerShape.type === LayerType.FC}\n                          {layerShape.type === LayerType.FLATTEN}\n                        </NetworkLayer>\n                      )}\n                    </NetworkFilterAndInput>\n                    <LayerTypeTitle>\n                      {Object.keys(LayerType).find(\n                        (key) => LayerType[key] === layerShape.type\n                      )}\n                    </LayerTypeTitle>\n                  </NetworkLayerWrapper>\n                </div>\n\n                <LayerSpacer>\n                  {layerShape.type !== LayerType.FC && (\n                    <IoIosArrowRoundForward />\n                  )}\n                </LayerSpacer>\n              </>\n            );\n          })}\n        </NetworkVisualWrapper>\n      )}\n      {(!network || !network.shape) && (\n        <Error error={`invalid network shape`} />\n      )}\n    </WrapperCard>\n  );\n});\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12),\n    0 2px 4px -1px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: row;\n  background: ${(props) => props.backgroundbyelevation(1)};\n\n  &:not(:first-child) {\n    margin-top: 1em;\n  }\n  border-radius: 5px;\n`;\n\nconst Key = styled.div`\n  width: 50%;\n  height: 100%;\n  padding: 1em;\n  text-align: right;\n`;\n\nconst Value = styled.div`\n  width: 50%;\n  height: 100%;\n  padding: 1em;\n`;\n\nconst StyledInput = styled.input`\n  padding: 5px;\n  height: 100%;\n  box-sizing: border-box;\n  border-radius: 5px;\n  border: none;\n  background: none;\n  color: ${(props) => props.subaccenttextcolor};\n`;\n\nconst KeyValueWrapper = styled.div`\n  padding: 2em;\n`;\n\nconst KeyValueTable = ({ data, editFunction, colors, include }) => (\n  <KeyValueWrapper>\n    {!include &&\n      Object.keys(data).map((key) => (\n        <Card {...colors} key={`key_value_table_${key}`}>\n          <Key>{key}</Key>\n          <Value>\n            <StyledInput\n              value={data[key]}\n              onChange={(evt) => editFunction(key, evt.target.value)}\n            />\n          </Value>\n        </Card>\n      ))}\n    {include &&\n      include.map((key) => (\n        <Card {...colors} key={`key_value_table_${key}`}>\n          <Key>{key}</Key>\n          <Value>\n            <StyledInput\n              value={data[key]}\n              onChange={(evt) => editFunction(key, evt.target.value)}\n            />\n          </Value>\n        </Card>\n      ))}\n  </KeyValueWrapper>\n);\n\nexport default connect((state) => state)(KeyValueTable);\n","const Jimp = require(\"jimp\");\n\n/**\n *\n * @param {*} image image URL, buffer, path...\n * @param {Object} sizeDim output Array size {x:xSize, y:ySize, z:zSize}\n *      x and y are mandatory, z is optional and can be 3 or 1, default is 3\n *\n */\nconst imageToArray = (imageData, sizeDim) =>\n  new Promise((resolve, reject) => {\n    Jimp.read(imageData)\n      .then(image => {\n        let resizedImage = resizeImage(image, sizeDim);\n\n        let out;\n        if (!sizeDim.z || sizeDim.z === 3) {\n          out = [[], [], []];\n          for (let j = 0; j < sizeDim.y; j++) {\n            out[0][j] = [];\n            out[1][j] = [];\n            out[2][j] = [];\n            for (let k = 0; k < sizeDim.x; k++) {\n              const pixel = Jimp.intToRGBA(resizedImage.getPixelColor(k, j));\n\n              out[0][j][k] = pixel.r;\n              out[1][j][k] = pixel.g;\n              out[2][j][k] = pixel.b;\n            }\n          }\n        } else {\n          out = [[]];\n          for (let j = 0; j < sizeDim.y; j++) {\n            out[0][j] = [];\n            for (let k = 0; k < sizeDim.x; k++) {\n              const pixel = Jimp.intToRGBA(resizedImage.getPixelColor(k, j));\n              out[0][j][k] = pixel.r;\n            }\n          }\n        }\n\n        resolve(out);\n      })\n      .catch(e => reject(e));\n  });\n\n/**\n *\n * @param {*} array 3d array\n * @param {*} writeTo optional, path to write to\n * @returns image buffer\n */\nconst arrayToImage = (array, writeTo) => {\n  return new Promise(\n    (resolve, reject) =>\n      new Jimp(array[0][0].length, array[0].length, (err, image) => {\n        for (let y = 0; y < array[0].length; y++) {\n          for (let x = 0; x < array[0][y].length; x++) {\n            if (array.length === 1) {\n              image.setPixelColor(\n                Jimp.rgbaToInt(\n                  array[0][y][x],\n                  array[0][y][x],\n                  array[0][y][x],\n                  1,\n                ),\n                x,\n                y,\n              );\n            } else {\n              image.setPixelColor(\n                Jimp.rgbaToInt(\n                  array[0][y][x],\n                  array[1][y][x],\n                  array[2][y][x],\n                  1,\n                ),\n                x,\n                y,\n              );\n            }\n          }\n        }\n\n        if (writeTo) {\n          image.write(writeTo, () =>\n            image.getBuffer(Jimp.AUTO, b => resolve(b)),\n          );\n        } else {\n          image.getBuffer(Jimp.AUTO, b => resolve(b));\n        }\n      }),\n  );\n};\n\nconst resizeImage = (image, sizeDim) => {\n  if (sizeDim.z) {\n    if (sizeDim.z === 1) {\n      return resizeImage(\n        image.greyscale(),\n        Object.assign({}, sizeDim, {z: undefined}),\n      );\n    } else {\n      return resizeImage(image, Object.assign({}, sizeDim, {z: undefined}));\n    }\n  } else {\n    return image.resize(sizeDim.x, sizeDim.y);\n  }\n};\n\nexport {imageToArray, resizeImage, arrayToImage};\n","import React, { useState } from \"react\";\nimport { imageToArray, resizeImage } from \"../CNN-js/imageProcessor\";\nimport { softmax } from \"../CNN-js/math\";\nimport styled from \"styled-components\";\nimport LayerCanvas from \"./LayerCanvas\";\nimport { deepNormalize, deepMap } from \"../CNN-js/math\";\nimport { connect } from \"react-redux\";\n//import { setNetwork as setNetworkAction } from \"../redux/actions/networks\";\n\nconst PropagationWrapper = styled.div`\n  padding-top: 1em;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst FirstLayerDisplay = styled.div`\n  padding: 1em;\n`;\n\nconst OutputLayer = styled.div`\n  padding: 1em;\n`;\n\nconst Row = styled.tr`\n  background: lightgray;\n\n  & td {\n    text-align: center;\n    padding: 0.5em;\n  }\n`;\n\nconst OutputTable = styled.table`\n  border-radius: 5px;\n`;\n\nconst Prediction = styled.tr`\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  background: ${(props) => props.backgroundbyelevation(1)};\n\n  font-weight: bold;\n\n  & td {\n    padding: 1em;\n    text-align: center;\n  }\n`;\n\nconst round = (x, c) => parseInt(x * 10 ** c) / 10 ** c;\n\nexport default connect(\n  (state) => state\n  /*(dispatch) => ({\n    setNetwork: (server, network) =>\n      setNetworkAction(server, network, dispatch),\n  })*/\n)(({ network, rawData, image, setNetwork, server, colors }) => {\n  const [output, setOutput] = useState();\n  const [imageArray, setImageArray] = useState();\n  const [softmaxed, setSoftmaxed] = useState();\n\n  React.useEffect(() => {\n    (async () => {\n      if (image || rawData) {\n        const imageArr = image\n          ? deepNormalize(\n              await imageToArray(image, {\n                y: network.layers[0][0].length,\n                x: network.layers[0][0][0].length,\n                z: network.layers[0].length,\n              }),\n              255\n            )\n          : rawData;\n        const out = network.forwardPropagate(imageArr);\n\n        setImageArray(deepMap(imageArr, (x) => x * 255));\n        setOutput(out);\n        setSoftmaxed(softmax(out));\n        //setNetwork(server, network);\n      }\n    })();\n  }, [image, rawData]);\n\n  return (\n    <PropagationWrapper>\n      <FirstLayerDisplay\n        width={network.layers[0][0].length}\n        height={network.layers[0][0][0].length}\n      >\n        {imageArray && (\n          <LayerCanvas width={`10em`} height={`10em`} array={imageArray} />\n        )}\n      </FirstLayerDisplay>\n      <OutputLayer>\n        {output && (\n          <OutputTable {...colors}>\n            <thead>\n              <tr style={{ textAlign: `center` }}>\n                <td>class</td>\n                <td>label</td>\n                <td>value</td>\n                <td>softmax</td>\n              </tr>\n            </thead>\n            <tbody>\n              {output\n                .map((v, i) => ({ v, i }))\n                .sort((a, b) => b.v - a.v)\n                .map(({ v, i }, j) => {\n                  const inner = (\n                    <>\n                      <td>{i}</td>\n                      <td>{network.labels && network.labels[i]}</td>\n                      <td>{round(v, 2)}</td>\n                      <td>\n                        {`${round(\n                          parseInt(softmaxed && softmaxed[i] * 100),\n                          2\n                        )}%`}\n                      </td>\n                    </>\n                  );\n\n                  if (j == 0) {\n                    return <Prediction {...colors}>{inner}</Prediction>;\n                  }\n                  return <Row>{inner}</Row>;\n                })}\n            </tbody>\n          </OutputTable>\n        )}\n      </OutputLayer>\n    </PropagationWrapper>\n  );\n});\n","import {\n  getDatasets,\n  getDataset,\n  newDataset as apiNewDataset,\n} from \"../../other/api\";\n\nexport const FETCH_REDUCED_DATASETS_REQUEST = `FETCH_REDUCED_DATASETS_REQUEST`;\nexport const FETCH_REDUCED_DATASETS_SUCCESS = `FETCH_REDUCED_DATASETS_SUCCESS`;\nexport const FETCH_REDUCED_DATASETS_ERROR = `FETCH_REDUCED_DATASETS_ERROR`;\n\nexport const FETCH_DATASET_REQUEST = `FETCH_DATASET_REQUEST`;\nexport const FETCH_DATASET_SUCCESS = `FETCH_DATASET_SUCCESS`;\nexport const FETCH_DATASET_ERROR = `FETCH_DATASET_ERROR`;\n\nexport const NEW_DATASET_REQUEST = `NEW_DATASET_REQUEST`;\nexport const NEW_DATASET_SUCCESS = `NEW_DATASET_SUCCESS`;\nexport const NEW_DATASET_ERROR = `NEW_DATASET_ERROR`;\n\nexport const requestNewDataset = ({ dataset, server }) => ({\n  type: NEW_DATASET_REQUEST,\n  server,\n  dataset,\n});\n\nexport const newDatasetSuccess = ({ dataset, server }) => ({\n  type: NEW_DATASET_SUCCESS,\n  server,\n  dataset,\n});\n\nexport const newDatasetsError = ({ err, dataset, server }) => ({\n  type: NEW_DATASET_ERROR,\n  err,\n  server,\n  dataset,\n});\n\nexport const requestDatasets = ({ server }) => ({\n  type: FETCH_REDUCED_DATASETS_REQUEST,\n  server,\n});\n\nexport const datasetsSuccess = ({ datasets, server }) => ({\n  type: FETCH_REDUCED_DATASETS_SUCCESS,\n  server,\n  datasets,\n});\n\nexport const datasetsError = ({ err, server }) => ({\n  type: FETCH_REDUCED_DATASETS_ERROR,\n  err,\n  server,\n});\n\nexport const requestDataset = ({ datasetId, server }) => ({\n  type: FETCH_DATASET_REQUEST,\n  server,\n  datasetId,\n});\n\nexport const datasetSuccess = ({ dataset, server }) => ({\n  type: FETCH_DATASET_SUCCESS,\n  server,\n  dataset,\n});\n\nexport const datasetError = ({ err, datasetId, server }) => ({\n  type: FETCH_DATASET_ERROR,\n  err,\n  server,\n  datasetId,\n});\n\nexport const fetchDatasets = (server, dispatch) => {\n  dispatch(requestDatasets({ server }));\n  getDatasets(server)\n    .then((datasets) => {\n      Object.keys(datasets).forEach((datasetId) => {\n        if (!datasets[datasetId].full) datasets[datasetId].reduced = true;\n      });\n\n      dispatch(\n        datasetsSuccess({\n          server,\n          datasets,\n        })\n      );\n    })\n    .catch((err) => {\n      if (err.message) {\n        err = err.message;\n      }\n      dispatch(datasetsError({ err, server }));\n    });\n};\n\nexport const fetchDataset = (datasetId, server, dispatch) => {\n  dispatch(requestDataset({ datasetId, server }));\n  getDataset(datasetId, server)\n    .then((dataset) => {\n      dispatch(datasetSuccess({ dataset, server }));\n    })\n    .catch((err) => {\n      if (err.message) {\n        err = err.message;\n      }\n      dispatch(datasetError({ err, datasetId, server }));\n    });\n};\n\nexport const newDataset = (dataset, server, dispatch) => {\n  dispatch(requestNewDataset({ dataset, server }));\n  apiNewDataset(dataset, server).then(() => {\n    dispatch(newDatasetSuccess({ dataset, server }));\n  });\n};\n","import React, { Component } from \"react\";\n\nimport { Redirect } from \"react-router-dom\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// components\nimport NetworkShapeVisual from \"../components/NetworkShapeVisual\";\nimport styled from \"styled-components\";\nimport Error from \"../components/Error\";\nimport KeyValueTable from \"../components/KeyValueTable\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\n// redux actions\nimport { fetchNetwork } from \"../redux/actions/networks\";\n\n// utils\nimport { exportText } from \"../other/utils\";\nimport NetworkPropagation from \"../components/NetworkPropagation\";\nimport Dropzone from \"react-dropzone\";\nimport { fetchDatasets } from \"../redux/actions/datasets\";\nimport { openDatasetFromBuffer } from \"../CNN-js/datasetProcessor\";\nimport { deepNormalize } from \"../CNN-js/math\";\n\nconst NetworkWrapper = styled.div`\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h2`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst Subtitle = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst NetworkScreenTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst FlexCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst DownloadButton = styled.div`\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  background: ${(props) => props.primarycolor};\n  color: ${(props) => props.primarytextcolor};\n  border: none;\n  text-decoration: none;\n  border-radius: 5px;\n  box-sizing: content-box;\n  padding: 1em;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ImageSelect = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst UploadRoot = styled.div`\n  padding: 1em;\n  border: 1px solid gray;\n  border-radius: 5px;\n  margin-right: 1em;\n`;\n\nconst getDatasetLen = (dataset) => {\n  return (\n    dataset &&\n    dataset.data &&\n    dataset.data.length / (dataset.imageSize ** 2 * dataset.colorDepth + 1)\n  );\n};\n\nclass Network extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      network:\n        props.match.params.serverUniqueName &&\n        props.match.params.networkId &&\n        props.networks.networks[props.match.params.serverUniqueName] &&\n        props.networks.networks[props.match.params.serverUniqueName][\n          props.match.params.networkId\n        ],\n      error: undefined,\n      server: this.props.servers.servers.find(\n        (server) =>\n          server.uniqueName === this.props.match.params.serverUniqueName\n      ),\n      uploadedImage: null,\n      selectedDatasetImageIndex: 0,\n    };\n\n    this.checkForError = this.checkForError.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkForError();\n\n    this.props.servers.servers.map((s) => {\n      this.props.fetchDatasets(s);\n    });\n  }\n\n  checkForError() {\n    const network =\n      this.props.match.params.serverUniqueName &&\n      this.props.match.params.networkId &&\n      this.props.networks.networks[this.props.match.params.serverUniqueName] &&\n      this.props.networks.networks[this.props.match.params.serverUniqueName][\n        this.props.match.params.networkId\n      ];\n    if (network !== this.state.network) this.setState({ network });\n    let error = undefined;\n    if (!this.props.match.params.serverUniqueName) {\n      error = `invalid server name`;\n    } else if (!this.props.match.params.networkId) {\n      error = `invalid network name`;\n    } else if (\n      !this.props.networks.networks[this.props.match.params.serverUniqueName]\n    ) {\n      error = `server has no networks`;\n      if (!this.state.server.apiToken) {\n        error = `not logged in, redirecting...`;\n        this.setState({ notLoggedIn: true });\n      } else {\n        if (!this.state.refreshRequestSent) {\n          this.setState({ needToRefreshNetwork: true });\n        }\n      }\n    } else if (\n      !this.props.networks.networks[this.props.match.params.serverUniqueName][\n        this.props.match.params.networkId\n      ]\n    ) {\n      error = `network has not been cached`;\n      if (!this.state.refreshRequestSent)\n        this.setState({ needToRefreshNetwork: true });\n    }\n\n    if (network && network.reduced) {\n      if (!this.state.refreshRequestSent)\n        this.setState({ needToRefreshNetwork: true });\n    }\n\n    error =\n      this.props.networks.networkError[\n        this.props.match.params.serverUniqueName +\n          this.props.match.params.networkId\n      ] || error;\n    if (this.state.error !== error) {\n      this.setState({ error });\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkForError();\n    if (this.state.needToRefreshNetwork) {\n      this.setState(\n        { needToRefreshNetwork: false, refreshRequestSent: true },\n        () => {\n          this.props.getNetwork(\n            this.props.match.params.networkId,\n            this.state.server\n          );\n        }\n      );\n    }\n\n    if (this.state.notLoggedIn) {\n      setTimeout(() => {\n        this.setState({\n          notLoggedIn: false,\n          redirect: true,\n        });\n      }, 3000);\n    }\n  }\n\n  render() {\n    return (\n      <NetworkWrapper>\n        {this.state.redirect && (\n          <Redirect\n            to={{\n              pathname: \"/networks\",\n            }}\n          />\n        )}\n        {this.state.network && (\n          <>\n            <NetworkScreenTitleWrapper>\n              <Title>{this.state.network.name}</Title>\n              <FlexCenter>\n                <DownloadButton\n                  onClick={() => {\n                    exportText(\n                      JSON.stringify(this.state.network),\n                      this.state.network.name.replace(` `, `_`) + `.cnn`\n                    );\n                  }}\n                  {...this.props.colors}\n                >\n                  Export\n                </DownloadButton>\n              </FlexCenter>\n            </NetworkScreenTitleWrapper>\n            <NetworkShapeVisual\n              network={this.state.networkNew || this.state.network}\n              withData={false}\n            />\n            <Subtitle>Classify</Subtitle>\n            <ImageSelect>\n              <Dropzone\n                accept={\".jpg, .png\"}\n                onDrop={(acceptedFiles) => {\n                  acceptedFiles.forEach((file) => {\n                    const reader = new FileReader();\n\n                    reader.onabort = () =>\n                      console.log(\"file reading was aborted\");\n                    reader.onerror = () =>\n                      console.log(\"file reading has failed\");\n                    reader.onload = () => {\n                      this.setState({\n                        uploadedImage: reader.result,\n                        selectedDatasetIndex: null,\n                      });\n                    };\n                    reader.readAsArrayBuffer(file);\n                  });\n                }}\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <section>\n                    <UploadRoot {...getRootProps()}>\n                      <input {...getInputProps()} />\n                      Drag 'n' drop image file here, or click to select it\n                    </UploadRoot>\n                  </section>\n                )}\n              </Dropzone>\n              <div style={{ padding: `1em` }}>or</div>\n              <Dropdown\n                placeholder=\"Select a dataset\"\n                options={(() => {\n                  const out = Object.keys(this.props.datasets.datasets).map(\n                    (s) => ({\n                      type: `group`,\n                      name: s,\n                      items: Object.keys(this.props.datasets.datasets[s]).map(\n                        (dId) => ({\n                          value: dId,\n                          label:\n                            this.props.datasets.datasets[s][dId].name +\n                            ` (${\n                              this.props.datasets.datasets[s][dId].data.length /\n                              (this.props.datasets.datasets[s][dId].imageSize **\n                                2 *\n                                this.props.datasets.datasets[s][dId]\n                                  .colorDepth +\n                                1)\n                            })`,\n                        })\n                      ),\n                    })\n                  );\n                  return out;\n                })()}\n                onChange={(v) => {\n                  this.setState({ selectedDatasetIndex: v.value });\n                }}\n                value={this.state.selectedDatasetIndex}\n              />\n              <input\n                type=\"number\"\n                min={0}\n                max={\n                  this.state.selectedDatasetIndex &&\n                  getDatasetLen(\n                    this.props.datasets.datasets[this.state.server.uniqueName][\n                      this.state.selectedDatasetIndex\n                    ]\n                  ) - 1\n                }\n                value={this.state.selectedDatasetImageIndex}\n                onChange={(e) => {\n                  this.setState({\n                    selectedDatasetImageIndex:\n                      (e.target.value || e.target.value === 0) &&\n                      e.target.value <\n                        getDatasetLen(\n                          this.props.datasets.datasets[\n                            this.state.server.uniqueName\n                          ][this.state.selectedDatasetIndex]\n                        )\n                        ? parseInt(e.target.value)\n                        : this.state.selectedDatasetImageIndex,\n                    uploadedImage: null,\n                  });\n                }}\n                style={{ padding: `8px`, width: `5em`, fontSize: `1em` }}\n              />\n\n              {/*<DownloadButton\n                {...this.props.colors}\n                style={{ marginLeft: `1em` }}\n                onClick={\n\n                }\n              >\n                Classify\n              </DownloadButton>*/}\n            </ImageSelect>\n            <NetworkPropagation\n              network={this.state.network}\n              image={this.state.uploadedImage}\n              server={this.state.server}\n              rawData={(() => {\n                if (this.state.selectedDatasetIndex) {\n                  const inputArray = openDatasetFromBuffer(\n                    this.props.datasets.datasets[this.state.server.uniqueName][\n                      this.state.selectedDatasetIndex\n                    ].data\n                  )[this.state.selectedDatasetImageIndex].input;\n\n                  const datasetProps = this.props.datasets.datasets[\n                    this.state.server.uniqueName\n                  ][this.state.selectedDatasetIndex];\n                  if (datasetProps.normalizeMax) {\n                    return deepNormalize(inputArray, datasetProps.normalizeMax);\n                  } else {\n                    return inputArray;\n                  }\n                }\n              })()}\n            />\n            <Subtitle>Parameters</Subtitle>\n            <KeyValueTable\n              data={this.state.network}\n              include={[`name`, `learningRate`]}\n              editFunction={(key, newValue) => {}}\n            />\n          </>\n        )}\n        {this.props.networks.networkLoading[\n          this.props.match.params.serverUniqueName +\n            this.props.match.params.networkId\n        ] && <div>Loading</div>}\n        {!this.props.networks.networkLoading[\n          this.props.match.params.serverUniqueName +\n            this.props.match.params.networkId\n        ] &&\n          this.state.error && <Error error={this.state.error} />}\n      </NetworkWrapper>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    getNetwork: (networkId, server) =>\n      fetchNetwork(networkId, server, dispatch),\n    fetchDatasets: (server) => fetchDatasets(server, dispatch),\n  })\n)(Network);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst TrainingWrapper = styled.div`\n  width: 100%;\n  padding: 1em;\n  box-sizing: border-box;\n`;\n\nconst TrainingHeader = styled.div`\n  padding: 1em;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Card = styled(Link)`\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: row;\n  background: ${(props) => props.backgroundbyelevation(1)};\n  color: ${(props) => props.textcolor};\n  text-decoration: none;\n\n  &:not(:first-child) {\n    margin-top: 2em;\n  }\n  border-radius: 5px;\n`;\n\nconst Column = styled.div`\n  flex: 1 1 0px;\n  padding: 1em;\n  text-align: center;\n`;\n\nconst round = (x, n) => parseInt(x * 10 ** n) / 10 ** n;\n\nconst TrainingList = connect((state) => state)(\n  ({ data, colors, networks, customLinkFunction }) => {\n    console.log(data, colors);\n    return (\n      <>\n        <TrainingHeader {...colors}>\n          {[\n            `network`,\n            `server`,\n            `epoch`,\n            `learning rate`,\n            `error`,\n            `accuracy`,\n          ].map((c, i) => (\n            <Column key={`header_item_${i}`}>{c}</Column>\n          ))}\n        </TrainingHeader>\n        <TrainingWrapper>\n          {data.map((row, i) => (\n            <Card\n              key={`trainingList_${i}_row`}\n              {...colors}\n              to={\n                customLinkFunction\n                  ? customLinkFunction(row, i)\n                  : `/training/${row.server}/${row.network}`\n              }\n            >\n              <Column>{networks.networks[row.server][row.network].name}</Column>\n              <Column>{row.server}</Column>\n              <Column>\n                {row.epoch === `initializing`\n                  ? `initializing`\n                  : `${row.epoch}/${row.epochs}`}\n              </Column>\n              <Column>{round(row.learningRate, 5)}</Column>\n              <Column>{round(row.err, 5)}</Column>\n              <Column>{`${round(row.accuracy, 4) * 100}%`}</Column>\n            </Card>\n          ))}\n        </TrainingWrapper>\n      </>\n    );\n  }\n);\n\nconst StartButton = styled(Link)`\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  background: ${(props) => props.primarycolor};\n  color: ${(props) => props.primarytextcolor};\n  border: none;\n  text-decoration: none;\n  border-radius: 5px;\n  box-sizing: content-box;\n  padding: 1em;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Title = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst TrainingScreenWrapper = styled.div`\n  padding: 1em;\n`;\n\nconst TrainingScreenTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst FlexCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nclass Training extends Component {\n  render() {\n    return (\n      <TrainingScreenWrapper>\n        <TrainingScreenTitleWrapper>\n          <Title>Currently training</Title>\n          <FlexCenter>\n            <StartButton to={`startTraining`} {...this.props.colors}>\n              train a network\n            </StartButton>\n          </FlexCenter>\n        </TrainingScreenTitleWrapper>\n\n        <TrainingList\n          data={Object.keys(this.props.training)\n            .map((i) =>\n              i === `trained`\n                ? null\n                : Object.keys(this.props.training[i]).map((j) =>\n                    Object.assign({}, this.props.training[i][j], {\n                      server: i,\n                      network: j,\n                    })\n                  )\n            )\n            .flat(1)\n            .filter((a) => !!a)}\n        />\n\n        <TrainingScreenTitleWrapper>\n          <Title>Training history</Title>\n        </TrainingScreenTitleWrapper>\n        <TrainingList\n          data={this.props.training.trained}\n          customLinkFunction={(_row, i) => `/training/trained/${i}`}\n        />\n      </TrainingScreenWrapper>\n    );\n  }\n}\n\nexport default connect((state) => ({\n  training: state.training,\n  colors: state.colors,\n}))(Training);\n","import {\n  openDatasetFromBuffer,\n  vectorizeDatasetLabels,\n  normalizeInputData,\n} from \"../CNN-js/datasetProcessor\";\n\nclass WithEventListener {\n  constructor() {\n    this.eventsListeners = {};\n  }\n\n  addEventListener(event, fn) {\n    if (!this.eventsListeners[event]) {\n      this.eventsListeners[event] = [];\n    }\n\n    this.eventsListeners[event].push(fn);\n  }\n\n  emitEvent(event, ...props) {\n    console.log(event);\n    if (event in this.eventsListeners)\n      this.eventsListeners[event].forEach((fn) => fn(...props));\n  }\n\n  removeEventListener(event, fn) {\n    this.eventsListeners[event] = this.eventsListeners[event].filter(\n      (f) => fn !== f\n    );\n  }\n}\n\n/**\n * events:\n *  start,\n *  batchProgress\n */\nexport default class TrainingController extends WithEventListener {\n  constructor({ server, network, dataset, trainingParams }) {\n    super();\n    this.server = server;\n    this.network = network;\n    let datasetToBeTrained = dataset.data;\n    datasetToBeTrained = openDatasetFromBuffer(\n      datasetToBeTrained,\n      datasetToBeTrained.colorDepth,\n      datasetToBeTrained.imageSize\n    );\n    if (dataset.vectorize) {\n      datasetToBeTrained = vectorizeDatasetLabels(\n        datasetToBeTrained,\n        network.shape[network.shape.length - 1].l\n      );\n    }\n    if (dataset.normalizeMax) {\n      datasetToBeTrained = normalizeInputData(\n        datasetToBeTrained,\n        dataset.normalizeMax\n      );\n    }\n    this.dataset = datasetToBeTrained;\n    this.trainingParams = trainingParams;\n  }\n\n  startLearning() {\n    if (this.server.url === \"local\") {\n      this.emitEvent(\"start\");\n      this.trainingInstance = new Worker(\n        process.env.PUBLIC_URL + \"/trainingWorker.js\"\n      );\n      this.trainingInstance.addEventListener(\"message\", (m) => {\n        this.emitEvent(m.data.event, ...[...m.data.data, m.data.network]);\n      });\n      this.trainingInstance.postMessage({\n        network: JSON.stringify(this.network),\n        trainingProps: Object.assign({}, this.trainingParams, {\n          dataset: this.dataset,\n        }),\n      });\n    } else {\n      console.error(\"network training not supported yet\");\n      //TODO: learning over the network\n    }\n  }\n\n  confusionMatrix() {\n    this.emitEvent(\"confusionMatrixStart\");\n    this.trainingInstance = new Worker(\n      process.env.PUBLIC_URL + \"/trainingWorker.js\"\n    );\n    this.trainingInstance.addEventListener(\"message\", (m) => {\n      this.emitEvent(m.data.event, m.data.data);\n    });\n    this.trainingInstance.postMessage({\n      network: JSON.stringify(this.network),\n      dataset: this.dataset,\n      cmd: `confusionMatrix`,\n    });\n  }\n\n  terminate() {\n    this.emitEvent(\"end\");\n    if (this.trainingInstance) this.trainingInstance.terminate();\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { useSpring, animated, config } from \"react-spring\";\n\nimport styled from \"styled-components\";\n\nconst SpringButtonStyled = styled(animated.div)`\n  width: 100%;\n  padding: 1em;\n  background: ${(props) => props.color};\n  color: ${(props) => props.textColor};\n  border: none;\n  border-radius: 3px;\n  box-sizing: border-box;\n  text-align: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst SpringButton = ({ color, textColor, text, onClick }) => {\n  const [hovered, setHovered] = useState(false);\n  const [clicked, setClicked] = useState(false);\n\n  const buttonStyle = useSpring({\n    transform: `scale(${clicked ? 0.8 : hovered ? 1.1 : 1}`,\n    config: config.gentle,\n  });\n\n  if (clicked) {\n    setTimeout(() => setClicked(false), 200);\n  }\n\n  return (\n    <SpringButtonStyled\n      style={buttonStyle}\n      color={color}\n      textColor={textColor}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => {\n        setHovered(false);\n        setClicked(false);\n      }}\n      onClick={(e) => {\n        if (onClick) onClick(e);\n        setClicked(true);\n      }}\n    >\n      {text}\n    </SpringButtonStyled>\n  );\n};\n\nexport default SpringButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport NetworkCard, { NetworkCardParent } from \"./NetworkCard\";\nimport Error, { translateError } from \"./Error\";\nimport ServerLogin from \"../components/ServerLogin\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst FullCenter = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Section = styled.div``;\n/**\n *\n * @param {Array} sectionedData\n * structure:\n *  [\n *    {\n *      name:section name,\n *      data:[{\n *            name: \"row1\",\n *            icon: \"icon1\" <- optional\n *         },\n *        \"row2\"\n *      ]\n *    }\n *  ]\n */\nconst SelectableBigNetworkList = ({\n  servers,\n  networks,\n  onSelect,\n  refreshFunction,\n}) => {\n  const [selected, select] = React.useState(false);\n  const [serversWithError, setServersWithError] = React.useState({});\n\n  return selected ? (\n    <FullCenter>\n      <NetworkCard network={selected} onClick={() => {}} />\n    </FullCenter>\n  ) : (\n    <Wrapper>\n      {servers.servers.map((server, i) => {\n        console.log(networks.networks[server.uniqueName]);\n        if (\n          !serversWithError[server.uniqueName] &&\n          networks.error[server.uniqueName]\n        ) {\n          setServersWithError(\n            Object.assign({}, serversWithError, { [server.uniqueName]: true })\n          );\n        }\n        if (\n          serversWithError[server.uniqueName] &&\n          !networks.error[server.uniqueName]\n        ) {\n          setServersWithError(\n            Object.assign({}, serversWithError, { [server.uniqueName]: false })\n          );\n          refreshFunction(server);\n        }\n        return (\n          <NetworkCardParent\n            key={`server_${i}_${server.uniqueName}`}\n            title={server.uniqueName}\n          >\n            {networks.networks[server.uniqueName] &&\n              Object.keys(networks.networks[server.uniqueName]).map(\n                (networkId, j) => (\n                  <NetworkCard\n                    key={`network_sectioned_${j}`}\n                    network={networks.networks[server.uniqueName][networkId]}\n                    onClick={() => {\n                      select(networks.networks[server.uniqueName][networkId]);\n                      onSelect(server, networkId);\n                    }}\n                  />\n                )\n              )}\n\n            {networks.error[server.uniqueName] &&\n              networks.error[server.uniqueName] !== `Unauthorized` && (\n                <div>\n                  <Error\n                    error={translateError(networks.error[server.uniqueName])}\n                    retryFunction={() => refreshFunction(server)}\n                  />\n                </div>\n              )}\n            {networks.error[server.uniqueName] === `Unauthorized` && (\n              <ServerLogin server={server} />\n            )}\n          </NetworkCardParent>\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nexport default SelectableBigNetworkList;\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\nimport SelectableBigNetworkList from \"./SelectableBigNetworkList\";\nimport { fetchNetworks } from \"../redux/actions/networks\";\nimport NetworkCard from \"./NetworkCard\";\n\nconst NetworkSelectWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SelectNetworkWrapper = styled.div`\n  width: 13em;\n  height: 15em;\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  margin: 0.7em;\n  flex-grow: 0;\n  flex-shrink: 0;\n\n  transform: scale(1);\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n\n  background: ${(props) => props.backgroundbyelevation(1)};\n  text-decoration: none;\n  color: ${(props) => props.accenttextcolor};\n  display: block;\n\n  border: 2px ${(props) => props.color} dashed;\n  box-sizing: border-box;\n  font-size: 1em;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst InnerNoOverflow = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: scroll;\n`;\n\nconst NetworkSelect = ({\n  colors,\n  innerRef,\n  servers,\n  networks,\n  getNetworks,\n  getNetwork,\n  onNetworkSelect, //(server, networkId) => {}\n}) => {\n  const [selectedId, selectId] = useState();\n  const [open, setOpen] = useState(false);\n  const [wrapperRef, setWrapperRef] = useState();\n\n  React.useEffect(() => {\n    servers.servers.map((s) => {\n      getNetworks(s);\n    });\n  }, []);\n\n  return (\n    <NetworkSelectWrapper onClick={() => setOpen(true)}>\n      {(!selectedId || open) && (\n        <>\n          <SelectNetworkWrapper {...colors} ref={(ref) => setWrapperRef(ref)}>\n            Select network\n          </SelectNetworkWrapper>\n          {open && (\n            <AnimatedFullScreenCard\n              startFromElement={wrapperRef}\n              fullscreen={true}\n              onCloseCallback={() => {\n                setOpen(false);\n              }}\n              contentFunction={(closeCard) => {\n                return (\n                  <InnerNoOverflow>\n                    <SelectableBigNetworkList\n                      servers={servers}\n                      networks={networks}\n                      onSelect={(server, networkId) => {\n                        closeCard(false);\n                        onNetworkSelect(server, networkId);\n                        selectId({\n                          server: server.uniqueName,\n                          network: networkId,\n                        });\n                      }}\n                      refreshFunction={(server) => getNetworks(server)}\n                    />\n                  </InnerNoOverflow>\n                );\n              }}\n            />\n          )}\n        </>\n      )}\n      {!open && selectedId && (\n        <NetworkCard\n          network={networks.networks[selectedId.server][selectedId.network]}\n          onClick={() => {\n            setOpen(true);\n          }}\n          getRef={(ref) => setWrapperRef(ref)}\n        />\n      )}\n    </NetworkSelectWrapper>\n  );\n};\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    getNetworks: (server) => fetchNetworks(server, dispatch),\n  })\n)(NetworkSelect);\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\n//redux\nimport { connect } from \"react-redux\";\n\n// router\nimport { Link } from \"react-router-dom\";\n\n//res\nimport { MdPhotoLibrary } from \"react-icons/md\";\nimport { AiOutlineUpload } from \"react-icons/ai\";\n\nimport { openDatasetFromBuffer } from \"../CNN-js/datasetProcessor\";\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\n\nimport Dropzone from \"react-dropzone\";\nimport { newDataset } from \"../redux/actions/datasets\";\nimport Error from \"./Error\";\n\nconst cardWrapperCss = css`\n  width: 13em;\n  height: 15em;\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  margin: 0.7em;\n  flex-grow: 0;\n  flex-shrink: 0;\n  &:hover {\n    cursor: pointer;\n  }\n  background: ${(props) => props.backgroundbyelevation(1)};\n  text-decoration: none;\n  color: ${(props) => props.accenttextcolor};\n  display: block;\n`;\n\nconst CardWrapper = styled(Link)`\n  ${cardWrapperCss}\n  transform: scale(1);\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n`;\n\nconst CardWrapperNoLink = styled.div`\n  ${cardWrapperCss}\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst DatasetImage = {\n  width: `50%`,\n  display: `block`,\n  height: `50%`,\n  flexGrow: 0,\n};\n\nconst DatasetImageDiv = styled.div`\n  height: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n`;\n\nconst BottomWrapper = styled.div`\n  height: 30%;\n  width: 100%;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n`;\n\nconst DatasetTitle = styled.h4`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n  margin: 0;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n`;\n\nexport default connect((state) => state)(\n  ({ colors, dataset, serverId, onClick, getRef }) => {\n    const Wrapper = onClick ? CardWrapperNoLink : CardWrapper;\n\n    return (\n      <Wrapper\n        to={onClick ? \"\" : `/dataset/${serverId}/${dataset.id}`}\n        onClick={onClick}\n        ref={getRef && ((ref) => getRef(ref))}\n        {...colors}\n      >\n        <DatasetImageDiv>\n          <MdPhotoLibrary style={DatasetImage} />\n        </DatasetImageDiv>\n        <BottomWrapper>\n          <DatasetTitle>\n            {dataset.name +\n              ` (${\n                dataset.data.length /\n                (dataset.imageSize * dataset.imageSize * dataset.colorDepth + 1)\n              })`}\n          </DatasetTitle>\n        </BottomWrapper>\n      </Wrapper>\n    );\n  }\n);\n\nconst AddDatasetWrapper = styled.div`\n  ${cardWrapperCss}\n  border:2px ${(props) => props.color} dashed;\n  display:flex;\n  justify-content:center;\n  flex-direction:row;\n  align-items:center;\n  background:${(props) => props.backgroundbyelevation(1)};\n  box-sizing:border-box;\n  font-size: 1em;\n`;\n\nconst InnerDatasetSelect = styled.div`\n  border-radius: 5px;\n  padding: 1em;\n  overflow: hidden;\n`;\n\nconst Title = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst Subtitle = styled.h5`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst FileSelect = styled.div`\n  padding: 1em;\n  border-radius: 5px;\n  margin-top: 1em;\n  border: 1px solid gray;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst ConfirmButton = styled.div`\n  background: ${(props) => props.primarycolor};\n  color: ${(props) => props.primarytextcolor};\n  padding: 1em;\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n  }\n  margin: calc(0.8em - 1px);\n`;\n\nconst ParameterRow = styled.div`\n  margin-top: 1em;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ParameterName = styled.div`\n  padding: 1em;\n`;\n\nconst ParameterInput = styled.input`\n  border: none;\n  background: none;\n  border-bottom: 1px solid black;\n  text-align: center;\n`;\n\nconst LeftRight = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nconst LeftRightChild = styled.div`\n  width: 50%;\n  max-height: 100vh;\n  box-sizing: border-box;\n`;\n\nconst StyledTextAreaWrapper = styled.div`\n  padding: 1em;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  height: 100%;\n  resize: none;\n  border-radius: 5px;\n`;\n\nexport const AddDatasetCard = connect(\n  (state) => state,\n  (dispatch) => ({\n    newDatasetConnected: (dataset, server) =>\n      newDataset(dataset, server, dispatch),\n  })\n)(({ colors, server, newDatasetConnected }) => {\n  const [open, setOpen] = React.useState(false);\n  const [wrapperRef, setWrapperRef] = React.useState();\n  const [rawDataset, setRawDataset] = React.useState();\n  const [fileName, setFileName] = React.useState();\n\n  const [imageSize, setImageSize] = React.useState(32);\n  const [colorDepth, setColorDepth] = React.useState(3);\n  const [normalizeMax, setNormalizeMax] = React.useState(255);\n  const [crop, setCrop] = React.useState(`no`);\n  const [name, setName] = React.useState();\n\n  const [error, setError] = React.useState();\n  const [labels, setLabels] = React.useState();\n  return (\n    <>\n      <AddDatasetWrapper\n        color={colors.primaryColor}\n        backgroundbyelevation={colors.backgroundbyelevation}\n        ref={(r) => setWrapperRef(r)}\n        onClick={() => setOpen(true)}\n      >\n        <AiOutlineUpload color={colors.primaryColor} size={25} />\n      </AddDatasetWrapper>\n      {open && (\n        <AnimatedFullScreenCard\n          startFromElement={wrapperRef}\n          fullscreen={true}\n          onCloseCallback={() => setOpen(false)}\n          contentFunction={(close) => (\n            <InnerDatasetSelect {...colors}>\n              <Title>Upload dataset file</Title>\n              <Subtitle>\n                A dataset file is a binary file with the following formatting:\n                <br />\n                The file consists of chunks. Each chunk is a \"row\" of images,\n                although there is <b>nothing delimiting the rows</b>. The first\n                byte of the chunk is the label of the image(number), the next\n                n-bytes(image_depth * image_height * image_width) are the values\n                of the pixels.\n              </Subtitle>\n              <LeftRight>\n                <LeftRightChild>\n                  <Dropzone\n                    accept={\".bin\"}\n                    onDrop={(acceptedFiles) => {\n                      acceptedFiles.forEach((file) => {\n                        setFileName(file.name);\n                        setName(file.name.split(\".\")[0]);\n                        const reader = new FileReader();\n\n                        reader.onabort = () =>\n                          console.log(\"file reading was aborted\");\n                        reader.onerror = () =>\n                          console.log(\"file reading has failed\");\n                        reader.onload = () => {\n                          const binaryStr = reader.result;\n                          setRawDataset(new Uint8Array(binaryStr));\n                        };\n                        reader.readAsArrayBuffer(file);\n                      });\n                    }}\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <FileSelect>\n                            {fileName ||\n                              `Drag 'n' drop binary file here, or click to select it`}\n                          </FileSelect>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                  <ParameterRow>\n                    <ParameterName>dataset name</ParameterName>\n                    <ParameterInput\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </ParameterRow>\n                  <ParameterRow>\n                    <ParameterName>image size</ParameterName>\n                    <ParameterInput\n                      value={imageSize}\n                      onChange={(e) => setImageSize(e.target.value)}\n                    />\n                  </ParameterRow>\n                  <ParameterRow>\n                    <ParameterName>color depth</ParameterName>\n                    <ParameterInput\n                      value={colorDepth}\n                      onChange={(e) => setColorDepth(e.target.value)}\n                    />\n                  </ParameterRow>\n                  <ParameterRow>\n                    <ParameterName>normalize max</ParameterName>\n                    <ParameterInput\n                      value={normalizeMax}\n                      onChange={(e) => setNormalizeMax(e.target.value)}\n                    />\n                  </ParameterRow>\n                  <ParameterRow>\n                    <ParameterName>crop dataset</ParameterName>\n                    <ParameterInput\n                      value={crop}\n                      onChange={(e) => setCrop(e.target.value)}\n                    />\n                  </ParameterRow>\n                </LeftRightChild>\n                <LeftRightChild>\n                  <StyledTextAreaWrapper>\n                    <StyledTextArea\n                      placeholder=\"Paste labels here, labels should be separated by a newline\"\n                      onChange={(e) => setLabels(e.target.value)}\n                    ></StyledTextArea>\n                  </StyledTextAreaWrapper>\n                </LeftRightChild>\n              </LeftRight>\n              <ConfirmButton\n                {...colors}\n                onClick={() => {\n                  setError();\n                  if (rawDataset) {\n                    if (\n                      rawDataset.length %\n                        (imageSize * imageSize * colorDepth + 1) !==\n                      0\n                    ) {\n                      setError(\n                        `Dataset invalid - length of stream doesn't match the parameters`\n                      );\n                    } else {\n                      newDatasetConnected(\n                        {\n                          id: `d` + new Date().getTime(),\n                          name,\n                          imageSize,\n                          colorDepth,\n                          data:\n                            crop === `no`\n                              ? rawDataset\n                              : rawDataset.subarray(\n                                  0,\n                                  crop *\n                                    (imageSize * imageSize * colorDepth + 1)\n                                ),\n                          vectorize: true,\n                          normalizeMax,\n                          labels: labels.split(\"\\n\"),\n                        },\n                        server\n                      );\n                      close();\n                    }\n                  } else {\n                    setError(`file not loaded yet`);\n                  }\n                }}\n              >\n                Confirm\n              </ConfirmButton>\n              {error && <Error error={error} />}\n            </InnerDatasetSelect>\n          )}\n        />\n      )}\n    </>\n  );\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { NetworkCardParent } from \"./NetworkCard\";\nimport DatasetCard from \"./DatasetCard\";\nimport Error, { translateError } from \"./Error\";\nimport ServerLogin from \"../components/ServerLogin\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst FullCenter = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SelectableBigDatasetList = ({\n  servers,\n  datasets,\n  onSelect,\n  refreshFunction,\n}) => {\n  const [selected, select] = React.useState(false);\n  const [serversWithError, setServersWithError] = React.useState({});\n\n  return selected ? (\n    <FullCenter>\n      <DatasetCard dataset={selected} onClick={() => {}} />\n    </FullCenter>\n  ) : (\n    <Wrapper>\n      {servers.servers.map((server, i) => {\n        if (\n          !serversWithError[server.uniqueName] &&\n          datasets.serverDatasetsError[server.uniqueName]\n        ) {\n          setServersWithError(\n            Object.assign({}, serversWithError, { [server.uniqueName]: true })\n          );\n        }\n        if (\n          serversWithError[server.uniqueName] &&\n          !datasets.serverDatasetsError[server.uniqueName]\n        ) {\n          setServersWithError(\n            Object.assign({}, serversWithError, { [server.uniqueName]: false })\n          );\n          refreshFunction(server);\n        }\n        return (\n          <NetworkCardParent\n            key={`server_${i}_${server.uniqueName}_datasets`}\n            title={server.uniqueName}\n          >\n            {datasets.datasets[server.uniqueName] &&\n              Object.keys(datasets.datasets[server.uniqueName]).map(\n                (datasetId, j) => (\n                  <DatasetCard\n                    key={`dataset_sectioned_${j}`}\n                    dataset={datasets.datasets[server.uniqueName][datasetId]}\n                    onClick={() => {\n                      select(datasets.datasets[server.uniqueName][datasetId]);\n                      onSelect(server, datasetId);\n                    }}\n                  />\n                )\n              )}\n\n            {datasets.serverDatasetsError[server.uniqueName] &&\n              datasets.serverDatasetsError[server.uniqueName] !==\n                `Unauthorized` && (\n                <div>\n                  <Error\n                    error={translateError(\n                      datasets.serverDatasetsError[server.uniqueName]\n                    )}\n                    retryFunction={() => refreshFunction(server)}\n                  />\n                </div>\n              )}\n            {datasets.serverDatasetsError[server.uniqueName] ===\n              `Unauthorized` && <ServerLogin server={server} />}\n          </NetworkCardParent>\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nexport default SelectableBigDatasetList;\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport AnimatedFullScreenCard from \"./AnimatedFullScreenCard\";\nimport SelectableBigDatasetList from \"./SelectableBigDatasetList\";\nimport { fetchDatasets } from \"../redux/actions/datasets\";\nimport DatasetCard from \"./DatasetCard\";\n\nconst DatasetSelectWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SelectDatasetWrapper = styled.div`\n  width: 13em;\n  height: 15em;\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12),\n    0 3px 5px -1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  margin: 0.7em;\n  flex-grow: 0;\n  flex-shrink: 0;\n\n  transform: scale(1);\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n\n  background: ${(props) => props.backgroundbyelevation(1)};\n  text-decoration: none;\n  color: ${(props) => props.accenttextcolor};\n  display: block;\n\n  border: 2px ${(props) => props.color} dashed;\n  box-sizing: border-box;\n  font-size: 1em;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst InnerNoOverflow = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: scroll;\n`;\n\nconst DatasetSelect = ({\n  colors,\n  innerRef,\n  servers,\n  datasets,\n  getDatasets,\n  onDatasetSelect, //(server, networkId) => {}\n}) => {\n  const [selectedId, selectId] = useState();\n  const [open, setOpen] = useState(false);\n  const [wrapperRef, setWrapperRef] = useState();\n\n  React.useEffect(() => {\n    servers.servers.map((s) => {\n      getDatasets(s);\n    });\n  }, []);\n\n  return (\n    <DatasetSelectWrapper onClick={() => setOpen(true)}>\n      {(!selectedId || open) && (\n        <>\n          <SelectDatasetWrapper {...colors} ref={(ref) => setWrapperRef(ref)}>\n            Select dataset\n          </SelectDatasetWrapper>\n          {open && (\n            <AnimatedFullScreenCard\n              startFromElement={wrapperRef}\n              fullscreen={true}\n              onCloseCallback={() => {\n                setOpen(false);\n              }}\n              contentFunction={(closeCard) => {\n                return (\n                  <InnerNoOverflow>\n                    <SelectableBigDatasetList\n                      servers={servers}\n                      datasets={datasets}\n                      onSelect={(server, datasetId) => {\n                        closeCard(false);\n                        onDatasetSelect(server, datasetId);\n                        selectId({\n                          server: server.uniqueName,\n                          dataset: datasetId,\n                        });\n                      }}\n                      refreshFunction={(server) => getDatasets(server)}\n                    />\n                  </InnerNoOverflow>\n                );\n              }}\n            />\n          )}\n        </>\n      )}\n      {!open && selectedId && (\n        <DatasetCard\n          dataset={datasets.datasets[selectedId.server][selectedId.dataset]}\n          onClick={() => {\n            setOpen(true);\n          }}\n          getRef={(ref) => setWrapperRef(ref)}\n        />\n      )}\n    </DatasetSelectWrapper>\n  );\n};\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    getDatasets: (server) => fetchDatasets(server, dispatch),\n  })\n)(DatasetSelect);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setTrainingParam } from \"../redux/actions/training\";\nimport KeyValueTable from \"../components/KeyValueTable\";\n\nimport styled from \"styled-components\";\n\nimport { fetchNetwork } from \"../redux/actions/networks\";\nimport { fetchDataset } from \"../redux/actions/datasets\";\nimport { startTraining } from \"../redux/actions/training\";\n\n//components\nimport SpringButton from \"../components/SpringButton\";\nimport NetworkSelect from \"../components/NetworkSelect\";\nimport DatasetSelect from \"../components/DatasetSelect\";\nimport { Redirect } from \"react-router-dom\";\nimport Error from \"../components/Error\";\nimport { setNetwork } from \"../redux/actions/networks\";\n\nconst TrainingWrapper = styled.div`\n  height: 100%;\n  padding: 1em;\n`;\n\nconst Title = styled.h3`\n  margin: 0.5em;\n  margin-left: 0;\n  margin-right: 0;\n\n  box-shadow: 0;\n  box-sizing: border-box;\n`;\n\nconst TwoPart = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  @media only screen and (max-width: 900px) {\n    & {\n      flex-direction: column;\n    }\n  }\n`;\n\nconst TwoPartChild = styled.div`\n  width: 50%;\n  @media only screen and (max-width: 900px) {\n    & {\n      width: 100%;\n    }\n  }\n`;\n\nconst TwoPartVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n\nconst TwoPartVerticalChild = styled.div`\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StartTrainingButtonWrapper = styled.div`\n  width: calc(100% - 4em);\n  margin: 2em;\n  margin-top: 0;\n`;\n\nclass StartTraining extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      networkId: undefined,\n      datasetId: undefined,\n      datasetServer: undefined,\n      networkServer: undefined,\n      server: undefined,\n      trainingProps: {\n        epochs: 200,\n        batch_size: 1,\n        learningRate: -0.1,\n        decay: 0.005,\n      },\n      redirect: false,\n      error: false,\n    };\n  }\n  render() {\n    return this.state.redirect ? (\n      <Redirect to={`/training`} />\n    ) : (\n      <TrainingWrapper>\n        <TwoPart>\n          <TwoPartChild>\n            <TwoPartVertical>\n              <TwoPartVerticalChild>\n                <Title>Network</Title>\n                <NetworkSelect\n                  onNetworkSelect={(server, networkId) => {\n                    if (\n                      this.props.networks.networks[server.uniqueName][networkId]\n                        .reduced\n                    ) {\n                      this.props.getNetwork(networkId, server);\n                    }\n                    this.setState({\n                      networkId,\n                      networkServer: server,\n                      server,\n                    });\n                  }}\n                />\n              </TwoPartVerticalChild>\n              <TwoPartVerticalChild>\n                <Title>Dataset</Title>\n                <DatasetSelect\n                  onDatasetSelect={(server, datasetId) => {\n                    if (\n                      this.props.datasets.datasets[server.uniqueName][datasetId]\n                        .reduced\n                    ) {\n                      this.props.getDataset(datasetId, server);\n                    }\n                    this.setState({ datasetId, datasetServer: server });\n                  }}\n                />\n              </TwoPartVerticalChild>\n            </TwoPartVertical>\n          </TwoPartChild>\n          <TwoPartChild>\n            <KeyValueTable\n              data={this.state.trainingProps}\n              editFunction={(key, value) => {\n                this.setState((prev) => ({\n                  trainingProps: Object.assign({}, prev.trainingProps, {\n                    [key]: value,\n                  }),\n                }));\n              }}\n            ></KeyValueTable>\n\n            <StartTrainingButtonWrapper>\n              <SpringButton\n                text={`Start Training`}\n                color={this.props.colors.primarycolor}\n                textColor={this.props.colors.primarytextcolor}\n                onClick={() => {\n                  if (this.state.networkId && this.state.datasetId)\n                    if (\n                      this.props.networks.networks[\n                        this.state.networkServer.uniqueName\n                      ][this.state.networkId] &&\n                      this.props.networks.networks[\n                        this.state.networkServer.uniqueName\n                      ][this.state.networkId]\n                    ) {\n                      // https://stackoverflow.com/questions/1584370/how-to-merge-two-arrays-in-javascript-and-de-duplicate-items\n                      function arrayUnique(array) {\n                        var a = array.concat();\n                        for (var i = 0; i < a.length; ++i) {\n                          for (var j = i + 1; j < a.length; ++j) {\n                            if (a[i] === a[j]) a.splice(j--, 1);\n                          }\n                        }\n\n                        return a;\n                      }\n\n                      const dataset = this.props.datasets.datasets[\n                        this.state.datasetServer.uniqueName\n                      ][this.state.datasetId];\n                      const network = Object.assign(\n                        this.props.networks.networks[\n                          this.state.networkServer.uniqueName\n                        ][this.state.networkId],\n                        {\n                          serializeParams: arrayUnique(\n                            (\n                              this.props.networks.networks[\n                                this.state.networkServer.uniqueName\n                              ][this.state.networkId].serializeParams || []\n                            ).concat([\"labels\"])\n                          ),\n                          labels: dataset.labels,\n                        }\n                      );\n                      this.props.setNetwork(network, this.state.server);\n                      this.props.startTraining({\n                        server: this.state.server,\n                        network,\n                        dataset,\n                        trainingParams: this.state.trainingProps,\n                      });\n                      this.setState({ redirect: true });\n                    } else\n                      this.setState({ error: \"invalid network or dataset\" });\n                }}\n              />\n            </StartTrainingButtonWrapper>\n            {this.state.error && <Error error={this.state.error} />}\n          </TwoPartChild>\n        </TwoPart>\n      </TrainingWrapper>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    getNetwork: (networkId, server) =>\n      fetchNetwork(networkId, server, dispatch),\n    getDataset: (datasetId, server) =>\n      fetchDataset(datasetId, server, dispatch),\n    setNetwork: (network, server) => setNetwork(server, network, dispatch),\n    startTraining: ({ server, network, dataset, trainingParams }) =>\n      startTraining({ server, network, dataset, trainingParams, dispatch }),\n  })\n)(StartTraining);\n","import TrainingController from \"../../other/TrainingController\";\nimport { setNetwork } from \"./networks\";\n\nexport const START_TRAINING = \"START_TRAINING\";\nexport const STOP_TRAINING = \"STOP_TRAINING\";\nexport const TRAINING_PROGRESS = \"TRAINING_PROGRESS\";\n\nexport const startedTraining = ({\n  network,\n  server,\n  dataset,\n  trainingParams,\n  epochs,\n  learningRate,\n  trainingInstance,\n}) => ({\n  type: START_TRAINING,\n  network,\n  server,\n  dataset,\n  trainingParams,\n  epochs,\n  learningRate,\n  trainingInstance,\n});\n\nexport const stoppedTraining = ({ network, server }) => ({\n  type: STOP_TRAINING,\n  network,\n  server,\n});\n\nexport const trainingProgress = ({\n  server,\n  epoch,\n  err,\n  accuracy,\n  learningRate,\n  network,\n  epochs,\n}) => ({\n  type: TRAINING_PROGRESS,\n  epoch,\n  err,\n  accuracy,\n  learningRate,\n  server,\n  network,\n  epochs,\n});\n\nexport const startTraining = ({\n  server,\n  network,\n  dataset,\n  trainingParams,\n  dispatch,\n}) => {\n  const trainingInstance = new TrainingController({\n    server,\n    network,\n    dataset,\n    trainingParams,\n  });\n  trainingInstance.addEventListener(\"start\", () => {\n    dispatch(\n      startedTraining({\n        network,\n        server,\n        dataset,\n        trainingParams,\n        learningRate: trainingParams.learningRate,\n        epochs: trainingParams.epochs,\n        trainingInstance: trainingInstance,\n      })\n    );\n  });\n  trainingInstance.addEventListener(\"end\", () => {\n    dispatch(stoppedTraining({ network, server }));\n  });\n  trainingInstance.addEventListener(\n    \"batchProgress\",\n    (epoch, accuracy, err, learningRate, trainedNetwork) => {\n      setNetwork(\n        server,\n        Object.assign(JSON.parse(trainedNetwork), {\n          name: network.name,\n          id: network.id,\n        }),\n        dispatch,\n        false\n      );\n      dispatch(\n        trainingProgress({\n          epoch,\n          err,\n          accuracy,\n          learningRate,\n          server,\n          network,\n          epochs: trainingParams.epochs,\n        })\n      );\n    }\n  );\n  trainingInstance.startLearning();\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchDatasets } from \"../redux/actions/datasets\";\nimport { NetworkCardParent } from \"../components/NetworkCard\";\nimport Error, { translateError } from \"../components/Error\";\nimport ServerLogin from \"../components/ServerLogin\";\nimport DatasetCard, { AddDatasetCard } from \"../components/DatasetCard\";\nimport { SyncLoader } from \"react-spinners\";\n\nclass Datasets extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.servers.servers.map((server) =>\n      this.props.fetchDatasets(server)\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.servers.servers.map((server) => (\n          <NetworkCardParent\n            title={server.uniqueName}\n            key={`dataset_parent${server.uniqueName}`}\n          >\n            {this.props.datasets.serverDatasetsLoading[server.uniqueName] && (\n              <div style={{ width: `100%`, heigh: `100%` }}>\n                <SyncLoader />\n              </div>\n            )}\n            {this.props.datasets.serverDatasetsError[server.uniqueName] &&\n              this.props.datasets.serverDatasetsError[server.uniqueName] !==\n                `Unauthorized` && (\n                <Error\n                  error={translateError(\n                    this.props.datasets.serverDatasetsError[server.uniqueName]\n                  )}\n                  retryFunction={() => this.props.fetchDatasets(server)}\n                />\n              )}\n            {this.props.datasets.serverDatasetsError[server.uniqueName] ===\n              `Unauthorized` && <ServerLogin server={server} />}\n            {!this.props.datasets.serverDatasetsLoading[server.uniqueName] &&\n              !this.props.datasets.serverDatasetsError[server.uniqueName] &&\n              this.props.datasets.datasets[server.uniqueName] && (\n                <>\n                  {Object.keys(\n                    this.props.datasets.datasets[server.uniqueName]\n                  ).map((datasetId) => (\n                    <DatasetCard\n                      key={`dataset_card_${datasetId}`}\n                      dataset={\n                        this.props.datasets.datasets[server.uniqueName][\n                          datasetId\n                        ]\n                      }\n                      serverId={server.uniqueName}\n                    />\n                  ))}\n                  <AddDatasetCard server={server} />\n                </>\n              )}\n          </NetworkCardParent>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({\n    fetchDatasets: (server) => fetchDatasets(server, dispatch),\n  })\n)(Datasets);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonWrapper = styled.div`\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  background: ${(props) => props.color};\n  color: ${(props) => props.textcolor};\n  border-radius: 5px;\n  margin-top: 1em;\n  padding: 1em;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst TwoPart = styled.div`\n  width: 50%;\n  height: 100%;\n  text-align: center;\n`;\n\nexport default ({ color, textcolor, text, onConfirm, style }) => {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <ButtonWrapper\n      {...{ color, textcolor }}\n      style={style}\n      onClick={() => {\n        if (!open) {\n          setOpen(true);\n        }\n      }}\n    >\n      {!open && <div>{text}</div>}\n      {open && (\n        <>\n          <TwoPart\n            onClick={() => {\n              onConfirm();\n              setOpen(false);\n            }}\n          >\n            confirm\n          </TwoPart>\n          <TwoPart\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            cancel\n          </TwoPart>\n        </>\n      )}\n    </ButtonWrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport TrainingController from \"../other/TrainingController\";\nimport { deepNormalize, max, deepMap } from \"../CNN-js/math\";\nimport { tint, mix } from \"polished\";\nimport { SyncLoader } from \"react-spinners\";\nconst CNN = require(\"../CNN-js/cnn\").CNN;\n\nconst StyledTable = styled.table`\n  height: 100%;\n  width: 100%;\n  padding: 0.5em;\n  box-sizing: border-box;\n  table-layout: fixed;\n`;\nconst StyledRow = styled.tr``;\nconst StyledData = styled.td`\n  text-align: center;\n  background: ${(props) => tint(1 - props.opacity, props.primarycolor)};\n  color: ${(props) =>\n    props.opacity > 0.5 ? props.primarytextcolor : props.textcolor};\n`;\n\nconst StyledDataFlipped = styled.td`\n  text-align: center;\n  color: ${(props) => props.textcolor};\n  transform: rotate(-90deg);\n  height: 5em;\n`;\nconst StyledDataStart = styled.td`\n  text-align: center;\n  color: ${(props) => props.textcolor};\n  width: 5em;\n`;\n\nconst StyledCenterData = styled.td`\n  text-align: center;\n  background: ${(props) => tint(1 - props.opacity, props.primarycolor)};\n  color: ${(props) =>\n    props.opacity > 0.5 ? props.primarytextcolor : props.textcolor};\n  border: 1px solid grey;\n\n  border-radius: 2px;\n`;\n\nconst TableContainer = styled.div`\n  background: ${(props) => props.backgroundbyelevation(1)};\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  color: ${(props) => props.textcolor};\n  border-radius: 5px;\n  :not(:first-child) {\n    margin-top: 0.5em;\n  }\n  padding: 0.5em;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  font-size: 0.5em;\n`;\n\nconst TableMenuTop = styled.div`\n  height: 1em;\n  text-align: center;\n  vertical-align: center;\n`;\n\nconst TableMenuRestBottom = styled.div`\n  height: calc(100% - 0.5em);\n  display: flex;\n  flex-direction: row;\n`;\nconst TableMenuLeft = styled.div`\n  width: 1em;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(-90deg) translateZ(0);\n  -webkit-font-smoothing: antialiased;\n`;\n\nconst TableRest = styled.div`\n  width: calc(100% - 0.5em);\n  height: 100%;\n`;\n\nexport default connect((state) => state)(\n  ({ colors, network, dataset, updateVar, statsCallback }) => {\n    const [cm, setCm] = React.useState(null);\n    const [normalizedCm, setNormalizedCm] = React.useState(null);\n    const [stats, setStats] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n\n    const labels = dataset.labels;\n\n    React.useEffect(() => {\n      if (!loading) {\n        setLoading(true);\n        const instance = new TrainingController({ network, dataset });\n        instance.addEventListener(\"confusionMatrix\", (confusion) => {\n          setCm(confusion);\n          setNormalizedCm(deepNormalize(confusion, max(confusion)));\n          const stats1 = CNN.confusionMatrixStats(confusion);\n          setStats(stats1);\n          if (statsCallback) statsCallback(stats1);\n          setLoading(false);\n        });\n        instance.confusionMatrix();\n      }\n    }, [updateVar]);\n    return cm && stats ? (\n      <TableContainer {...colors}>\n        <TableMenuTop>\n          predicted{loading ? `(recalculating...)` : ``}\n        </TableMenuTop>\n        <TableMenuRestBottom>\n          <TableMenuLeft>actual</TableMenuLeft>\n          <TableRest>\n            <StyledTable>\n              {labels && (\n                <StyledRow>\n                  <StyledData {...colors} opacity={0}></StyledData>\n                  {labels.map((l) => (\n                    <StyledDataFlipped {...colors}>{l}</StyledDataFlipped>\n                  ))}\n                </StyledRow>\n              )}\n              {cm.map((row, i) => (\n                <StyledRow>\n                  {labels && (\n                    <StyledDataStart {...colors}>{labels[i]}</StyledDataStart>\n                  )}\n                  {row.map((predictedCount, j) =>\n                    i === j ? (\n                      <StyledCenterData\n                        {...colors}\n                        opacity={normalizedCm[i][j]}\n                      >\n                        {predictedCount}\n                      </StyledCenterData>\n                    ) : (\n                      <StyledData {...colors} opacity={normalizedCm[i][j]}>\n                        {predictedCount}\n                      </StyledData>\n                    )\n                  )}\n                </StyledRow>\n              ))}\n            </StyledTable>\n          </TableRest>\n        </TableMenuRestBottom>\n      </TableContainer>\n    ) : (\n      <div>\n        <SyncLoader />\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Error from \"../components/Error\";\nimport styled from \"styled-components\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { Line } from \"react-chartjs-2\";\nimport ButtonWithConfirmation from \"../components/ButtonWithConfirmation\";\n\nimport ConfusionMatrix from \"../components/ConfusionMatrix\";\nimport { getDataset } from \"../other/api\";\n\nconst ChardCard = styled.div`\n  background: ${(props) => props.backgroundbyelevation(1)};\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  color: ${(props) => props.textcolor};\n  border-radius: 5px;\n  :not(:first-child) {\n    margin-top: 0.5em;\n  }\n  padding: 0.5em;\n`;\n\nclass ChartWrapper extends React.Component {\n  componentDidUpdate() {\n    if (this.chartRef) {\n      this.chartRef.chartInstance.update();\n    }\n  }\n\n  render() {\n    return (\n      <ChardCard {...this.props.colors}>\n        <Line\n          data={{\n            datasets: this.props.datasets.map((d) =>\n              Object.assign({}, d, {\n                fill: false,\n                borderColor: this.props.color,\n                data: d.data.map((y, x) => ({\n                  x,\n                  y,\n                })),\n              })\n            ),\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: this.props.title },\n            scales: {\n              xAxes: [\n                {\n                  type: `linear`,\n                  ticks: this.props.maxX\n                    ? {\n                        suggestedMin: 0,\n                        suggestedMax: this.props.maxX,\n                      }\n                    : {},\n                },\n              ],\n            },\n          }}\n          ref={(reference) => (this.chartRef = reference)}\n        />\n      </ChardCard>\n    );\n  }\n}\n\nconst TopBottom = styled.div`\n  height: 100%;\n`;\n\nconst TopBottomChild = styled.div`\n  height: 50%;\n  width: 100%;\n  padding: 0.5em;\n  box-sizing: border-box;\n`;\n\nconst TableWrapper = styled.div`\n  background: ${(props) => props.backgroundbyelevation(1)};\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  color: ${(props) => props.textcolor};\n  border-radius: 5px;\n`;\n\nconst TableRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  &:not(:first-child) {\n    border-top: 1px solid gray;\n  }\n`;\n\nconst TableColumn = styled.div`\n  width: 50%;\n  text-align: center;\n  padding: 0.5em;\n`;\n\nconst Table = connect((state) => ({\n  colors: state.colors,\n}))(({ colors, data, include, style }) => (\n  <TableWrapper {...colors} style={style}>\n    {(include || Object.keys(data)).map((key, i) => (\n      <TableRow key={`data_row_${i}`}>\n        <TableColumn>{key}</TableColumn>\n        {typeof data[key] === `object` ? (\n          <TableColumn>\n            {Object.keys(data[key]).map((keyInner, j) => (\n              <TableRow key={`data_row_row_${j}`}>\n                <TableColumn>{keyInner}</TableColumn>\n                <TableColumn>{data[key][keyInner]}</TableColumn>\n              </TableRow>\n            ))}\n          </TableColumn>\n        ) : (\n          <TableColumn>{data[key]}</TableColumn>\n        )}\n      </TableRow>\n    ))}\n  </TableWrapper>\n));\n\nconst TrainingProgressWrapper = styled.div`\n  padding: 0.5em;\n`;\n\nconst LeftRight = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nconst LeftRightChild = styled.div`\n  width: 50%;\n  max-height: 100vh;\n  box-sizing: border-box;\n`;\n\nclass TrainingProgress extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: {},\n    };\n  }\n\n  render() {\n    const trained =\n      this.props.match.params.serverUniqueName === `trained` &&\n      this.props.training.trained[this.props.match.params.networkId];\n    const serverName = trained\n      ? this.props.training.trained[this.props.match.params.networkId].server\n      : this.props.match.params.serverUniqueName;\n    const networkId = trained\n      ? this.props.training.trained[this.props.match.params.networkId].network\n      : this.props.match.params.networkId;\n\n    const trainingData = trained\n      ? this.props.training.trained[this.props.match.params.networkId]\n      : this.props.training[serverName] &&\n        this.props.training[serverName][networkId];\n    return (\n      <TrainingProgressWrapper>\n        {serverName && networkId ? (\n          this.props.networks.networks[serverName] &&\n          this.props.networks.networks[serverName][networkId] ? (\n            trained || (this.props.training[serverName] && trainingData) ? (\n              <>\n                <LeftRight>\n                  <LeftRightChild>\n                    <TopBottom>\n                      <TopBottomChild>\n                        <ChartWrapper\n                          colors={this.props.colors}\n                          datasets={[\n                            {\n                              label: `error`,\n                              data: trainingData.errArr,\n                            },\n                          ]}\n                          title={`error`}\n                          /*maxX={\n                      this.props.training[\n                        serverName\n                      ][networkId].epochs\n                    }*/\n                          color={this.props.colors.primarycolor}\n                        />\n                      </TopBottomChild>\n                      <TopBottomChild>\n                        <ChartWrapper\n                          colors={this.props.colors}\n                          datasets={[\n                            {\n                              label: `accuracy`,\n                              data: trainingData.accuracyArr.map(\n                                (i) => i * 100\n                              ),\n                            },\n                          ]}\n                          title={`accuracy`}\n                          /*maxX={\n                      this.props.training[\n                        serverName\n                      ][networkId].epochs\n                    }*/\n                          color={this.props.colors.primarycolor}\n                        />\n                        {/*<ChartWrapper\n                  colors={this.props.colors}\n                    datasets={[\n                      {\n                        label: `learning rate`,\n                        data: this.props.training[\n                          serverName\n                        ][networkId].learningRateArr,\n                      },\n                    ]}\n                    title={`learning rate`}\n                    // maxX={\n                    //   this.props.training[\n                    //     serverName\n                    //   ][networkId].epochs\n                    // }\n                    color={this.props.colors.primarycolor}\n                  />*/}\n                      </TopBottomChild>\n                    </TopBottom>\n                  </LeftRightChild>\n                  <LeftRightChild>\n                    <TopBottom>\n                      <TopBottomChild>\n                        <Table\n                          data={{\n                            network: this.props.networks.networks[serverName][\n                              networkId\n                            ].name,\n                            dataset:\n                              this.props.training[serverName] &&\n                              trainingData.dataset.name,\n                          }}\n                        />\n                        <Table\n                          style={{ marginTop: `0.5em` }}\n                          data={trainingData}\n                          include={[\n                            `epoch`,\n                            `epochs`,\n                            `learningRate`,\n                            `err`,\n                            `accuracy`,\n                          ]}\n                        />\n                      </TopBottomChild>\n                      <TopBottomChild>\n                        <LeftRight>\n                          <LeftRightChild style={{ paddingRight: `0.5em` }}>\n                            <ConfusionMatrix\n                              updateVar={trainingData.epoch}\n                              network={\n                                this.props.networks.networks[serverName][\n                                  networkId\n                                ]\n                              }\n                              dataset={\n                                this.props.datasets.datasets[serverName][\n                                  trainingData.dataset.id\n                                ]\n                              }\n                              statsCallback={(stats) =>\n                                this.setState({ stats })\n                              }\n                            />\n                          </LeftRightChild>\n                          <LeftRightChild style={{ paddingLeft: `0.5em` }}>\n                            <Table data={this.state.stats.avg || {}} />\n                            {!trained && (\n                              <ButtonWithConfirmation\n                                color={this.props.colors.errorcolor}\n                                textcolor={`white`}\n                                text={`stop learning`}\n                                onConfirm={() =>\n                                  this.props.training[serverName][\n                                    networkId\n                                  ].trainingInstance.terminate()\n                                }\n                              />\n                            )}\n                          </LeftRightChild>\n                        </LeftRight>\n                      </TopBottomChild>\n                    </TopBottom>\n                  </LeftRightChild>\n                </LeftRight>\n              </>\n            ) : (\n              <>\n                <Error error={`network isn't training`} />\n                <Redirect to={`/training`} />\n              </>\n            )\n          ) : (\n            <Error error={`network isn't training`} />\n          )\n        ) : (\n          <Error error={`invalid network or server`} />\n        )}\n      </TrainingProgressWrapper>\n    );\n  }\n}\n\nexport default connect(\n  (state) => state,\n  (dispatch) => ({ fetchDataset: (id, server) => getDataset(id, server) })\n)(TrainingProgress);\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\n\n// components\nimport Sidebar from \"./Sidebar\";\nimport TopBar from \"./TopBar\";\nimport TrainingIndicator from \"./TrainingIndicator\";\n\n// screens\nimport Dashboard from \"../screens/Dashboard\";\nimport Networks from \"../screens/Networks\";\nimport Network from \"../screens/Network\";\nimport Training from \"../screens/Training\";\nimport StartTraining from \"../screens/StartTraining\";\nimport Datasets from \"../screens/Datasets\";\nimport TrainingProgress from \"../screens/TrainingProgress\";\n\n// router\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// redux\nimport { connect } from \"react-redux\";\n\n// resources\nimport { MdHome, MdSchool, MdPhotoLibrary } from \"react-icons/md\";\nimport { IoMdGitNetwork } from \"react-icons/io\";\n\nconst screens = [\n  /*{\n    path: `/`,\n    fullName: `Dashboard`,\n    component: Dashboard,\n    exact: true,\n    exactLink: true,\n    icon: MdHome,\n  },*/\n  {\n    path: `/networks`,\n    fullName: `Networks`,\n    component: Networks,\n    exact: true,\n    icon: ({ style }) => (\n      <IoMdGitNetwork style={{ transform: `rotate(-90deg)`, ...style }} />\n    ),\n  },\n  {\n    path: `/datasets`,\n    fullName: `Datasets`,\n    component: Datasets,\n    exact: true,\n    icon: MdPhotoLibrary,\n  },\n  {\n    path: `/networks/:serverUniqueName/:networkId`,\n    component: Network,\n  },\n  {\n    path: `/training`,\n    fullName: `Training`,\n    component: Training,\n    exact: true,\n    icon: MdSchool,\n    customRightIcon: <TrainingIndicator />,\n  },\n  {\n    path: `/training/:serverUniqueName/:networkId`,\n    component: TrainingProgress,\n  },\n  {\n    path: `/startTraining`,\n    component: StartTraining,\n    exact: true,\n  },\n];\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: ${(props) => props.background};\n  color: ${(props) => props.textcolor};\n`;\n\nconst SideAndScreens = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  flex-shrink: 1;\n  overflow: auto;\n`;\n\nconst ScreenSwitcher = styled.div`\n  flex-shrink: 1;\n  flex-grow: 1;\n  height: 100%;\n  overflow: auto;\n`;\n\nfunction App({ colors }) {\n  return (\n    <Router>\n      <AppWrapper {...colors}>\n        <TopBar />\n        <SideAndScreens>\n          <Sidebar screens={screens} />\n          <ScreenSwitcher>\n            {screens.map((screen) => (\n              <Route\n                path={screen.path}\n                component={screen.component}\n                exact={screen.exact}\n              />\n            ))}\n          </ScreenSwitcher>\n        </SideAndScreens>\n      </AppWrapper>\n    </Router>\n  );\n}\n\nexport default connect((state) => state)(App);\n","import { SET_COLOR } from \"../actions/colors\";\n\nconst darkMode = localStorage.getItem(\"darkMode\");\n\nconst defaultState = {\n  background: darkMode ? `#121212` : `#f4f8f9`,\n  topbarbackground: darkMode ? `#121212` : `white`,\n  backgroundbyelevation: (e) =>\n    darkMode ? `rgb(${18 + e * 20},${18 + e * 20},${18 + e * 20})` : `white`,\n  primarycolor: `#2261c6`,\n  primarytextcolor: `white`,\n  errorcolor: `#e74c3c`,\n  textcolor: darkMode ? `white` : `black`,\n  accenttextcolor: darkMode ? `white` : `black`,\n  subaccenttextcolor: darkMode ? `white` : `black`,\n  darkMode,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_COLOR:\n      return Object.assign({}, state, { [action.property]: action.value });\n    default:\n      return state;\n  }\n};\n","import { SET_STRUCT_PROP } from \"../actions/structure\";\n\nconst defaultState = {\n  sidebarwidth: `250px`,\n  topbarheight: `50px`,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_STRUCT_PROP:\n      return Object.assign({}, state, { [action.property]: action.value });\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_NETWORKS_REQUEST,\n  FETCH_NETWORKS_SUCCESS,\n  FETCH_NETWORKS_ERROR,\n  UNLOAD_NETWORKS,\n  NEW_NETWORK_REQUEST,\n  NEW_NETWORK_SUCCESS,\n  NEW_NETWORK_ERROR,\n  FETCH_NETWORK_REQUEST,\n  FETCH_NETWORK_SUCCESS,\n  FETCH_NETWORK_ERROR,\n  SET_NETWORK_SUCCESS,\n} from \"../actions/networks\";\n\nimport { NetworkArchitectures } from \"../../CNN-js/cnn\";\n\nconst defaultState = {\n  networks: {},\n  isLoading: {},\n  error: {},\n  networkLoading: {},\n  networkError: {},\n  networkArchitectures: NetworkArchitectures,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_NETWORK_REQUEST:\n      return Object.assign({}, state, {\n        networkLoading: Object.assign({}, state.networkLoading, {\n          [action.server.uniqueName + action.networkId]: true,\n        }),\n        networkError: Object.assign({}, state.networkError, {\n          [action.server.uniqueName + action.networkId]: undefined,\n        }),\n      });\n    case FETCH_NETWORK_SUCCESS:\n      return Object.assign({}, state, {\n        networkLoading: Object.assign({}, state.networkLoading, {\n          [action.server.uniqueName + action.networkId]: false,\n        }),\n        networkError: Object.assign({}, state.networkError, {\n          [action.server.uniqueName + action.networkId]: undefined,\n        }),\n        networks: Object.assign(state.networks, {\n          [action.server.uniqueName]: Object.assign(\n            {},\n            state.networks[action.server.uniqueName],\n            { [action.networkId]: action.network }\n          ),\n        }),\n      });\n    case SET_NETWORK_SUCCESS:\n      return Object.assign({}, state, {\n        networks: Object.assign({}, state.networks, {\n          [action.server.uniqueName]: Object.assign(\n            {},\n            state.networks[action.server.uniqueName],\n            {\n              [action.network.id]: action.network,\n            }\n          ),\n        }),\n      });\n    case FETCH_NETWORK_ERROR:\n      return Object.assign({}, state, {\n        networkLoading: Object.assign({}, state.networkLoading, {\n          [action.server.uniqueName + action.networkId]: false,\n        }),\n        networkError: Object.assign({}, state.networkError, {\n          [action.server.uniqueName + action.networkId]: action.err,\n        }),\n      });\n    case NEW_NETWORK_REQUEST:\n      return Object.assign({}, state, { isLoading: true });\n    case NEW_NETWORK_SUCCESS:\n      return Object.assign({}, state, { isLoading: false });\n    case NEW_NETWORK_ERROR:\n      return Object.assign({}, state, { error: action.error });\n    case FETCH_NETWORKS_REQUEST:\n      return Object.assign({}, state, {\n        networks: Object.assign({}, state.networks),\n        isLoading: Object.assign({}, state.isLoading, {\n          [action.server.uniqueName]: true,\n        }),\n        error: Object.assign({}, state.error, {\n          [action.server.uniqueName]: false,\n        }),\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\n      });\n    case FETCH_NETWORKS_SUCCESS:\n      return Object.assign({}, state, {\n        networks: Object.assign({}, state.networks, {\n          [action.server.uniqueName]: action.networks,\n        }),\n        isLoading: Object.assign({}, state.isLoading, {\n          [action.server.uniqueName]: false,\n        }),\n        error: Object.assign({}, state.error, {\n          [action.server.uniqueName]: false,\n        }),\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\n      });\n    case FETCH_NETWORKS_ERROR:\n      return Object.assign({}, state, {\n        networks: Object.assign({}, state.networks),\n        isLoading: Object.assign({}, state.isLoading, {\n          [action.server.uniqueName]: false,\n        }),\n        error: Object.assign({}, state.error, {\n          [action.server.uniqueName]: action.error,\n        }),\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\n      });\n    case UNLOAD_NETWORKS:\n      return Object.assign({}, state, {\n        networks: Object.assign({}, state.networks, {\n          [action.server.uniqueName]: undefined,\n        }),\n        isLoading: Object.assign({}, state.isLoading, {\n          [action.server.uniqueName]: false,\n        }),\n        error: Object.assign({}, state.error, {\n          [action.server.uniqueName]: false,\n        }),\n        networkArchitectures: Object.assign({}, state.networkArchitectures),\n      });\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_SERVER_LOGIN_REQUEST,\n  FETCH_SERVER_LOGIN_SUCCESS,\n  FETCH_SERVER_LOGIN_ERROR,\n} from \"../actions/servers\";\n\nlet savedServers_array = localStorage.getItem(\"servers_store\");\nif (savedServers_array) savedServers_array = JSON.parse(savedServers_array);\nconst savedServers = savedServers_array ? {} : null;\nif (savedServers_array)\n  savedServers_array.forEach((i) => {\n    savedServers[i.uniqueName] = i;\n  });\n\nconst defaultState = {\n  servers: [\n    {\n      url: `local`,\n      uniqueName: `Local storage`,\n      apiToken: `not needed`,\n    },\n    /*{\n      url: `http://localhost:3005`,\n      //apiToken: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0YWY2NDdjNWQ0Yjc5MGJhN2ExNGIzZDZjOTY2ZTY0ZTM2ZTAyMzRiM2U4YzY0NmZlYzZjZjk5YzdhNmYyNDU5IiwiaWF0IjoxNTgyNTc3MzE1LCJleHAiOjE1ODMxODIxMTV9.EsPP7BQO8R4aKCjwxCN_xspVjqKQ3BR5BwJrRHL7GrA`,\n      uniqueName: `Local server`,\n      isLoading: false,\n      error: false,\n      apiToken:\n        savedServers &&\n        savedServers[`Local server`] &&\n        savedServers[`Local server`].apiToken\n    },\n    {\n      url: `http://localhost:3005`,\n      //apiToken: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0YWY2NDdjNWQ0Yjc5MGJhN2ExNGIzZDZjOTY2ZTY0ZTM2ZTAyMzRiM2U4YzY0NmZlYzZjZjk5YzdhNmYyNDU5IiwiaWF0IjoxNTgyNTc3MzE1LCJleHAiOjE1ODMxODIxMTV9.EsPP7BQO8R4aKCjwxCN_xspVjqKQ3BR5BwJrRHL7GrA`,\n      uniqueName: `Local server1`,\n      isLoading: false,\n      error: false,\n      apiToken:\n        savedServers &&\n        savedServers[`Local server1`] &&\n        savedServers[`Local server1`].apiToken\n    }*/\n  ],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_SERVER_LOGIN_REQUEST:\n      return {\n        servers: state.servers.map((server) =>\n          Object.assign(\n            {},\n            server,\n            action.server.uniqueName === server.uniqueName\n              ? { isLoading: true, error: false }\n              : {}\n          )\n        ),\n      };\n    case FETCH_SERVER_LOGIN_SUCCESS:\n      const servers_store = state.servers.map((server) =>\n        Object.assign(\n          {},\n          server,\n          action.server.uniqueName === server.uniqueName\n            ? { isLoading: false, error: false, apiToken: action.apiToken }\n            : {}\n        )\n      );\n      localStorage.setItem(\"servers_store\", JSON.stringify(servers_store));\n      return {\n        servers: servers_store,\n      };\n    case FETCH_SERVER_LOGIN_ERROR:\n      return {\n        servers: state.servers.map((server) =>\n          Object.assign(\n            {},\n            server,\n            action.server.uniqueName === server.uniqueName\n              ? { isLoading: false, error: action.error }\n              : {}\n          )\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  START_TRAINING,\n  STOP_TRAINING,\n  TRAINING_PROGRESS,\n} from \"../actions/training\";\n\nconst defaultState = { trained: [] };\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case START_TRAINING:\n      return Object.assign({}, state, {\n        [action.server.uniqueName]: Object.assign(\n          {},\n          state[action.server.uniqueName],\n          {\n            [action.network.id]: {\n              dataset: Object.assign({}, action.dataset, { data: undefined }),\n              epochs: action.epochs,\n              epoch: `initializing`,\n              learningRate: action.learningRate,\n              learningRateArr: [],\n              errArr: [],\n              accuracyArr: [],\n              trainingInstance: action.trainingInstance,\n            },\n          }\n        ),\n      });\n    case STOP_TRAINING:\n      const serverCopy = Object.assign({}, state[action.server.uniqueName]);\n      const a = Object.assign(serverCopy[action.network.id], {\n        server: action.server.uniqueName,\n        network: action.network.id,\n      });\n      delete serverCopy[action.network.id];\n      return Object.assign({}, state, {\n        [action.server.uniqueName]: serverCopy,\n        trained: state.trained.concat([a]),\n      });\n    case TRAINING_PROGRESS:\n      return Object.assign({}, state, {\n        [action.server.uniqueName]: Object.assign(\n          {},\n          state[action.server.uniqueName],\n          {\n            [action.network.id]: {\n              epoch: action.epoch,\n              epochs: action.epochs,\n              err: action.err,\n              accuracy: action.accuracy,\n              learningRate: action.learningRate,\n              dataset: Object.assign(\n                {},\n                state[action.server.uniqueName][action.network.id].dataset,\n                { data: undefined }\n              ),\n              learningRateArr: Object.assign(\n                [],\n                state[action.server.uniqueName][action.network.id]\n                  .learningRateArr,\n                {\n                  [action.epoch]: action.learningRate * -1,\n                }\n              ),\n              errArr: Object.assign(\n                [],\n                state[action.server.uniqueName][action.network.id].errArr,\n                {\n                  [action.epoch]: action.err,\n                }\n              ),\n              accuracyArr: Object.assign(\n                [],\n                state[action.server.uniqueName][action.network.id].accuracyArr,\n                {\n                  [action.epoch]: action.accuracy,\n                }\n              ),\n              trainingInstance:\n                state[action.server.uniqueName][action.network.id]\n                  .trainingInstance,\n            },\n          }\n        ),\n      });\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_REDUCED_DATASETS_REQUEST,\n  FETCH_REDUCED_DATASETS_SUCCESS,\n  FETCH_REDUCED_DATASETS_ERROR,\n  FETCH_DATASET_REQUEST,\n  FETCH_DATASET_SUCCESS,\n  FETCH_DATASET_ERROR,\n  NEW_DATASET_REQUEST,\n  NEW_DATASET_SUCCESS,\n  NEW_DATASET_ERROR,\n} from \"../actions/datasets\";\n\nconst defaultState = {\n  datasets: {},\n  datasetsLoading: {},\n  serverDatasetsLoading: {},\n  serverDatasetsError: {},\n  datasetsError: {},\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_REDUCED_DATASETS_REQUEST:\n      return {\n        datasets: state.datasets,\n        datasetsLoading: state.datasetsLoading,\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\n          [action.server.uniqueName]: true,\n        }),\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\n          [action.server.uniqueName]: undefined,\n        }),\n        datasetsError: state.datasetsError,\n      };\n    case FETCH_REDUCED_DATASETS_SUCCESS:\n      return {\n        datasets: Object.assign(state.datasets, {\n          [action.server.uniqueName]: Object.assign(\n            {},\n            state.datasets[action.server.uniqueName],\n            action.datasets\n          ),\n        }),\n        datasetsLoading: state.datasetsLoading,\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\n          [action.server.uniqueName]: undefined,\n        }),\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\n          [action.server.uniqueName]: undefined,\n        }),\n        datasetsError: state.datasetsError,\n      };\n    case FETCH_REDUCED_DATASETS_ERROR:\n      return {\n        datasets: state.datasets,\n        datasetsLoading: state.datasetsLoading,\n        serverDatasetsLoading: Object.assign({}, state.serverDatasetsLoading, {\n          [action.server.uniqueName]: undefined,\n        }),\n        serverDatasetsError: Object.assign({}, state.serverDatasetsError, {\n          [action.server.uniqueName]: action.err,\n        }),\n        datasetsError: state.datasetsError,\n      };\n\n    case FETCH_DATASET_REQUEST:\n      return {\n        datasets: state.datasets,\n        datasetsLoading: Object.assign({}, state.datasetsError, {\n          [action.datasetId]: undefined,\n        }),\n        serverDatasetsLoading: state.serverDatasetsLoading,\n        serverDatasetsError: state.serverDatasetsError,\n        datasetsError: Object.assign({}, state.datasetsError, {\n          [action.datasetId]: undefined,\n        }),\n      };\n    case FETCH_DATASET_SUCCESS:\n      return {\n        datasets: Object.assign(state.datasets, {\n          [action.server.uniqueName]: Object.assign(\n            {},\n            state.datasets[action.server.uniqueName],\n            {\n              [action.dataset.id]: action.dataset,\n            }\n          ),\n        }),\n        datasetsLoading: Object.assign({}, state.datasetsError, {\n          [action.dataset.id]: undefined,\n        }),\n        serverDatasetsLoading: state.serverDatasetsLoading,\n        serverDatasetsError: state.serverDatasetsError,\n        datasetsError: Object.assign({}, state.datasetsError, {\n          [action.dataset.id]: undefined,\n        }),\n      };\n    case FETCH_DATASET_ERROR:\n      return {\n        datasets: state.datasets,\n        datasetsLoading: Object.assign({}, state.datasetsError, {\n          [action.datasetId]: undefined,\n        }),\n        serverDatasetsLoading: state.serverDatasetsLoading,\n        serverDatasetsError: state.serverDatasetsError,\n        datasetsError: Object.assign({}, state.datasetsError, {\n          [action.datasetId]: action.err,\n        }),\n      };\n    // case NEW_DATASET_REQUEST:\n    //   return\n    case NEW_DATASET_SUCCESS:\n      return {\n        datasets: Object.assign(state.datasets, {\n          [action.server.uniqueName]: Object.assign(\n            {},\n            state.datasets[action.server.uniqueName],\n            {\n              [action.dataset.id]: action.dataset,\n            }\n          ),\n        }),\n        datasetsLoading: state.datasetsError,\n        serverDatasetsLoading: state.serverDatasetsLoading,\n        serverDatasetsError: state.serverDatasetsError,\n        datasetsError: state.datasetsError,\n      };\n    // case NEW_DATASET_ERROR:\n    //   return;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\n// reducers\nimport colors from \"./colors\";\nimport structure from \"./structure\";\nimport networks from \"./networks\";\nimport servers from \"./servers\";\nimport training from \"./training\";\nimport datasets from \"./datasets\";\n\nexport default combineReducers({\n  colors,\n  structure,\n  networks,\n  servers,\n  training,\n  datasets,\n});\n","export const SET_COLOR = `SET_COLOR`;\n\nexport const setColor = (property, value) => ({\n  type: SET_COLOR,\n  property,\n  value\n});\n","export const SET_STRUCT_PROP = `SET_STRUCT_PROP`;\n\nexport const setColor = (property, value) => ({\n  type: SET_STRUCT_PROP,\n  property,\n  value\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// components\nimport App from \"./components/App.jsx\";\n\n// styles\nimport \"./index.css\";\n\n// redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\n\n// reducers\nimport rootReducer from \"./redux/reducers\";\n\n// other\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const getDimension = a => {\n  const r = (a1, i) => {\n    if (a1.length) {\n      return r(a1[0], i + 1);\n    } else {\n      return i;\n    }\n  };\n\n  return r(a, 0);\n};\n\n/**\n * @callback deepMapCallback\n * @param {*} value\n * @param {Number} i\n * @param {Array} array\n */\n/**\n *\n * @param {Array} a the multidimensional array\n * @param {deepMapCallback} f the function to be mapped\n */\nconst deepMap = (a, f) =>\n  a.map((v, i, a1) => {\n    if (v && v.length) {\n      return deepMap(v, f);\n    } else {\n      return f(v, i, a1);\n    }\n  });\n\n/**\n * Dot product between 2 2D matrices\n * @param {Array<Array<Number>>} a\n * @param {Array<Array<Number>>} b\n */\nconst matrixDot = (a, b) => {\n  if (a[0].length != b.length)\n    throw new Error(\n      `invalid dimensions a -> x (${a[0].length}) should equal b -> y (${b.length})`,\n    );\n\n  const out = [];\n  for (let i = 0; i < a.length; i++) {\n    // y\n    out[i] = [];\n    for (let j = 0; j < b[0].length; j++) {\n      // x\n      out[i][j] = 0;\n      for (let j1 = 0; j1 < a[i].length; j1++) {\n        out[i][j] += a[i][j1] * b[j1][j];\n      }\n    }\n  }\n\n  return out;\n};\n\n/**\n * Multiply two matrices of the same shape elementwise\n * @param {Array<Array<Number>>} a\n * @param {Array<Array<Number>>} b\n */\nconst matrixMultiply = (a, b) => {\n  if (a.length != b.length) {\n    throw new Error(`invalid dimensions, both arrays should have equal shape`);\n  } else {\n    if (a[0] instanceof Array && b[0] instanceof Array) {\n      const out = [];\n      for (let i = 0; i < a.length; i++) {\n        out[i] = matrixMultiply(a[i], b[i]);\n      }\n      return out;\n    } else if (a[0] instanceof Array != b[0] instanceof Array) {\n      throw new Error(\n        `invalid dimensions, both arrays should have equal shape`,\n      );\n    } else {\n      const out = [];\n      for (let i = 0; i < a.length; i++) {\n        out[i] = a[i] * b[i];\n      }\n      return out;\n    }\n  }\n};\n\n/**\n * Add two matrices of the same shape elementwise\n * @param {Array<Array<Number>>} a\n * @param {Array<Array<Number>>} b\n */\nconst matrixAdd = (a, b) => {\n  if (a.length != b.length) {\n    throw new Error(`invalid dimensions, both arrays should have equal shape`);\n  } else {\n    if (a[0] instanceof Array && b[0] instanceof Array) {\n      const out = [];\n      for (let i = 0; i < a.length; i++) {\n        out[i] = matrixAdd(a[i], b[i]);\n      }\n      return out;\n    } else if (a[0] instanceof Array != b[0] instanceof Array) {\n      throw new Error(\n        `invalid dimensions, both arrays should have equal shape`,\n      );\n    } else {\n      const out = [];\n      for (let i = 0; i < a.length; i++) {\n        out[i] = a[i] + b[i];\n      }\n      return out;\n    }\n  }\n};\n\nconst transpose = a => {\n  if (getDimension(a) > 2)\n    throw new Error(`transpose supports up to 2d arrays`);\n\n  if (!a[0].length) a = [a];\n\n  const out = [];\n\n  for (let i = 0; i < a[0].length; i++) {\n    out[i] = [];\n    for (let j = 0; j < a.length; j++) {\n      out[i][j] = a[j][i];\n    }\n  }\n\n  return out;\n};\n\n/**\n * Flips kernels (array of 3d kernels, flips only kernels)\n * @param {Array<Array<Array<Array<Number>>>>} a\n */\nconst doubleInverse = a => {\n  if (getDimension(a) == 1) {\n    return doubleInverse([[[a]]])[0][0][0];\n  } else if (getDimension(a) == 2) {\n    return doubleInverse([[a]])[0][0];\n  } else if (getDimension(a) == 3) {\n    return doubleInverse([a])[0];\n  } else {\n    const out = [];\n    for (let f = 0; f < a.length; f++) {\n      out[f] = [];\n\n      for (let z = 0; z < a[f].length; z++) {\n        out[f][z] = [];\n\n        for (let y = 0; y < a[f][z].length; y++) {\n          out[f][z][y] = [];\n\n          for (let x = 0; x < a[f][z][y].length; x++) {\n            out[f][z][y][x] =\n              a[f][z][a[f][z].length - y - 1][a[f][z][y].length - x - 1];\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n\n/**\n * correlates a 3D input with a 4D filter with a 3D output\n * @param {Array<Array<Array<Number>>>} a input array\n * @param {Array<Array<Array<Array<Number>>>>} f array of filters\n * @param {Number} s stride\n * @param {Number} p zero padding\n * @param {Number} b array of biases (array of biases for each output layer)\n */\nconst correlate = (inputs, filters, stride = 1, padding = 0, b = null) => {\n  if (filters[0].length != inputs.length) {\n    throw new Error(\n      `filter depth(${filters[0].length}) doesnt match input depth(${inputs.length})`,\n    );\n  }\n\n  if (filters[0][0].length != filters[0][0][0].length) {\n    throw new Error(\n      `filter should be a square matrix(${filters[0][0].length} != ${filters[0][0][0].length})`,\n    );\n  }\n\n  if (b && b.length != filters.length)\n    throw new Error(\n      `bias depth(${b.length}), should match output depth(${filters.length})`,\n    );\n\n  const F = filters[0][0].length; // Filter height/width\n\n  const D = inputs.length,\n    H = parseInt((inputs[0].length - F + 2 * padding) / stride + 1), // output height\n    W = parseInt((inputs[0][0].length - F + 2 * padding) / stride + 1); // output width\n\n  return filters.map((filter, filterZ) => {\n    const out = [];\n\n    // for every output node\n    for (let i = 0; i < H; i++) {\n      out[i] = [];\n      for (let j = 0; j < W; j++) {\n        let sum = b ? b[filterZ] : 0;\n        for (let z = 0; z < D; z++) {\n          //for every node in filter\n          for (let k = 0; k < F; k++) {\n            for (let h = 0; h < F; h++) {\n              // (h and k are filter coordinates)\n\n              const i1 = i * stride + k - padding;\n              const j1 = j * stride + h - padding;\n\n              if (\n                i1 >= 0 &&\n                i1 < inputs[0].length &&\n                j1 >= 0 &&\n                j1 < inputs[0][0].length\n              )\n                sum += inputs[z][i1][j1] * filter[z][k][h];\n            }\n          }\n        }\n        out[i][j] = sum;\n      }\n    }\n\n    return out;\n  });\n};\n\n/**\n * This be the same as correlate, but with a flipped filter\n * @param {Array<Array<Array<Number>>>} a input array\n * @param {Array<Array<Array<Array<Number>>>>} f array of filters\n * @param {Number} s stride\n * @param {Number} p zero padding\n * @param {*} b\n */\nconst convolute = (a, f, s = 1, p = 0, b = null) => {\n  return correlate(a, doubleInverse(f), s, p, b);\n};\n\nconst max = a => {\n  let max = -Infinity;\n  deepMap(a, x => {\n    if (x > max) {\n      max = x;\n    }\n  });\n  return max;\n};\n\nconst sum = a => {\n  let sum = 0;\n  deepMap(a, x => {\n    sum += x;\n  });\n  return sum;\n};\n\nconst softmax = a => {\n  const exp = deepMap(a, x => Math.exp(x));\n  const sum1 = sum(exp);\n  return deepMap(exp, x => x / sum1);\n};\n\nconst maxIndex = a => {\n  if (getDimension(a) == 1) {\n    let max = a[0];\n    let index = 0;\n    for (let i = 1; i < a.length; i++) {\n      if (a[i] > max) {\n        max = a[i];\n        index = i;\n      }\n    }\n    return index;\n  } else {\n    throw new Error(`maxIndex works only on 1d arrays`);\n  }\n};\n\n/**\n * update matrix a with da multiplied by a coefficient\n * @param {Array<Array<Number>>} a matrix to be updated\n * @param {Array<Array<Number>>} dA delta a\n * @param {Number} c the coefficient for Da to be multiplied with\n */\nconst update2Dmatrix = (a, dA, c) =>\n  a.map((v, i) => {\n    if (v && v.length) {\n      return update2Dmatrix(a[i], dA[i], c);\n    } else {\n      return a[i] + dA[i] * c;\n    }\n  });\n\n/**\n *\n * @param {Array<Array<Array<Array<Number>>>>} f the filter used in the correlation\n * @param {Array<Array<Array<Number>>>} dOut derivative od the next layer\n * @param {Array<Array<Array<Number>>>} input the input used at the correlation\n * @param {Number} s stride\n * @param {Number} p padding\n */\nconst backPropagateCorrelation = (f, dOut, input, s, p) => {\n  if (getDimension(input) == 3 && getDimension(f) == 4) {\n    if (f[0].length != input.length) {\n      throw new Error(`filter depth doesnt match input depth`);\n    }\n\n    //depths dont mix, so depth is the same for input and filter\n    //create an array with the same dimensions as filter\n    const dF = [];\n\n    // m -> filter number\n    for (let m = 0; m < f.length; m++) {\n      dF[m] = [];\n      for (let f_d = 0; f_d < f[m].length; f_d++) {\n        dF[m][f_d] = [];\n        //console.log(m, f_d, f[m][f_d].length);\n        for (let f_i = 0; f_i < f[m][f_d].length; f_i++) {\n          dF[m][f_d][f_i] = new Array(f[m][f_d][f_i].length).fill(0);\n          for (let f_j = 0; f_j < f[m][f_d][f_i].length; f_j++) {\n            for (let dOut_i = 0; dOut_i < dOut[m].length; dOut_i++) {\n              for (let dOut_j = 0; dOut_j < dOut[m][dOut_i].length; dOut_j++) {\n                //dOut[m][dOut_i][dOut_j]\n                //     ^ this is important\n\n                const in_i1 = dOut_i * s + p + f_i;\n                const in_j1 = dOut_j * s + p + f_j;\n\n                if (\n                  in_i1 >= 0 &&\n                  in_i1 < input[f_d].length &&\n                  in_j1 >= 0 &&\n                  in_j1 < input[f_d][in_i1].length\n                )\n                  dF[m][f_d][f_i][f_j] +=\n                    dOut[m][dOut_i][dOut_j] * input[f_d][in_i1][in_j1];\n              }\n            }\n          }\n        }\n      }\n    }\n    const dI = [];\n    for (let m = 0; m < f.length; m++) {\n      for (let in_d = 0; in_d < input.length; in_d++) {\n        dI[in_d] = [];\n        //note: f_d and in_d are the more or less the same thing\n        for (let in_i = 0; in_i < input[in_d].length; in_i++) {\n          dI[in_d][in_i] = new Array(input[in_d][in_i].length).fill(0);\n          for (let in_j = 0; in_j < input[in_d][in_i].length; in_j++) {\n            for (let dOut_i = 0; dOut_i < dOut[m].length; dOut_i++) {\n              for (let dOut_j = 0; dOut_j < dOut[m][dOut_i].length; dOut_j++) {\n                //coordinates of the filter value that affected input[in_i][in_j] => dOut[m][dOut_i][dOut_j]\n                const f_i1 = in_i - dOut_i * s + p;\n                const f_j1 = in_j - dOut_j * s + p;\n\n                if (!dI[in_d][in_i]) dI[in_d][in_i] = [];\n\n                if (\n                  f_i1 >= 0 &&\n                  f_i1 < f[m][in_d].length &&\n                  f_j1 >= 0 &&\n                  f_j1 < f[m][in_d][f_i1].length\n                )\n                  // prettier-ignore\n                  dI[in_d][in_i][in_j] += dOut[m][dOut_i][dOut_j] * f[m][in_d][f_i1][f_j1];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    const dB = dOut.map(dOutM => sum(dOutM));\n\n    return {\n      dF,\n      dI,\n      dB,\n    };\n  } else {\n    throw new Error(\n      `invalid array dimension (${getDimension(input)}, ${getDimension(f)})`,\n    );\n  }\n};\n\n/**\n * Reduces x and y dimensions of an array by max pooling\n * @param {Array<Array<Array<Number>>>} a the input array\n * @param {Number} f filter size\n * @param {Number} s stride\n * @param {boolean} coordinateMode return only coordinates of the max number\n */\nconst maxPool = (a, f, s, coordinateMode = false) => {\n  if (getDimension(a) == 3) {\n    return a.map(layer2d => {\n      const outY = (layer2d.length - f) / s + 1;\n      const outX = (layer2d[0].length - f) / s + 1;\n\n      let outLayer = [];\n      for (let y = 0; y < outY; y++) {\n        outLayer[y] = [];\n        for (let x = 0; x < outX; x++) {\n          let max = layer2d[y * s][x * s];\n          let maxCoords = {x: x * s, y: y * s};\n\n          for (let i = 0; i < f; i++) {\n            for (let j = 0; j < f; j++) {\n              let y1 = y * s + i;\n              let x1 = x * s + j;\n\n              if (layer2d[y1][x1] > max) {\n                max = layer2d[y1][x1];\n                maxCoords = {x: x1, y: y1};\n              }\n            }\n          }\n          if (coordinateMode) outLayer[y][x] = maxCoords;\n          else outLayer[y][x] = max;\n        }\n      }\n      return outLayer;\n    });\n  } else {\n    throw new Error(\n      `invalid array dimension (${getDimension(a)}), should be 3`,\n    );\n  }\n};\n\n/**\n * Converts an n-dimensional to a 1-dimensional array\n * @param {Array} arr1 n-dimensional array\n */\nconst flattenDeep = arr1 =>\n  arr1.reduce(\n    (acc, val) => (val.length ? acc.concat(flattenDeep(val)) : acc.concat(val)),\n    [],\n  );\n\nconst deepNormalize = (arr, max1) => {\n  if (!max1) {\n    max1 = max(arr);\n  }\n  return deepMap(arr, e => e / max1);\n};\n\nconst vectorize = (label, length) => {\n  const outArr = new Array(length).fill(0);\n  outArr[label] = 1;\n  return outArr;\n};\n\n/**\n * Creates an array with the same shape but all the values are 0\n * @param {Array} arr\n */\nconst deepCopyArrayShape = arr =>\n  arr.map(i => (i instanceof Array ? deepCopyArrayShape(i) : 0));\n\nexport {\n  matrixMultiply,\n  matrixDot,\n  transpose,\n  convolute,\n  doubleInverse,\n  correlate,\n  getDimension,\n  maxPool,\n  flattenDeep,\n  matrixAdd,\n  deepMap,\n  backPropagateCorrelation,\n  update2Dmatrix,\n  max,\n  sum,\n  softmax,\n  maxIndex,\n  deepNormalize,\n  vectorize,\n  deepCopyArrayShape,\n};\n","module.exports = __webpack_public_path__ + \"static/media/cnnjs-logo.09950e4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/gears.1e6df7cf.svg\";"],"sourceRoot":""}